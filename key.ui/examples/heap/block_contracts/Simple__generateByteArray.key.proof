\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:showSatisfiability",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "soundDefaultContracts" : "soundDefaultContracts:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 100000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "src";

\proofObligation 
// Proof-Obligation settings
{ 
    "class" : "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
    "contract" : "Simple[Simple::generateByteArray()].JML normal_behavior operation contract.0",
    "name" : "Simple[Simple::generateByteArray()].JML normal_behavior operation contract.0"
 }

\proof {
(keyLog "0" (keyUser "christoph" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))
(keyLog "2" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))

(autoModeTime "1443")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "Class_invariant_axiom_for_Simple" (formula "5") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "true_left" (formula "5"))
   (rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_generateByteArray,savedHeapBefore_generateByteArray,lenBefore_generateByteArray,arrayBefore_generateByteArray"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "len"))
    (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_getLength,result_getLength,exc_0,heapAfter_getLength,anon_heap_getLength") (contract "Simple[Simple::getLength()].JML normal_behavior operation contract.0") (modality "diamond"))
   (branch "Post (getLength)"
       (builtin "One Step Simplification" (formula "6"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "8"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
       (builtin "Block Contract (Internal)" (formula "10") (newnames "anonOut_heap,result_generateByteArray_0,exc_1,heap_Before_BLOCK,savedHeap_Before_BLOCK,len_Before_BLOCK#54,o,f,anonOut_len"))
      (branch "Validity"
          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "4")) (ifInst ""  (formula "3")) (ifInst ""  (formula "10")))
          (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "9"))
         (rule "eqSymm" (formula "12") (term "1,0,0,1,0,1"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "exc_1_1"))
         (rule "assignment" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "2")))
         (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
         (rule "hideAuxiliaryEq" (formula "10"))
         (rule "Class_invariant_axiom_for_Simple" (formula "8") (inst "sk=sk_1") (ifseqformula "3"))
         (branch "Use Axiom"
            (rule "true_left" (formula "8"))
            (rule "remove_parentheses_right" (formula "10") (term "1"))
            (rule "condition_not_simple" (formula "10") (term "1") (inst "#v0=b"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "b"))
            (rule "less_than_comparison_simple" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,1,0"))
            (rule "condition_simple" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "tryEmpty" (formula "10") (term "1"))
            (rule "blockEmptyLabel" (formula "10") (term "1"))
            (rule "blockEmpty" (formula "10") (term "1"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "emptyModality" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_geqRight" (formula "10"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "ifthenelse_split" (formula "1") (term "0"))
            (branch "result_getLength <= -1 TRUE"
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch "result_getLength <= -1 FALSE"
               (rule "close" (formula "10") (ifseqformula "1"))
            )
         )
         (branch "Show Axiom Satisfiability"
             (builtin "One Step Simplification" (formula "10"))
            (rule "closeTrue" (formula "10"))
         )
      )
      (branch "Precondition"
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "4")) (ifInst ""  (formula "3")) (ifInst ""  (formula "9")))
         (rule "wellFormedAnonEQ" (formula "10") (term "0") (ifseqformula "6"))
         (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
         (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "1"))
         (rule "close" (formula "11") (ifseqformula "3"))
      )
      (branch "Usage"
          (builtin "One Step Simplification" (formula "11"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "9"))
         (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "pullOutSelect" (formula "12") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfAnon" (formula "12"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "pullOutSelect" (formula "12") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
         (rule "applyEq" (formula "13") (term "2,0") (ifseqformula "12"))
         (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "commute_or" (formula "14"))
         (rule "Class_invariant_axiom_for_Simple" (formula "8") (inst "sk=sk_1") (ifseqformula "3"))
         (branch "Use Axiom"
            (rule "true_left" (formula "8"))
            (rule "commute_and" (formula "12") (term "0,0"))
            (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=b"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "b"))
            (rule "inequality_comparison_simple" (formula "15") (term "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "replace_known_left" (formula "15") (term "0,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "ifSplit" (formula "15"))
            (branch "if b true"
                (builtin "One Step Simplification" (formula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if b false"
                (builtin "One Step Simplification" (formula "16"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "blockEmpty" (formula "15") (term "1"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "array"))
               (rule "assignment" (formula "15") (term "1"))
                (builtin "One Step Simplification" (formula "15"))
                (builtin "Block Contract (Internal)" (formula "15") (newnames "anonOut_heap_0,result_generateByteArray_1,exc_2,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,array_Before_BLOCK#51,o,f,anonOut_array"))
               (branch "Validity"
                   (builtin "One Step Simplification" (formula "16"))
                   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "4")) (ifInst ""  (formula "3")) (ifInst ""  (formula "15")))
                  (rule "andLeft" (formula "14"))
                  (rule "eqSymm" (formula "17") (term "1,0,0,1,0,1"))
                  (rule "variableDeclarationAssign" (formula "17") (term "1"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "exc_2_1"))
                  (rule "assignment" (formula "17") (term "1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                  (rule "simplifySelectOfAnon" (formula "15"))
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
                  (rule "ifthenelse_negated" (formula "15") (term "0"))
                  (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                  (rule "ifEqualsTRUE" (formula "15"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "pullOutSelect" (formula "15") (term "0,0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                  (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "18")) (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,1") (ifseqformula "15"))
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "15"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "replace_known_left" (formula "15") (term "0,0,1") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                  (rule "true_left" (formula "15"))
                  (rule "hideAuxiliaryEqConcrete" (formula "15"))
                  (rule "arrayCreation" (formula "16") (term "1") (newnames "dim0#125") (inst "#v0=b_arr"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "b_arr"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "dim0"))
                  (rule "assignment" (formula "16") (term "1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=b_1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "b_1"))
                  (rule "less_than_comparison_simple" (formula "16") (term "1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,1,0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "16") (term "0,0,0,1,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "ifSplit" (formula "16"))
                  (branch "if b_1 true"
                      (builtin "One Step Simplification" (formula "17"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if b_1 false"
                      (builtin "One Step Simplification" (formula "17"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "16") (term "1") (newnames "length#126") (inst "#v0=b_arr_1"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "b_arr_1"))
                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "length_1"))
                     (rule "assignment" (formula "16") (term "1"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "newObject"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "16") (term "1") (newnames "length#127") (inst "#v0=b_arr_2"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "b_arr_2"))
                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "length_2"))
                     (rule "assignment" (formula "16") (term "1"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "allocateInstanceWithLength" (formula "16"))
                      (builtin "One Step Simplification" (formula "17"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "ifEqualsTRUE" (formula "17"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "orRight" (formula "17"))
                     (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=java_lang_Object_created__5"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "ifEqualsTRUE" (formula "17"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "orRight" (formula "17"))
                     (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "hideAuxiliaryEqConcrete2" (formula "21"))
                     (rule "hideAuxiliaryEqConcrete2" (formula "19"))
                     (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "methodCall" (formula "22") (term "1"))
                     (branch "Normal Execution (newObject != null )"
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
                        (rule "false_right" (formula "22"))
                        (rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "assignment_write_attribute_this" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallWithinClass" (formula "22") (term "1"))
                        (rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "arrayInitialisation" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "polySimp_elimSub" (formula "22") (term "2,1,0,1,0"))
                        (rule "mul_literals" (formula "22") (term "1,2,1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "2,1,0,1,0"))
                        (rule "applyEq" (formula "22") (term "1,2,1,0,1,0") (ifseqformula "1"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "assignment_write_attribute_this" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallReturnIgnoreResult" (formula "22") (term "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "methodCallReturn" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "tryEmpty" (formula "22") (term "1"))
                        (rule "blockEmptyLabel" (formula "22") (term "1"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "emptyModality" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "17")) (ifInst ""  (formula "20")))
                        (rule "allRight" (formula "22") (inst "sk=f_0"))
                        (rule "allRight" (formula "22") (inst "sk=o_0"))
                        (rule "orRight" (formula "22"))
                        (rule "eqSymm" (formula "23"))
                        (rule "selectCreatedOfAnonAsFormula" (formula "22") (term "0,1"))
                        (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "24"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "pullOutSelect" (formula "23") (term "0,0,0,1") (inst "selectSK=java_lang_Object_created__6"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfMemset" (formula "2"))
                        (rule "elementOfArrayRange" (formula "2") (term "0,0,0") (inst "iv=iv"))
                        (rule "eqSymm" (formula "2") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,1,0,0,0"))
                        (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=f_0_2"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replaceKnownSelect_taclet01010200_11" (formula "1") (term "0,0,1,0,0"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=f_0_3"))
                        (rule "simplifySelectOfStore" (formula "3"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "castDel" (formula "3") (term "1,0"))
                        (rule "eqSymm" (formula "3") (term "0,0,0"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=f_0_5"))
                        (rule "simplifySelectOfStore" (formula "4"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "castDel" (formula "4") (term "1,0"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "eqSymm" (formula "4") (term "0,0,0"))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=f_0_6"))
                        (rule "simplifySelectOfStore" (formula "4"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "castDel" (formula "4") (term "1,0"))
                        (rule "eqSymm" (formula "4") (term "0,0,0"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=f_0_7"))
                        (rule "simplifySelectOfCreate" (formula "4"))
                        (rule "replaceKnownSelect_taclet01010200_13" (formula "4") (term "2,0"))
                        (rule "castDel" (formula "4") (term "1,0"))
                        (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,1,0,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "commute_and" (formula "9") (term "0,0"))
                        (rule "commute_and" (formula "2") (term "0,0"))
                        (rule "commute_and" (formula "7") (term "0,0"))
                        (rule "commute_and" (formula "6") (term "0,0"))
                        (rule "commute_and" (formula "5") (term "0,0"))
                        (rule "commute_and" (formula "4") (term "0,0"))
                        (rule "ifthenelse_split" (formula "22") (term "0"))
                        (branch " !result_generateByteArray_0 = null & !result_generateByteArray_0.<created> = TRUE TRUE"
                           (rule "andLeft" (formula "22"))
                           (rule "notLeft" (formula "22"))
                           (rule "notLeft" (formula "22"))
                           (rule "applyEqReverse" (formula "23") (term "2,0") (ifseqformula "22"))
                           (rule "applyEqReverse" (formula "23") (term "0,0,0,0,0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "replace_known_right" (formula "22") (term "0,1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "ifthenelse_negated" (formula "22") (term "0"))
                           (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "23"))
                           (rule "ifEqualsTRUE" (formula "22"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "hideAuxiliaryEqConcrete" (formula "23"))
                           (rule "cnf_rightDist" (formula "22"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "4"))
                              (rule "notLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "33") (term "0,0,0,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "notRight" (formula "31"))
                              (rule "ifthenelse_negated" (formula "2") (term "0"))
                              (rule "commute_or" (formula "1"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " o_0.<created>@anon_heap_getLength<<anonHeapFunction>> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "0,1,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqRigid" (formula "31") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "31") (term "0") (ifseqformula "14"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "24") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "11"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "28"))
                                       (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "23") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "31") (term "0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "27") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "false_right" (formula "18"))
                                             (rule "applyEqRigid" (formula "26") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "26") (term "0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "21") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "20")))
                                                (rule "false_right" (formula "24"))
                                                (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "28") (ifseqformula "1"))
                                             )
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "close" (formula "31") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch " o_0.<created>@anon_heap_getLength<<anonHeapFunction>> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "27") (term "2,0") (ifseqformula "2"))
                                    (rule "castTrueImpliesOriginalTrue" (formula "27") (ifseqformula "1"))
                                    (rule "closeTrue" (formula "27"))
                                 )
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "25") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "25") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "22") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEq" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "31") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "31") (term "0") (ifseqformula "16"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "27"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "notRight" (formula "27"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "close" (formula "24") (ifseqformula "2"))
                                       )
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "29") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")))
                                                (rule "false_right" (formula "24"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "false_right" (formula "22"))
                                                (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEqRigid" (formula "32") (term "2,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "28") (ifseqformula "1"))
                                             )
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "close" (formula "32") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_and" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "cut_direct" (formula "29") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "false_right" (formula "30"))
                                 (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "false_right" (formula "22"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "5") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeTrue" (formula "23"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "notRight" (formula "30"))
                                 (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "notRight" (formula "22"))
                                 (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "7") (term "0,1,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "9"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "20") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "27") (term "0") (ifseqformula "6"))
                                       (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "20") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "false_right" (formula "20"))
                                          (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "8"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "22") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "24") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")))
                                                (rule "false_right" (formula "24"))
                                                (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "false_right" (formula "21"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "false_right" (formula "21"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEqRigid" (formula "28") (term "2,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "22") (ifseqformula "1"))
                                             )
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "close" (formula "30") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch " !result_generateByteArray_0 = null & !result_generateByteArray_0.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "23") (term "2,0") (ifseqformula "22"))
                           (rule "applyEqReverse" (formula "23") (term "0,0,0,0,0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "commute_and" (formula "22") (term "0,0"))
                           (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "22"))
                           (rule "hideAuxiliaryEq" (formula "22"))
                           (rule "commute_or" (formula "22"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "3"))
                              (rule "notLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "notRight" (formula "30"))
                              (rule "ifthenelse_negated" (formula "2") (term "0"))
                              (rule "commute_or" (formula "1"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " o_0.<created>@anon_heap_getLength<<anonHeapFunction>> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "24") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "23") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEqRigid" (formula "30") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "30") (term "0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "26") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                             (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "false_right" (formula "20"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "applyEqRigid" (formula "28") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "28") (term "0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "21") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "20")))
                                                (rule "false_right" (formula "24"))
                                                (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "false_right" (formula "22"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "false_right" (formula "21"))
                                                (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "28") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "28") (term "0") (ifseqformula "12") (ifseqformula "26"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "24") (ifseqformula "1"))
                                             )
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "close" (formula "30") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch " o_0.<created>@anon_heap_getLength<<anonHeapFunction>> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "7") (term "0,1,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "23") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "30") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "30") (term "0") (ifseqformula "18"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "25") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "false_right" (formula "20"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "false_right" (formula "18"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "25") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "25") (term "0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "close" (formula "23") (ifseqformula "2"))
                                       )
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                             (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "23") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")))
                                                (rule "false_right" (formula "24"))
                                                (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "false_right" (formula "22"))
                                                (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "25") (ifseqformula "1"))
                                             )
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "close" (formula "31") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "31") (term "0,0,0,1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_and" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "cut_direct" (formula "28") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "false_right" (formula "22"))
                                 (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "5") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "notRight" (formula "29"))
                                 (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "notRight" (formula "22"))
                                 (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEq" (formula "29") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "29") (term "0") (ifseqformula "10"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "23") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = java.lang.Object::<created> & o_0 = b_arr_2 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "false_right" (formula "19"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "19") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Object::<transient> & o_0 = b_arr_2 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "false_right" (formula "20"))
                                          (rule "applyEqRigid" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "27") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "27") (term "0") (ifseqformula "7"))
                                          (rule "eqSymm" (formula "27"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "26"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "notRight" (formula "26"))
                                          (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "close" (formula "20") (ifseqformula "2"))
                                       )
                                       (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> & o_0 = b_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "false_right" (formula "20"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "22") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Object::<initialized> & o_0 = b_arr_2 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")))
                                                (rule "false_right" (formula "24"))
                                                (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "false_right" (formula "21"))
                                                (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "false_right" (formula "20"))
                                                (rule "applyEq" (formula "26") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "26") (term "0") (ifseqformula "8") (ifseqformula "24"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "21") (ifseqformula "1"))
                                             )
                                             (branch " o_0 = b_arr_2 & exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + anonOut_len) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "close" (formula "29") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Null Reference (newObject = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Precondition"
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "4")) (ifInst ""  (formula "3")) (ifInst ""  (formula "14")))
                  (rule "wellFormedAnon" (formula "15") (term "0"))
                  (rule "wellFormedAnonEQ" (formula "15") (term "0,0") (ifseqformula "6"))
                  (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "10"))
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")))
                  (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "ifEqualsTRUE" (formula "14"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "orRight" (formula "14"))
                  (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_lang_Object_created__3"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                  (rule "close" (formula "15") (ifseqformula "3"))
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "16"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "15"))
                  (rule "notLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "notLeft" (formula "15"))
                  (rule "notLeft" (formula "15"))
                  (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "selectCreatedOfAnonAsFormula" (formula "17") (term "1"))
                  (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                  (rule "simplifySelectOfAnon" (formula "16"))
                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")))
                  (rule "ifthenelse_negated" (formula "16") (term "0"))
                  (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "17"))
                  (rule "ifEqualsTRUE" (formula "16"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "pullOutSelect" (formula "18") (term "0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                  (rule "simplifySelectOfAnon" (formula "18"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "pullOutSelect" (formula "16") (term "0,0,0,1") (inst "selectSK=java_lang_Object_created__4"))
                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                  (rule "simplifySelectOfAnon" (formula "16"))
                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")))
                  (rule "ifthenelse_negated" (formula "16") (term "0"))
                  (rule "pullOutSelect" (formula "19") (term "2,0") (inst "selectSK=java_lang_Object_created__5"))
                  (rule "applyEq" (formula "20") (term "0,0,1,0,0") (ifseqformula "19"))
                  (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "pullOutSelect" (formula "16") (term "1,0") (inst "selectSK=java_lang_Object_created__6"))
                  (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "16"))
                  (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "24")) (ifInst ""  (formula "23")))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0") (ifseqformula "16"))
                  (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "16"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "hideAuxiliaryEqConcrete" (formula "18"))
                  (rule "shift_paren_or" (formula "20"))
                  (rule "commute_or" (formula "20") (term "0"))
                  (rule "cnf_rightDist" (formula "17"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "commute_or" (formula "17"))
                  (rule "commute_and" (formula "19") (term "0,0"))
                  (rule "ifUnfold" (formula "24") (term "1") (inst "#boolv=b_1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "b_1"))
                  (rule "inequality_comparison_simple" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "replace_known_left" (formula "24") (term "0,0,1,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "ifSplit" (formula "24"))
                  (branch "if b_1 true"
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if b_1 false"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "1"))
                     (rule "blockEmpty" (formula "24") (term "1"))
                     (rule "methodCallReturn" (formula "24") (term "1"))
                     (rule "assignment" (formula "24") (term "1"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "methodCallEmpty" (formula "24") (term "1"))
                     (rule "tryEmpty" (formula "24") (term "1"))
                     (rule "emptyModality" (formula "24") (term "1"))
                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                     (rule "eqSymm" (formula "24") (term "1,0,0,1"))
                     (rule "Class_invariant_axiom_for_Simple" (formula "24") (term "0") (inst "sk=sk_2") (ifseqformula "3"))
                     (branch "Use Axiom"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "allRight" (formula "24") (inst "sk=f_0"))
                        (rule "allRight" (formula "24") (inst "sk=o_0"))
                        (rule "orRight" (formula "24"))
                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "26"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfAnon" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__8"))
                        (rule "applyEq" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Show Axiom Satisfiability"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "closeTrue" (formula "24"))
                     )
                  )
               )
            )
         )
         (branch "Show Axiom Satisfiability"
             (builtin "One Step Simplification" (formula "15"))
            (rule "closeTrue" (formula "15"))
         )
      )
   )
   (branch "Exceptional Post (getLength)"
       (builtin "One Step Simplification" (formula "6"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "7"))
      (rule "close" (formula "10") (ifseqformula "9"))
   )
   (branch "Pre (getLength)"
       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
      (rule "Class_invariant_axiom_for_Simple" (formula "6") (inst "sk=sk_1") (ifseqformula "3"))
      (branch "Use Axiom"
         (rule "closeTrue" (formula "6"))
      )
      (branch "Show Axiom Satisfiability"
          (builtin "One Step Simplification" (formula "6"))
         (rule "closeTrue" (formula "6"))
      )
   )
)
(branch "Show Axiom Satisfiability"
    (builtin "One Step Simplification" (formula "6"))
   (rule "closeTrue" (formula "6"))
)
)
}
