\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:off",
        "Strings" : "Strings:on",
        "assertions" : "assertions:safe",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:ban",
        "sequences" : "sequences:on",
        "soundDefaultContracts" : "soundDefaultContracts:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 10000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_INVARIANT",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_NONE",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_ON",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "src";

\proofObligation 
// Proof-Obligation settings
{ 
    "class" : "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
    "contract" : "FreeConditions[FreeConditions::assertions0()].JML normal_behavior operation contract.0",
    "name" : "FreeConditions[FreeConditions::assertions0()].JML normal_behavior operation contract.0"
 }

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion ""))
(keyLog "1" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))
(keyLog "2" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))

(autoModeTime "95")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "assignment" (formula "3"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_assertions0,savedHeapBefore_assertions0"))
 (builtin "One Step Simplification" (formula "3"))
 (builtin "JML assume" (formula "3"))
 (builtin "One Step Simplification" (formula "3"))
(rule "impRight" (formula "3"))
(rule "preincrement" (formula "4") (term "1"))
(rule "activeUseStaticFieldWriteAccess" (formula "4") (term "1") (inst "#v0=i"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "i"))
(rule "compound_reference_cast_expression_primitive" (formula "4") (term "1") (inst "#v=i_1"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "i_1"))
(rule "remove_parentheses_right" (formula "4") (term "1"))
(rule "compound_addition_1" (formula "4") (term "1") (inst "#v=i_2"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "i_2"))
(rule "activeUseStaticFieldReadAccess" (formula "4") (term "1"))
(rule "assignment_read_static_attribute" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
(rule "assignmentAdditionInt" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "translateJavaAddInt" (formula "4") (term "0,1,0"))
(rule "add_literals" (formula "4") (term "0,1,0"))
(rule "widening_identity_cast_5" (formula "4") (term "1"))
(rule "assignment" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment_write_static_attribute" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
 (builtin "JML assert" (formula "4"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "4"))
   (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=FreeConditions_field_0"))
   (rule "simplifySelectOfStore" (formula "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "castDel" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "closeTrue" (formula "5"))
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "4"))
   (rule "impRight" (formula "4"))
   (rule "emptyStatement" (formula "5") (term "1"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=FreeConditions_field_0"))
   (rule "simplifySelectOfStore" (formula "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "castDel" (formula "1") (term "0"))
   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "methodCallEmpty" (formula "4") (term "1"))
   (rule "tryEmpty" (formula "4") (term "1"))
   (rule "emptyModality" (formula "4") (term "1"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "replaceKnownSelect_taclet1_0" (formula "4") (term "0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "4") (term "0"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "closeTrue" (formula "4"))
)
)
}
