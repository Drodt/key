\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:off",
        "optimisedSelectRules" : "optimisedSelectRules:on",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "soundDefaultContracts" : "soundDefaultContracts:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 6000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_NONE",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource ".";

\proofObligation 
// Proof-Obligation settings
{ 
    "class" : "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
    "contract" : "unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS::doLRS()].JML operation contract.0",
    "name" : "unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS::doLRS()].JML operation contract.0"
 }

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))
(keyLog "1" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))

(autoModeTime "3570")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "6") (term "0,2,0,0,1,0"))
(rule "mul_literals" (formula "6") (term "1,0,2,0,0,1,0"))
(rule "polySimp_addComm0" (formula "6") (term "0,2,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,0"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
(rule "add_zero_right" (formula "6") (term "0,0,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
(rule "mul_literals" (formula "5") (term "0,1,1,1,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "5") (term "0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "nnf_notAnd" (formula "5") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "6") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
(rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
(rule "nnf_imp2or" (formula "10") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "8") (ifseqformula "3"))
(rule "true_left" (formula "8"))
(rule "cnf_rightDist" (formula "5") (term "0"))
(rule "distr_forallAnd" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "commute_or" (formula "6") (term "0"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_doLRS,savedHeapBefore_doLRS"))
 (builtin "One Step Simplification" (formula "10"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "s"))
 (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_s_0_helper,result_s_0_helper,exc_0") (contract "unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS::s_0_helper()].JML normal_behavior operation contract.0") (modality "diamond"))
(branch "Post (s_0_helper)"
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "t"))
   (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "10") (ifseqformula "3"))
   (rule "true_left" (formula "10"))
    (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_t_0_helper,result_t_0_helper,exc_1") (contract "unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS::t_0_helper()].JML normal_behavior operation contract.0") (modality "diamond"))
   (branch "Post (t_0_helper)"
       (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "l"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "11") (ifseqformula "3"))
      (rule "true_left" (formula "11"))
      (rule "for_to_while" (formula "12") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x"))
      (rule "assignment" (formula "12") (term "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "elim_double_block_3" (formula "12") (term "1"))
      (rule "arrayLengthIsAShort" (formula "8") (term "0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
      (rule "leq_literals" (formula "8") (term "0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "loopScopeInvDia" (formula "12") (term "1") (newnames "x_0,l_0,t_0,s_0,o,f") (inst "#variant=a") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "#x=b") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
      (branch "Invariant Initially Valid"
          (builtin "One Step Simplification" (formula "12"))
         (rule "leq_literals" (formula "12") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "less_literals" (formula "12") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "eqSymm" (formula "12") (term "1,0,1"))
         (rule "polySimp_elimSub" (formula "12") (term "0,2,0,0,1,0,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,2,0,0,1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "12") (term "0,2,0,0,1,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1"))
         (rule "mul_literals" (formula "12") (term "1,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,1,0,0"))
         (rule "inEqSimp_subsumption1" (formula "12") (term "1,0") (ifseqformula "8"))
         (rule "leq_literals" (formula "12") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "nnf_imp2or" (formula "12") (term "0,1"))
         (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0,1"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1"))
         (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,1"))
         (rule "add_literals" (formula "12") (term "0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "12") (term "0,1,0,0,1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0,1"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "12") (term "0,0,0,0,1"))
         (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "allRight" (formula "12") (inst "sk=i_0"))
         (rule "orRight" (formula "12"))
         (rule "orRight" (formula "12"))
         (rule "inEqSimp_leqRight" (formula "12"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "13"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "3"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0,0") (ifseqformula "3"))
         (rule "allLeft" (formula "7") (inst "t=i_0"))
         (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
         (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
         (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
         (rule "leq_literals" (formula "7") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_leqRight" (formula "17"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "allLeft" (formula "10") (inst "t=i_0"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
         (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
         (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "10") (term "0,0,1"))
         (rule "leq_literals" (formula "10") (term "0,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "3"))
         (rule "qeq_literals" (formula "10") (term "0,0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
         (rule "andLeft" (formula "10"))
         (rule "inEqSimp_homoInEq1" (formula "10"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "1,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0"))
         (rule "add_zero_right" (formula "10") (term "0"))
         (rule "leq_literals" (formula "10"))
         (rule "closeFalse" (formula "10"))
      )
      (branch "Invariant Preserved and Used"
          (builtin "One Step Simplification" (formula "13"))
         (rule "eqSymm" (formula "13") (term "0,0,1,0,1,1,0,1,1,0,1"))
         (rule "eqSymm" (formula "13") (term "1,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "eqSymm" (formula "13") (term "1,0,1,0,0,1"))
         (rule "polySimp_elimSub" (formula "13") (term "0,2,0,0,1,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,2,0,0,1,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "13") (term "0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "13") (term "0,1,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "13") (term "0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "13") (term "0,2,0,0,1,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "13") (term "0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "13") (term "0,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "13") (term "0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,0,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "1,1,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "1,1,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0,1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "h"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "h_1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "h_2"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "a"))
         (rule "variableDeclaration" (formula "13") (term "1,1,0,1") (newnames "b"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,1,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,1,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "0,1,1,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,1"))
         (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1,0,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,1"))
         (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,0,0,1"))
         (rule "nnf_imp2or" (formula "13") (term "0,0,0,0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,0,0,0,1"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_imp2or" (formula "13") (term "0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0,0") (ifseqformula "2"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "2"))
         (rule "emptyModality" (formula "15") (term "1"))
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "8")))
         (rule "impRight" (formula "15"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "cnf_rightDist" (formula "1") (term "0"))
         (rule "distr_forallAnd" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "commute_or" (formula "1") (term "0"))
         (rule "ifElseUnfold" (formula "20") (term "1") (inst "#boolv=b_1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_1"))
         (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=i_1") (inst "#v0=i"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "i"))
         (rule "assignment" (formula "20") (term "1"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_1"))
         (rule "eval_order_array_access6" (formula "20") (term "1") (inst "#v0=i_arr"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_arr"))
         (rule "eval_order_access2" (formula "20") (term "1") (inst "#v0=s_1"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "s_1"))
         (rule "assignment_read_attribute_this" (formula "20") (term "1"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "assignment_read_attribute" (formula "20") (term "1"))
         (branch "Normal Execution (s_1 != null)"
             (builtin "One Step Simplification" (formula "21"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "assignment_read_length" (formula "21") (term "1"))
            (branch "Normal Execution (i_arr != null)"
                (builtin "One Step Simplification" (formula "22"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "less_than_comparison_simple" (formula "22") (term "1"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0"))
               (rule "ifElseSplit" (formula "22"))
               (branch "if b_1 true"
                   (builtin "One Step Simplification" (formula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "23") (term "1"))
                  (rule "variableDeclaration" (formula "23") (term "1") (newnames "temp0"))
                  (rule "eval_order_access2" (formula "23") (term "1") (inst "#v0=s_2"))
                  (rule "variableDeclarationAssign" (formula "23") (term "1"))
                  (rule "variableDeclaration" (formula "23") (term "1") (newnames "s_2"))
                  (rule "assignment_read_attribute_this" (formula "23") (term "1"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "assignment_read_attribute" (formula "23") (term "1"))
                  (branch "Normal Execution (s_2 != null)"
                      (builtin "One Step Simplification" (formula "24"))
                      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
                     (rule "false_right" (formula "23"))
                     (rule "variableDeclarationAssign" (formula "23") (term "1"))
                     (rule "variableDeclaration" (formula "23") (term "1") (newnames "temp1"))
                     (rule "eval_order_array_access4" (formula "23") (term "1") (inst "#v0=i_arr_1"))
                     (rule "variableDeclarationAssign" (formula "23") (term "1"))
                     (rule "variableDeclaration" (formula "23") (term "1") (newnames "i_arr_1"))
                     (rule "eval_order_access2" (formula "23") (term "1") (inst "#v0=s_3"))
                     (rule "variableDeclarationAssign" (formula "23") (term "1"))
                     (rule "variableDeclaration" (formula "23") (term "1") (newnames "s_3"))
                     (rule "assignment_read_attribute_this" (formula "23") (term "1"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "assignment_read_attribute" (formula "23") (term "1"))
                     (branch "Normal Execution (s_3 != null)"
                         (builtin "One Step Simplification" (formula "24"))
                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
                        (rule "false_right" (formula "23"))
                        (rule "assignment_array2" (formula "23") (term "1"))
                        (branch "Normal Execution (i_arr_1 != null)"
                            (builtin "One Step Simplification" (formula "24"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "orRight" (formula "23"))
                           (rule "orRight" (formula "23"))
                           (rule "inEqSimp_ltRight" (formula "25"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "variableDeclarationAssign" (formula "26") (term "1"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "temp2"))
                           (rule "eval_order_array_access4" (formula "26") (term "1") (inst "#v0=i_arr_2"))
                           (rule "variableDeclarationAssign" (formula "26") (term "1"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "i_arr_2"))
                           (rule "eval_order_access2" (formula "26") (term "1") (inst "#v0=s_4"))
                           (rule "variableDeclarationAssign" (formula "26") (term "1"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "s_4"))
                           (rule "assignment_read_attribute_this" (formula "26") (term "1"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "assignment_read_attribute" (formula "26") (term "1"))
                           (branch "Normal Execution (s_4 != null)"
                               (builtin "One Step Simplification" (formula "27"))
                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "23")))
                              (rule "false_right" (formula "26"))
                              (rule "eval_order_array_access5" (formula "26") (term "1") (inst "#v1=i_2") (inst "#ar1=i_arr_3"))
                              (rule "variableDeclarationAssign" (formula "26") (term "1"))
                              (rule "variableDeclaration" (formula "26") (term "1") (newnames "i_arr_3"))
                              (rule "assignment" (formula "26") (term "1"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "variableDeclarationAssign" (formula "26") (term "1"))
                              (rule "variableDeclaration" (formula "26") (term "1") (newnames "i_2"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "qeq_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "6"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "assignmentSubtractionInt" (formula "24") (term "1"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "translateJavaSubInt" (formula "24") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "24") (term "0,1,0"))
                              (rule "mul_literals" (formula "24") (term "1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                              (rule "assignment_array2" (formula "24") (term "1"))
                              (branch "Normal Execution (i_arr_3 != null)"
                                  (builtin "One Step Simplification" (formula "25"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                 (rule "orRight" (formula "24"))
                                 (rule "inEqSimp_leqRight" (formula "24"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltRight" (formula "25"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "variableDeclarationAssign" (formula "26") (term "1"))
                                 (rule "variableDeclaration" (formula "26") (term "1") (newnames "length_1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,0,1,0") (ifseqformula "8"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "14"))
                                  (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_lcp,result_lcp,exc_2") (contract "unsatcore_after.competition.postcond5.scope333.LCP[unsatcore_after.competition.postcond5.scope333.LCP::lcp([I,int,int)].JML normal_behavior operation contract.0") (modality "diamond"))
                                 (branch "Post (lcp)"
                                     (builtin "One Step Simplification" (formula "26"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "eqSymm" (formula "25") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "23") (term "1"))
                                    (rule "polySimp_elimSub" (formula "24") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "23"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "24"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                    (rule "assignment" (formula "30") (term "1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                    (rule "ifUnfold" (formula "30") (term "1") (inst "#boolv=b_2"))
                                    (rule "variableDeclaration" (formula "30") (term "1") (newnames "b_2"))
                                     (builtin "Use Operation Contract" (formula "30") (newnames "heapBefore_b_helper,result_b_helper,exc_3") (contract "unsatcore_after.competition.postcond5.scope333.LRS[unsatcore_after.competition.postcond5.scope333.LRS::b_helper()].JML normal_behavior operation contract.0") (modality "diamond"))
                                    (branch "Post (b_helper)"
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "assignment" (formula "32") (term "1"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "27") (ifseqformula "10"))
                                       (rule "true_left" (formula "27"))
                                       (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                       (rule "allLeft" (formula "16") (inst "t=x_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "16") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))), x_0)"))
                                       (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "14") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                       (rule "times_zero_2" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "allLeft" (formula "15") (inst "t=x_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "15") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))), x_0)"))
                                       (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "13") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                       (rule "times_zero_2" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "13") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "13") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "23"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "28"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1"))
                                       (rule "allLeft" (formula "15") (inst "t=x_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "15") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "18"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "25"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "29"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1"))
                                       (rule "ifSplit" (formula "38"))
                                       (branch "if b_2 true"
                                           (builtin "One Step Simplification" (formula "39"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "eval_order_array_access4" (formula "39") (term "1") (inst "#v0=i_arr_4"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "i_arr_4"))
                                          (rule "eval_order_access2" (formula "39") (term "1") (inst "#v0=s_5"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "s_5"))
                                          (rule "assignment_read_attribute_this" (formula "39") (term "1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "assignment_read_attribute" (formula "39") (term "1"))
                                          (branch "Normal Execution (s_5 != null)"
                                              (builtin "One Step Simplification" (formula "40"))
                                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")))
                                             (rule "false_right" (formula "39"))
                                             (rule "assignment_array2" (formula "39") (term "1"))
                                             (branch "Normal Execution (i_arr_4 != null)"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "38")))
                                                (rule "orRight" (formula "39"))
                                                (rule "inEqSimp_ltRight" (formula "40"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "40"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "eval_order_array_access4" (formula "41") (term "1") (inst "#v0=i_arr_5"))
                                                (rule "variableDeclarationAssign" (formula "41") (term "1"))
                                                (rule "variableDeclaration" (formula "41") (term "1") (newnames "i_arr_5"))
                                                (rule "eval_order_access2" (formula "41") (term "1") (inst "#v0=s_6"))
                                                (rule "variableDeclarationAssign" (formula "41") (term "1"))
                                                (rule "variableDeclaration" (formula "41") (term "1") (newnames "s_6"))
                                                (rule "assignment_read_attribute_this" (formula "41") (term "1"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "assignment_read_attribute" (formula "41") (term "1"))
                                                (branch "Normal Execution (s_6 != null)"
                                                    (builtin "One Step Simplification" (formula "42"))
                                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "38")))
                                                   (rule "false_right" (formula "41"))
                                                   (rule "eval_order_array_access5" (formula "41") (term "1") (inst "#v1=i_3") (inst "#ar1=i_arr_6"))
                                                   (rule "variableDeclarationAssign" (formula "41") (term "1"))
                                                   (rule "variableDeclaration" (formula "41") (term "1") (newnames "i_arr_6"))
                                                   (rule "assignment" (formula "41") (term "1"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "variableDeclarationAssign" (formula "41") (term "1"))
                                                   (rule "variableDeclaration" (formula "41") (term "1") (newnames "i_3"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "assignmentSubtractionInt" (formula "39") (term "1"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "translateJavaSubInt" (formula "39") (term "0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "39") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0,1,0"))
                                                   (rule "assignment_array2" (formula "39") (term "1"))
                                                   (branch "Normal Execution (i_arr_6 != null)"
                                                       (builtin "One Step Simplification" (formula "40"))
                                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "38")))
                                                      (rule "orRight" (formula "39"))
                                                      (rule "inEqSimp_leqRight" (formula "39"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "40"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "assignment" (formula "41") (term "1"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "blockEmpty" (formula "41") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "postincrement" (formula "39") (term "1"))
                                                      (rule "compound_int_cast_expression" (formula "39") (term "1") (inst "#v=i_4"))
                                                      (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                      (rule "variableDeclaration" (formula "39") (term "1") (newnames "i_4"))
                                                      (rule "remove_parentheses_right" (formula "39") (term "1"))
                                                      (rule "assignmentAdditionInt" (formula "39") (term "1"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "translateJavaAddInt" (formula "39") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,1,0"))
                                                      (rule "widening_identity_cast_5" (formula "39") (term "1"))
                                                      (rule "assignment" (formula "39") (term "1"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "blockEmpty" (formula "39") (term "1"))
                                                      (rule "lsContinue" (formula "39") (term "1"))
                                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "22")) (ifInst ""  (formula "29")) (ifInst ""  (formula "4")) (ifInst ""  (formula "32")))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "0,0,1"))
                                                      (rule "mul_literals" (formula "39") (term "0,0,0,1"))
                                                      (rule "precOfInt" (formula "39") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "39") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "39") (term "0,1,1"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,1,1"))
                                                      (rule "add_zero_right" (formula "39") (term "0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0,1,1"))
                                                      (rule "add_zero_left" (formula "39") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,1"))
                                                      (rule "add_literals" (formula "39") (term "1,0,1,1"))
                                                      (rule "times_zero_1" (formula "39") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "39") (term "1,1"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "1"))
                                                      (rule "mul_literals" (formula "39") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "39") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "39") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                                      (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_invertInEq0" (formula "39") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
                                                      (rule "times_zero_2" (formula "39") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "39") (term "1") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "39") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "cut_direct" (formula "39") (term "1"))
                                                      (branch "CUT: self.sa.a.length >= 1 + result_lcp TRUE"
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "allRight" (formula "40") (inst "sk=i_0"))
                                                         (rule "orRight" (formula "40"))
                                                         (rule "orRight" (formula "40"))
                                                         (rule "inEqSimp_leqRight" (formula "40"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "41"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0"))
                                                         (rule "qeq_literals" (formula "17") (term "0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "22"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_geqRight" (formula "42"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "allLeft" (formula "20") (inst "t=i_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "20") (term "0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "closeFalse" (formula "20"))
                                                      )
                                                      (branch "CUT: self.sa.a.length >= 1 + result_lcp FALSE"
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "inEqSimp_geqRight" (formula "39"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16"))
                                                         (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                         (rule "add_literals" (formula "16") (term "1,0"))
                                                         (rule "times_zero_1" (formula "16") (term "0"))
                                                         (rule "leq_literals" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "14"))
                                                         (rule "polySimp_pullOutFactor2" (formula "30") (term "1"))
                                                         (rule "add_literals" (formula "30") (term "1,1"))
                                                         (rule "times_zero_1" (formula "30") (term "1"))
                                                         (rule "applyEq" (formula "6") (term "0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "20") (term "1,1,1,0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "14"))
                                                         (rule "polySimp_pullOutFactor2" (formula "31") (term "1"))
                                                         (rule "add_literals" (formula "31") (term "1,1"))
                                                         (rule "times_zero_1" (formula "31") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "25"))
                                                         (rule "leq_literals" (formula "29") (term "0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "34") (term "0") (ifseqformula "15"))
                                                         (rule "eqSymm" (formula "34"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "applyEq" (formula "30") (term "0") (ifseqformula "15"))
                                                         (rule "leq_literals" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18"))
                                                         (rule "times_zero_2" (formula "18") (term "1,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0"))
                                                         (rule "applyEq" (formula "30") (term "0,0,2,0,1,0") (ifseqformula "15"))
                                                         (rule "add_zero_left" (formula "30") (term "0,2,0,1,0"))
                                                         (rule "eqSymm" (formula "30") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                         (rule "mul_literals" (formula "18") (term "1"))
                                                         (rule "inEqSimp_strengthen0" (formula "29") (ifseqformula "32"))
                                                         (rule "add_zero_right" (formula "29") (term "1"))
                                                         (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "29"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,0"))
                                                         (rule "qeq_literals" (formula "32") (term "0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "false_right" (formula "32"))
                                                         (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "16"))
                                                         (rule "qeq_literals" (formula "29") (term "0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "closeFalse" (formula "29"))
                                                      )
                                                   )
                                                   (branch "Null Reference (i_arr_6 = null)"
                                                       (builtin "One Step Simplification" (formula "40"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Index Out of Bounds (i_arr_6 != null, but i_3 Out of Bounds!)"
                                                       (builtin "One Step Simplification" (formula "40"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                      (rule "add_literals" (formula "1") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "1") (term "0,1"))
                                                      (rule "blockThrow" (formula "40") (term "1"))
                                                       (builtin "One Step Simplification" (formula "40"))
                                                      (rule "blockThrow" (formula "40") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Null Reference (s_6 = null)"
                                                    (builtin "One Step Simplification" (formula "42"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Null Reference (i_arr_4 = null)"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Index Out of Bounds (i_arr_4 != null, but x Out of Bounds!)"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "blockThrow" (formula "40") (term "1"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "blockThrow" (formula "40") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Null Reference (s_5 = null)"
                                              (builtin "One Step Simplification" (formula "40"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "if b_2 false"
                                           (builtin "One Step Simplification" (formula "39"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "blockEmpty" (formula "39") (term "1"))
                                          (rule "postincrement" (formula "39") (term "1"))
                                          (rule "compound_reference_cast_expression_primitive" (formula "39") (term "1") (inst "#v=i_3"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "i_3"))
                                          (rule "remove_parentheses_right" (formula "39") (term "1"))
                                          (rule "assignmentAdditionInt" (formula "39") (term "1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "translateJavaAddInt" (formula "39") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "39") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "39") (term "1"))
                                          (rule "assignment" (formula "39") (term "1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "blockEmpty" (formula "39") (term "1"))
                                          (rule "lsContinue" (formula "39") (term "1"))
                                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "21")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "3")) (ifInst ""  (formula "7")))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,0,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,0,0,1"))
                                          (rule "precOfInt" (formula "39") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,1,1"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "39") (term "0,1,1"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,1,1"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,1,1"))
                                          (rule "add_zero_right" (formula "39") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,1,1"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,1"))
                                          (rule "add_literals" (formula "39") (term "1,0,1,1"))
                                          (rule "times_zero_1" (formula "39") (term "0,1,1"))
                                          (rule "leq_literals" (formula "39") (term "1,1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "39") (term "1"))
                                          (rule "times_zero_2" (formula "39") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "39") (term "0,1"))
                                          (rule "inEqSimp_invertInEq0" (formula "39") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "39") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "inEqSimp_subsumption1" (formula "39") (term "1") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "39") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "allRight" (formula "39") (inst "sk=i_0"))
                                          (rule "orRight" (formula "39"))
                                          (rule "orRight" (formula "39"))
                                          (rule "inEqSimp_leqRight" (formula "39"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "allLeft" (formula "18") (inst "t=i_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                          (rule "leq_literals" (formula "18") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "inEqSimp_leqRight" (formula "42"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "23") (inst "t=i_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                    (branch "Exceptional Post (b_helper)"
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "notLeft" (formula "26"))
                                       (rule "close" (formula "29") (ifseqformula "28"))
                                    )
                                    (branch "Pre (b_helper)"
                                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "8")))
                                       (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "30") (ifseqformula "10"))
                                       (rule "closeTrue" (formula "30"))
                                    )
                                 )
                                 (branch "Exceptional Post (lcp)"
                                     (builtin "One Step Simplification" (formula "21"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "close" (formula "25") (ifseqformula "24"))
                                 )
                                 (branch "Pre (lcp)"
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "8")) (ifInst ""  (formula "23")) (ifInst ""  (formula "17")))
                                    (rule "eqSymm" (formula "25") (term "0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                    (rule "shift_paren_and" (formula "25"))
                                    (rule "shift_paren_and" (formula "25") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "allLeft" (formula "14") (inst "t=x_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "14") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_left" (formula "27") (term "1,0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "allLeft" (formula "15") (inst "t=add(Z(neglit(1(#))), x_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "15") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                    (rule "leq_literals" (formula "15") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "allLeft" (formula "13") (inst "t=x_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "13") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "13") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                                    (rule "times_zero_1" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))), x_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "14") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "14") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "14") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "notRight" (formula "30"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                    (rule "allLeft" (formula "19") (inst "t=x_0"))
                                    (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                              (branch "Null Reference (i_arr_3 = null)"
                                  (builtin "One Step Simplification" (formula "25"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (i_arr_3 != null, but i_2 Out of Bounds!)"
                                  (builtin "One Step Simplification" (formula "25"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "1") (term "0,1"))
                                 (rule "blockThrow" (formula "25") (term "1"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "blockThrow" (formula "25") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Null Reference (s_4 = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (i_arr_1 = null)"
                            (builtin "One Step Simplification" (formula "24"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "13") (term "1,0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "14") (term "1,0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "15") (term "1,1,0,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "15") (term "1,0,0,1,0") (ifseqformula "1"))
                           (rule "blockThrow" (formula "24") (term "1"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "blockThrow" (formula "24") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "throwUnfold" (formula "23") (term "1") (inst "#v0=n"))
                           (rule "variableDeclarationAssign" (formula "23") (term "1"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "n"))
                            (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_NullPointerException,self_0,exc_2,heapAfter_NullPointerException,anon_heap_NullPointerException") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0") (modality "diamond"))
                           (branch "Post (NullPointerException)"
                               (builtin "One Step Simplification" (formula "25"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "25"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "26"))
                              (rule "notLeft" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "notLeft" (formula "23"))
                              (rule "assignment" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
                              (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
                              (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                              (rule "hideAuxiliaryEq" (formula "26"))
                              (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
                              (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "commuteUnion" (formula "21") (term "1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "lsThrow" (formula "33") (term "1"))
                              (rule "assignment" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "methodCallThrow" (formula "33") (term "1"))
                              (rule "tryCatchThrow" (formula "33") (term "1"))
                              (rule "ifElseUnfold" (formula "33") (term "1") (inst "#boolv=b_2"))
                              (rule "variableDeclaration" (formula "33") (term "1") (newnames "b_2"))
                              (rule "equality_comparison_simple" (formula "33") (term "1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "replace_known_right" (formula "33") (term "0,0,1,0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "ifElseSplit" (formula "33"))
                              (branch "if b_2 true"
                                  (builtin "One Step Simplification" (formula "34"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if b_2 false"
                                  (builtin "One Step Simplification" (formula "34"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "elim_double_block" (formula "33") (term "1"))
                                 (rule "ifElseSplit" (formula "33"))
                                 (branch "if n instanceof java.lang.Throwable true"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "33") (term "1") (newnames "e"))
                                    (rule "delete_unnecessary_cast" (formula "33") (term "1"))
                                     (builtin "One Step Simplification" (formula "34"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "33") (term "1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "emptyModality" (formula "33") (term "1"))
                                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                                    (rule "eqSymm" (formula "33") (term "1,0,0,1"))
                                    (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "33") (term "0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "allRight" (formula "33") (inst "sk=f_0"))
                                    (rule "allRight" (formula "33") (inst "sk=o_0"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                    (rule "eqSymm" (formula "38"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "commute_and" (formula "34"))
                                    (rule "commute_and" (formula "35"))
                                    (rule "commute_and" (formula "1") (term "0,0,0,0"))
                                    (rule "commute_and" (formula "1") (term "1,0,0,0"))
                                    (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0,0,0"))
                                    (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                                    (rule "commute_and" (formula "1") (term "1,0,0,0"))
                                    (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                    (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                                    (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                    (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                    (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "1") (term "0,0"))
                                    (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                    (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                                    (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " !f_0 = java.lang.Object::<created> & o_0 = self_0 & ( f_0 = java.lang.Throwable::$cause | f_0 = java.lang.Throwable::$message) & (f_0 = java.lang.Throwable::$cause | o_0 = self_0) & (f_0 = java.lang.Throwable::$message | o_0 = self_0) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "eqSymm" (formula "42"))
                                       (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "38") (term "1"))
                                       (rule "sortsDisjointModuloNull" (formula "38") (term "1"))
                                       (rule "replace_known_right" (formula "38") (term "0,1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "32")))
                                       (rule "false_right" (formula "38"))
                                       (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "37") (term "1"))
                                       (rule "sortsDisjointModuloNull" (formula "37") (term "1"))
                                       (rule "replace_known_right" (formula "37") (term "1,1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "33")))
                                       (rule "false_right" (formula "37"))
                                       (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "notRight" (formula "37"))
                                       (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "37") (term "1"))
                                       (rule "sortsDisjointModuloNull" (formula "37") (term "1"))
                                       (rule "replace_known_right" (formula "37") (term "1,1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "34")))
                                       (rule "false_right" (formula "37"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "32") (ifseqformula "1"))
                                    )
                                    (branch " !f_0 = java.lang.Object::<created> & o_0 = self_0 & ( f_0 = java.lang.Throwable::$cause | f_0 = java.lang.Throwable::$message) & (f_0 = java.lang.Throwable::$cause | o_0 = self_0) & (f_0 = java.lang.Throwable::$message | o_0 = self_0) FALSE"
                                       (rule "close" (formula "39") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "if n instanceof java.lang.Throwable false"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Exceptional Post (NullPointerException)"
                               (builtin "One Step Simplification" (formula "25"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "23"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "22"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "26"))
                              (rule "notLeft" (formula "22"))
                              (rule "close" (formula "29") (ifseqformula "28"))
                           )
                           (branch "Pre (NullPointerException)"
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "8")))
                              (rule "closeTrue" (formula "23"))
                           )
                        )
                        (branch "Index Out of Bounds (i_arr_1 != null, but x Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "24"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "blockThrow" (formula "25") (term "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "blockThrow" (formula "25") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0"))
                           (rule "qeq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0,1,0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
                           (rule "leq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "throwUnfold" (formula "26") (term "1") (inst "#v0=a_1"))
                           (rule "variableDeclarationAssign" (formula "26") (term "1"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "a_1"))
                           (rule "instanceCreationAssignment" (formula "26") (term "1") (inst "#v0=a_2"))
                           (rule "variableDeclarationAssign" (formula "26") (term "1"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "a_2"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "26") (term "1") (inst "#v0=a_3"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "a_3"))
                           (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "__NEW__"))
                           (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "26") (term "1") (inst "#v0=a_4"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "a_4"))
                           (rule "allocateInstance" (formula "26"))
                            (builtin "One Step Simplification" (formula "27"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallWithinClass" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "methodCallReturnIgnoreResult" (formula "29") (term "1"))
                           (rule "methodCallReturn" (formula "29") (term "1"))
                           (rule "assignment" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallSuper" (formula "29") (term "1"))
                           (rule "methodBodyExpand" (formula "29") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "assignment_write_attribute_this" (formula "29") (term "1"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "methodCallEmpty" (formula "29") (term "1"))
                           (rule "blockEmpty" (formula "29") (term "1"))
                           (rule "assignment_write_attribute" (formula "29") (term "1"))
                           (branch "Normal Execution (a_2 != null)"
                               (builtin "One Step Simplification" (formula "30"))
                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "23")))
                              (rule "false_right" (formula "29"))
                              (rule "assignment" (formula "29") (term "1"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "lsThrow" (formula "29") (term "1"))
                              (rule "assignment" (formula "29") (term "1"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "methodCallThrow" (formula "29") (term "1"))
                              (rule "tryCatchThrow" (formula "29") (term "1"))
                              (rule "ifElseUnfold" (formula "29") (term "1") (inst "#boolv=b_2"))
                              (rule "variableDeclaration" (formula "29") (term "1") (newnames "b_2"))
                              (rule "equality_comparison_simple" (formula "29") (term "1"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_right" (formula "29") (term "0,0,1,0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "ifElseSplit" (formula "29"))
                              (branch "if b_2 true"
                                  (builtin "One Step Simplification" (formula "30"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if b_2 false"
                                  (builtin "One Step Simplification" (formula "30"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "elim_double_block" (formula "29") (term "1"))
                                 (rule "ifElseSplit" (formula "29"))
                                 (branch "if a_1 instanceof java.lang.Throwable true"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "29") (term "1") (newnames "e"))
                                    (rule "delete_unnecessary_cast" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "emptyModality" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                    (rule "eqSymm" (formula "29") (term "1,0,0,1"))
                                    (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "29") (term "0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "allRight" (formula "29") (inst "sk=f_0"))
                                    (rule "allRight" (formula "29") (inst "sk=o_0"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "commute_and" (formula "35"))
                                    (rule "commute_and" (formula "34"))
                                    (rule "commute_and" (formula "33"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_0 = java.lang.Object::<created> & o_0 = a_4 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEqRigid" (formula "34") (term "0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEqRigid" (formula "34") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "34") (term "0") (ifseqformula "12"))
                                       (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "notRight" (formula "33"))
                                       (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "32") (term "1"))
                                       (rule "sortsDisjointModuloNull" (formula "32") (term "1"))
                                       (rule "replace_known_right" (formula "32") (term "1,1") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "29")))
                                       (rule "false_right" (formula "32"))
                                       (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "false_right" (formula "32"))
                                       (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "close" (formula "26") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = java.lang.Object::<created> & o_0 = a_4 FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_0 = java.lang.Throwable::$cause & o_0 = a_4 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "applyEq" (formula "36") (term "1,0,0,1") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "notRight" (formula "36"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "33") (term "1"))
                                          (rule "sortsDisjointModuloNull" (formula "33") (term "1"))
                                          (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "27")))
                                          (rule "false_right" (formula "33"))
                                          (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "false_right" (formula "26"))
                                          (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "32") (term "1"))
                                          (rule "sortsDisjointModuloNull" (formula "32") (term "1"))
                                          (rule "replace_known_right" (formula "32") (term "1,1") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "29")))
                                          (rule "false_right" (formula "32"))
                                          (rule "applyEqRigid" (formula "33") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "33") (term "0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "close" (formula "26") (ifseqformula "3"))
                                       )
                                       (branch "f_0 = java.lang.Throwable::$cause & o_0 = a_4 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "f_0 = java.lang.Throwable::$message & o_0 = a_4 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "2"))
                                             (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "notRight" (formula "37"))
                                             (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "38") (term "0") (ifseqformula "14"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "35") (term "1"))
                                             (rule "sortsDisjointModuloNull" (formula "35") (term "1"))
                                             (rule "replace_known_right" (formula "35") (term "1,1") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "32")))
                                             (rule "false_right" (formula "35"))
                                             (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "35") (term "1"))
                                             (rule "sortsDisjointModuloNull" (formula "35") (term "1"))
                                             (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "29")))
                                             (rule "false_right" (formula "35"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "false_right" (formula "27"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "32"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "27") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = java.lang.Throwable::$message & o_0 = a_4 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_0 = java.lang.Object::<initialized> & o_0 = a_4 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "false_right" (formula "27"))
                                                (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "34") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "false_right" (formula "34"))
                                                (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "33") (term "1"))
                                                (rule "sortsDisjointModuloNull" (formula "33") (term "1"))
                                                (rule "replace_known_right" (formula "33") (term "1,1") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")))
                                                (rule "false_right" (formula "33"))
                                                (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "35") (term "0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "false_right" (formula "26"))
                                                (rule "applyEq" (formula "33") (term "1,0,0,1") (ifseqformula "2"))
                                                (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "notRight" (formula "33"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "false_right" (formula "26"))
                                                (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "false_right" (formula "32"))
                                                (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "close" (formula "26") (ifseqformula "3"))
                                             )
                                             (branch "f_0 = java.lang.Object::<initialized> & o_0 = a_4 FALSE"
                                                (rule "close" (formula "38") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "if a_1 instanceof java.lang.Throwable false"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (a_2 = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (s_3 = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (s_2 = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "if b_1 false"
                   (builtin "One Step Simplification" (formula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "19"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "5"))
                  (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "5"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "23") (term "1,0,1,1,0") (ifseqformula "4"))
                  (rule "polySimp_pullOutFactor2" (formula "23") (term "0,1,1,0"))
                  (rule "add_literals" (formula "23") (term "1,0,1,1,0"))
                  (rule "times_zero_1" (formula "23") (term "0,1,1,0"))
                  (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,0"))
                  (rule "times_zero_1" (formula "5") (term "0"))
                  (rule "leq_literals" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "16"))
                  (rule "leq_literals" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "blockBreak" (formula "21") (term "1"))
                  (rule "lsBreak" (formula "21") (term "1"))
                  (rule "assignment" (formula "21") (term "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "assignment_write_attribute_this" (formula "21") (term "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "assignment_write_attribute_this" (formula "21") (term "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "assignment_write_attribute_this" (formula "21") (term "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "methodCallEmpty" (formula "21") (term "1"))
                  (rule "tryEmpty" (formula "21") (term "1"))
                  (rule "emptyModality" (formula "21") (term "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "eqSymm" (formula "21") (term "1,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,0,2,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,0,2,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,0,2,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,0,0,0"))
                  (rule "pullOutSelect" (formula "21") (term "1,1,0,0,0,0") (inst "selectSK=unsatcore_after_competition_postcond5_scope333_LRS_l_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "22") (term "1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "21") (term "0,0,2,0,1,0,0,0") (inst "selectSK=unsatcore_after_competition_postcond5_scope333_LRS_t_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "22") (term "0,0,2,0,1,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "21") (term "1,0,0,0"))
                  (rule "pullOutSelect" (formula "21") (term "0,0,2,0,1,0,0,0") (inst "selectSK=unsatcore_after_competition_postcond5_scope333_LRS_s_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "22") (term "0,0,2,0,1,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "21") (term "1,0,0,0"))
                  (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "21") (term "0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "allRight" (formula "21") (inst "sk=f_0"))
                  (rule "allRight" (formula "21") (inst "sk=o_0"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "26"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (i_arr = null)"
                (builtin "One Step Simplification" (formula "22"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "applyEq" (formula "6") (term "1,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "6") (term "1,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "14") (term "0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "13") (term "0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "12") (term "0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "13") (term "0,1,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "21") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,0,1,0") (ifseqformula "8"))
               (rule "arrayLengthNotNegative" (formula "17") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
               (rule "leq_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "throwUnfold" (formula "22") (term "1") (inst "#v0=n"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "n"))
                (builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_NullPointerException,self_0,exc_2,heapAfter_NullPointerException,anon_heap_NullPointerException") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0") (modality "diamond"))
               (branch "Post (NullPointerException)"
                   (builtin "One Step Simplification" (formula "21"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "andLeft" (formula "21"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "24"))
                  (rule "notLeft" (formula "23"))
                  (rule "notLeft" (formula "23"))
                  (rule "assignment" (formula "32") (term "1"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
                  (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                  (rule "hideAuxiliaryEq" (formula "25"))
                  (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
                  (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                  (rule "hideAuxiliaryEq" (formula "26"))
                  (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
                  (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "23"))
                  (rule "hideAuxiliaryEq" (formula "23"))
                  (rule "commuteUnion" (formula "21") (term "1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "20"))
                  (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "20"))
                  (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "lsThrow" (formula "32") (term "1"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "assignment" (formula "32") (term "1"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "methodCallThrow" (formula "32") (term "1"))
                  (rule "tryCatchThrow" (formula "32") (term "1"))
                  (rule "ifElseUnfold" (formula "32") (term "1") (inst "#boolv=b_2"))
                  (rule "variableDeclaration" (formula "32") (term "1") (newnames "b_2"))
                  (rule "equality_comparison_simple" (formula "32") (term "1"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "replace_known_right" (formula "32") (term "0,0,1,0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "ifElseSplit" (formula "32"))
                  (branch "if b_2 true"
                      (builtin "One Step Simplification" (formula "33"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if b_2 false"
                      (builtin "One Step Simplification" (formula "33"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "elim_double_block" (formula "32") (term "1"))
                     (rule "ifElseSplit" (formula "32"))
                     (branch "if n instanceof java.lang.Throwable true"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "32") (term "1") (newnames "e"))
                        (rule "delete_unnecessary_cast" (formula "32") (term "1"))
                         (builtin "One Step Simplification" (formula "33"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment" (formula "32") (term "1"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "emptyModality" (formula "32") (term "1"))
                         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                        (rule "eqSymm" (formula "32") (term "1,0,0,1"))
                        (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "32") (term "0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "allRight" (formula "32") (inst "sk=f_0"))
                        (rule "allRight" (formula "32") (inst "sk=o_0"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                        (rule "eqSymm" (formula "37"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "35"))
                        (rule "commute_and" (formula "33"))
                        (rule "commute_and" (formula "34"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                        (rule "commute_and" (formula "1") (term "1,0,0,0"))
                        (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                        (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                        (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " !f_0 = java.lang.Object::<created> & o_0 = self_0 & ( f_0 = java.lang.Throwable::$cause | f_0 = java.lang.Throwable::$message) & (f_0 = java.lang.Throwable::$cause | o_0 = self_0) & (f_0 = java.lang.Throwable::$message | o_0 = self_0) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "eqSymm" (formula "41"))
                           (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "1"))
                           (rule "eqSymm" (formula "36") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "36") (term "1"))
                           (rule "replace_known_right" (formula "36") (term "1,1") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")))
                           (rule "false_right" (formula "36"))
                           (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "1"))
                           (rule "eqSymm" (formula "35") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "35") (term "1"))
                           (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "32")))
                           (rule "false_right" (formula "35"))
                           (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "1"))
                           (rule "eqSymm" (formula "35") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "35") (term "1"))
                           (rule "replace_known_right" (formula "35") (term "1,1") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "33")))
                           (rule "false_right" (formula "35"))
                           (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "1"))
                           (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "notRight" (formula "35"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                           (rule "close" (formula "32") (ifseqformula "1"))
                        )
                        (branch " !f_0 = java.lang.Object::<created> & o_0 = self_0 & ( f_0 = java.lang.Throwable::$cause | f_0 = java.lang.Throwable::$message) & (f_0 = java.lang.Throwable::$cause | o_0 = self_0) & (f_0 = java.lang.Throwable::$message | o_0 = self_0) FALSE"
                           (rule "close" (formula "38") (ifseqformula "1"))
                        )
                     )
                     (branch "if n instanceof java.lang.Throwable false"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Exceptional Post (NullPointerException)"
                   (builtin "One Step Simplification" (formula "24"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "26"))
                  (rule "notLeft" (formula "22"))
                  (rule "close" (formula "28") (ifseqformula "27"))
               )
               (branch "Pre (NullPointerException)"
                   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "8")))
                  (rule "closeTrue" (formula "22"))
               )
            )
         )
         (branch "Null Reference (s_1 = null)"
             (builtin "One Step Simplification" (formula "21"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "applyEq" (formula "20") (term "1,0,1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "1,1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "1,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "1,1,1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "6") (term "1,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "12") (term "1,1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "1,0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "6") (term "1,1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "12") (term "1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "1"))
            (rule "arrayLengthIsAShort" (formula "20") (term "1,0,1,1,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "arrayLengthNotNegative" (formula "20") (term "1,0,1,1,0,0"))
            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "17"))
            (rule "leq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,1,0,1,1,0,0") (ifseqformula "8"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0,1,0") (ifseqformula "8"))
            (rule "throwUnfold" (formula "21") (term "1") (inst "#v0=n"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "n"))
             (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_NullPointerException,self_0,exc_2,heapAfter_NullPointerException,anon_heap_NullPointerException") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0") (modality "diamond"))
            (branch "Post (NullPointerException)"
                (builtin "One Step Simplification" (formula "23"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "22"))
               (rule "notLeft" (formula "22"))
               (rule "andLeft" (formula "22"))
               (rule "notLeft" (formula "22"))
               (rule "assignment" (formula "31") (term "1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
               (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
               (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
               (rule "hideAuxiliaryEq" (formula "25"))
               (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
               (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
               (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
               (rule "hideAuxiliaryEq" (formula "24"))
               (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
               (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
               (rule "hideAuxiliaryEq" (formula "22"))
               (rule "commuteUnion" (formula "21") (term "1,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "20"))
               (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "20"))
               (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "lsThrow" (formula "31") (term "1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "assignment" (formula "31") (term "1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "methodCallThrow" (formula "31") (term "1"))
               (rule "tryCatchThrow" (formula "31") (term "1"))
               (rule "ifElseUnfold" (formula "31") (term "1") (inst "#boolv=b_2"))
               (rule "variableDeclaration" (formula "31") (term "1") (newnames "b_2"))
               (rule "equality_comparison_simple" (formula "31") (term "1"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "replace_known_right" (formula "31") (term "0,0,1,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "ifElseSplit" (formula "31"))
               (branch "if b_2 true"
                   (builtin "One Step Simplification" (formula "32"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if b_2 false"
                   (builtin "One Step Simplification" (formula "32"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "elim_double_block" (formula "31") (term "1"))
                  (rule "ifElseSplit" (formula "31"))
                  (branch "if n instanceof java.lang.Throwable true"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "31") (term "1") (newnames "e"))
                     (rule "delete_unnecessary_cast" (formula "31") (term "1"))
                      (builtin "One Step Simplification" (formula "32"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "31") (term "1"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "emptyModality" (formula "31") (term "1"))
                      (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                     (rule "eqSymm" (formula "31") (term "1,0,0,1"))
                     (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "31") (term "0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "allRight" (formula "31") (inst "sk=f_0"))
                     (rule "allRight" (formula "31") (inst "sk=o_0"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "orRight" (formula "31"))
                     (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "eqSymm" (formula "36"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "commute_and" (formula "34"))
                     (rule "commute_and" (formula "32"))
                     (rule "commute_and" (formula "33"))
                     (rule "commute_and" (formula "1") (term "1,0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                     (rule "commute_or" (formula "1") (term "0,0,0,0"))
                     (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                     (rule "commute_and" (formula "1") (term "1,0,0,0"))
                     (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                     (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                     (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0"))
                     (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                     (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " !f_0 = java.lang.Object::<created> & o_0 = self_0 & ( f_0 = java.lang.Throwable::$cause | f_0 = java.lang.Throwable::$message) & (f_0 = java.lang.Throwable::$cause | o_0 = self_0) & (f_0 = java.lang.Throwable::$message | o_0 = self_0) TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "eqSymm" (formula "40"))
                        (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "1"))
                        (rule "eqSymm" (formula "36") (term "1"))
                        (rule "sortsDisjointModuloNull" (formula "36") (term "1"))
                        (rule "replace_known_right" (formula "36") (term "1,1") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")))
                        (rule "false_right" (formula "36"))
                        (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "1"))
                        (rule "eqSymm" (formula "34") (term "1"))
                        (rule "sortsDisjointModuloNull" (formula "34") (term "1"))
                        (rule "replace_known_right" (formula "34") (term "0,1") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                        (rule "false_right" (formula "34"))
                        (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "1"))
                        (rule "eqSymm" (formula "34") (term "1"))
                        (rule "sortsDisjointModuloNull" (formula "34") (term "1"))
                        (rule "replace_known_right" (formula "34") (term "0,1") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                        (rule "false_right" (formula "34"))
                        (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "1"))
                        (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "notRight" (formula "34"))
                        (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "32") (ifseqformula "1"))
                     )
                     (branch " !f_0 = java.lang.Object::<created> & o_0 = self_0 & ( f_0 = java.lang.Throwable::$cause | f_0 = java.lang.Throwable::$message) & (f_0 = java.lang.Throwable::$cause | o_0 = self_0) & (f_0 = java.lang.Throwable::$message | o_0 = self_0) FALSE"
                        (rule "close" (formula "37") (ifseqformula "1"))
                     )
                  )
                  (branch "if n instanceof java.lang.Throwable false"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Exceptional Post (NullPointerException)"
                (builtin "One Step Simplification" (formula "21"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "andLeft" (formula "21"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "22"))
               (rule "close" (formula "29") (ifseqformula "28"))
            )
            (branch "Pre (NullPointerException)"
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "8")))
               (rule "closeTrue" (formula "21"))
            )
         )
      )
   )
   (branch "Exceptional Post (t_0_helper)"
       (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "close" (formula "13") (ifseqformula "12"))
   )
   (branch "Pre (t_0_helper)"
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")))
      (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "11") (ifseqformula "3"))
      (rule "closeTrue" (formula "11"))
   )
)
(branch "Exceptional Post (s_0_helper)"
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "9"))
   (rule "close" (formula "12") (ifseqformula "11"))
)
(branch "Pre (s_0_helper)"
    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_unsatcore_after_competition_postcond5_scope333_LRS" (formula "10") (ifseqformula "3"))
   (rule "closeTrue" (formula "10"))
)
)
}
