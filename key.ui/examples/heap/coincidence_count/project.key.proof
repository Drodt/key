\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:showSatisfiability",
        "moreSeqRules" : "moreSeqRules:off",
        "optimisedSelectRules" : "optimisedSelectRules:on",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:ban",
        "sequences" : "sequences:on",
        "soundDefaultContracts" : "soundDefaultContracts:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 50000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_OFF",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_EXPAND",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource ".";

\proofObligation 
// Proof-Obligation settings
{ 
    "class" : "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
    "contract" : "CC[CC::calcCoinIndex([I,[I)].JML normal_behavior operation contract.0",
    "name" : "CC[CC::calcCoinIndex([I,[I)].JML normal_behavior operation contract.0"
 }

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))
(keyLog "1" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))

(autoModeTime "14882")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "13") (term "1,0,0,2,1,0,0,0,0,1"))
(rule "eqSymm" (formula "13") (term "0,0,1,0,1"))
(rule "eqSymm" (formula "13") (term "0,0,0,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "5"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "polySimp_addComm1" (formula "7") (term "0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0"))
(rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,2,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,2,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,2,0,0,0,0,0,1"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,2,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,2,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,2,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,2,0,0,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,2,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,2,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "7") (term "0,0"))
(rule "nnf_imp2or" (formula "8") (term "0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
(rule "Class_invariant_axiom_for_CC" (formula "9") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "true_left" (formula "9"))
   (rule "commute_or_2" (formula "7") (term "0,0,0"))
   (rule "commute_or_2" (formula "8") (term "0,0,0"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_calcCoinIndex,savedHeapBefore_calcCoinIndex,_aBefore_calcCoinIndex,_bBefore_calcCoinIndex"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "i"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "j"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "result"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "loopScopeInvDia" (formula "12") (term "1") (newnames "result_0,j_0,i_0,o,f") (inst "#variant=a_1") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "#x=b_1") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
   (branch "Invariant Initially Valid"
       (builtin "One Step Simplification" (formula "12"))
      (rule "bsum_lower_equals_upper" (formula "12") (term "1,1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "leq_literals" (formula "12") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "leq_literals" (formula "12") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "eqSymm" (formula "12") (term "0,1"))
      (rule "eqSymm" (formula "12") (term "0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,1"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,0"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,1,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,1"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,1"))
      (rule "nnf_imp2or" (formula "12") (term "0,1,1"))
      (rule "nnf_imp2or" (formula "12") (term "0,1,1,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0,1,1"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,1"))
      (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,1,1"))
      (rule "add_literals" (formula "12") (term "0,0,1,0,0,1,1"))
      (rule "add_zero_left" (formula "12") (term "0,1,0,0,1,1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "nnf_notAnd" (formula "12") (term "0,0,1,1"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,1"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,1"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,1"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0,0,0,0"))
      (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_geqRight" (formula "13"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
      (rule "qeq_literals" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "closeFalse" (formula "10"))
   )
   (branch "Invariant Preserved and Used"
       (builtin "One Step Simplification" (formula "13"))
      (rule "eqSymm" (formula "13") (term "1,0,0,1"))
      (rule "eqSymm" (formula "13") (term "0,0,1,0,1,1,0,1,1,0,1"))
      (rule "eqSymm" (formula "13") (term "1,0,0,1,1,0,1,1,0,1"))
      (rule "eqSymm" (formula "13") (term "0,1,0,0,0,1"))
      (rule "eqSymm" (formula "13") (term "0,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "eqSymm" (formula "13") (term "0,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "eqSymm" (formula "13") (term "0,1,0,0,0,0,1"))
      (rule "eqSymm" (formula "13") (term "1,0,0,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "13") (term "1,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "13") (term "0,0,1,0,1,0,1"))
      (rule "polySimp_elimSub" (formula "13") (term "0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "13") (term "0,1,0,1,0,1"))
      (rule "polySimp_elimSub" (formula "13") (term "0,0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,1,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0,1"))
      (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,0,1,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,1,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,0,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,2,0,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,2,0,1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,2,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "h"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "h_1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "h_2"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "a_1"))
      (rule "variableDeclaration" (formula "13") (term "1,1,0,1") (newnames "b_1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,2,0,1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,2,0,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,2,0,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,2,0,1,0,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,2,0,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,2,0,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,2,0,1,0,0,1,1,0,1,1,0,1"))
      (rule "nnf_imp2or" (formula "13") (term "0,1,1,0,0,0,1"))
      (rule "nnf_imp2or" (formula "13") (term "0,1,1,0,0,0,0,1"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,1,0,0,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,1,0,0,0,1"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,1,0,0,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,0,0,1"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,1,0,0,0,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,1,0,0,0,0,1"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,1,0,0,0,0,1"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,1,0,0,0,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,0,0,0,1"))
      (rule "nnf_imp2or" (formula "13") (term "0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "nnf_imp2or" (formula "13") (term "0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,0,0,1,1,0,1,1,0,1"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0,0,0,0"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "emptyModality" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "impRight" (formula "14"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0,0,0,0"))
      (rule "ifElseUnfold" (formula "22") (term "1") (inst "#boolv=b_2"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "b_2"))
      (rule "compound_assignment_3_nonsimple" (formula "22") (term "1"))
      (rule "ifElseUnfold" (formula "22") (term "1") (inst "#boolv=b_3"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "b_3"))
      (rule "compound_assignment_2" (formula "22") (term "1") (inst "#v=b_4"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "b_4"))
      (rule "compound_less_than_comparison_2" (formula "22") (term "1") (inst "#v1=i_2") (inst "#v0=i_1"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "i_1"))
      (rule "assignment" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "i_2"))
      (rule "assignment_read_length" (formula "22"))
      (branch "Normal Execution (_a != null)"
          (builtin "One Step Simplification" (formula "22"))
         (rule "less_than_comparison_simple" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0"))
         (rule "compound_assignment_1_new" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "ifElseSplit" (formula "22"))
         (branch "if b_3 true"
             (builtin "One Step Simplification" (formula "23"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "ifElseSkipThen" (formula "23") (term "1"))
            (rule "inEqSimp_geqRight" (formula "19"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "assignment" (formula "23") (term "1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
            (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "applyEq" (formula "17") (term "1,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,0"))
            (rule "times_zero_1" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
            (rule "applyEq" (formula "20") (term "1,0,0,1,1,0") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1,0"))
            (rule "polySimp_pullOutFactor2" (formula "20") (term "0,0,0,1,1,0"))
            (rule "add_literals" (formula "20") (term "1,0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "20") (term "0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,1,1,0"))
            (rule "blockBreak" (formula "20") (term "1"))
            (rule "lsBreak" (formula "20") (term "1"))
            (rule "assignment" (formula "20") (term "1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "methodCallReturn" (formula "20") (term "1"))
            (rule "assignment" (formula "20") (term "1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "methodCallEmpty" (formula "20") (term "1"))
            (rule "tryEmpty" (formula "20") (term "1"))
            (rule "emptyModality" (formula "20") (term "1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "2"))
            (rule "Class_invariant_axiom_for_CC" (formula "20") (term "1") (inst "sk=sk_1") (ifseqformula "10"))
            (branch "Use Axiom"
                (builtin "One Step Simplification" (formula "20"))
               (rule "bsum_equal_split4" (formula "20") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "bsum_lower_equals_upper" (formula "20") (term "1,1,1"))
               (rule "bsum_lower_equals_upper" (formula "20") (term "0,2,1"))
               (rule "less_literals" (formula "20") (term "0,1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "eqSymm" (formula "20") (term "1"))
               (rule "polySimp_elimSub" (formula "20") (term "2,0,1"))
               (rule "polySimp_addComm0" (formula "20") (term "2,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0"))
               (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "bsum_equal_split2" (formula "21") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "bsum_lower_equals_upper" (formula "21") (term "0,1,1"))
               (rule "bsum_lower_equals_upper" (formula "21") (term "1,2,1"))
               (rule "eqSymm" (formula "21") (term "1,1"))
               (rule "polySimp_elimSub" (formula "21") (term "2,0,2,1"))
               (rule "polySimp_elimSub" (formula "21") (term "2,0,1,1"))
               (rule "polySimp_addComm0" (formula "21") (term "2,0,1,1"))
               (rule "replace_known_right" (formula "21") (term "1,1") (ifseqformula "20"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
               (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0,1"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "21") (term "0,0,1"))
               (rule "leq_literals" (formula "21") (term "0,1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0"))
               (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "equal_bsum2" (formula "22") (ifseqformula "6"))
               (rule "allRight" (formula "22") (inst "sk=k_0"))
               (rule "impRight" (formula "22"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "24"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
               (rule "leq_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "bsum_zero_right" (formula "22"))
               (rule "allRight" (formula "22") (inst "sk=k_1"))
               (rule "impRight" (formula "22"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_sepPosMonomial" (formula "24"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1"))
               (rule "polySimp_elimOne" (formula "24") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "bsum_zero_right" (formula "26"))
               (rule "allRight" (formula "26") (inst "sk=k_2"))
               (rule "impRight" (formula "26"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "28"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
               (rule "polySimp_elimOne" (formula "28") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "cut_direct" (formula "11") (term "0"))
               (branch "CUT: b.length = j_0 TRUE"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "28") (term "1,1,1,0,0,0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "closeTrue" (formula "28"))
               )
               (branch "CUT: b.length = j_0 FALSE"
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "23"))
                  (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0"))
                  (rule "leq_literals" (formula "23") (term "0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "false_right" (formula "23"))
                  (rule "ifthenelse_split" (formula "30") (term "1"))
                  (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_0]) TRUE"
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "equal_literals" (formula "31") (term "1"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "exLeft" (formula "1") (inst "sk=l_0"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                     (rule "leq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "nnf_ex2all" (formula "33"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "ifthenelse_split" (formula "30") (term "0"))
                     (branch "exists int l; (((l >= 0 & l <= -1 + b.length)<<SC>> & b[l] = a[k_1])<<SC>>) TRUE"
                        (rule "exLeft" (formula "1") (inst "sk=l_1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "33"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "equal_literals" (formula "33") (term "1"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "nnf_ex2all" (formula "33"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "ifthenelse_split" (formula "35") (term "1"))
                        (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_2]) TRUE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "equal_literals" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "exLeft" (formula "1") (inst "sk=l_2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "nnf_ex2all" (formula "38"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "allLeft" (formula "23") (inst "t=k_1"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "24") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "36") (inst "t=j_0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "36") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "allLeft" (formula "9") (inst "t=l_0"))
                           (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "9") (term "0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "9"))
                           (rule "times_zero_1" (formula "36") (term "0,0"))
                           (rule "add_zero_left" (formula "36") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "23"))
                           (rule "andLeft" (formula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                           (rule "add_literals" (formula "13") (term "1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0"))
                           (rule "add_zero_right" (formula "13") (term "0"))
                           (rule "leq_literals" (formula "13"))
                           (rule "closeFalse" (formula "13"))
                        )
                        (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_2]) FALSE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "equal_literals" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "notRight" (formula "36"))
                           (rule "exLeft" (formula "1") (inst "sk=l_2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "nnf_ex2all" (formula "38"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "allLeft" (formula "34") (inst "t=j_0"))
                           (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "34") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "allLeft" (formula "23") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "24") (inst "t=k_1"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "5") (inst "t=l_0"))
                           (rule "applyEq" (formula "5") (term "0,0,1") (ifseqformula "14"))
                           (rule "eqSymm" (formula "5") (term "0,1"))
                           (rule "inEqSimp_contradInEq0" (formula "5") (term "1,0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "5") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "notLeft" (formula "5"))
                           (rule "allLeft" (formula "9") (inst "t=l_1"))
                           (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                           (rule "applyEq" (formula "9") (term "0,0,1") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "9") (term "0,1") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "allLeft" (formula "5") (inst "t=l_1"))
                           (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "allLeft" (formula "10") (inst "t=l_2"))
                           (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                           (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "4"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "10") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "allLeft" (formula "10") (inst "t=j_0"))
                           (rule "eqSymm" (formula "10") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                           (rule "inEqSimp_contradEq3" (formula "10") (term "0,1") (ifseqformula "25"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,1"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0,1"))
                           (rule "qeq_literals" (formula "10") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "allLeft" (formula "10") (inst "t=l_0"))
                           (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "10") (term "0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "10"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "24"))
                           (rule "andLeft" (formula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                           (rule "add_literals" (formula "14") (term "1,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0"))
                           (rule "add_zero_right" (formula "14") (term "0"))
                           (rule "leq_literals" (formula "14"))
                           (rule "closeFalse" (formula "14"))
                        )
                     )
                     (branch "exists int l; (((l >= 0 & l <= -1 + b.length)<<SC>> & b[l] = a[k_1])<<SC>>) FALSE"
                        (rule "eqSymm" (formula "31"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "equal_literals" (formula "31") (term "1"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "notRight" (formula "31"))
                        (rule "exLeft" (formula "1") (inst "sk=l_1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "nnf_ex2all" (formula "33"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "ifthenelse_split" (formula "35") (term "1"))
                        (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_2]) TRUE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "equal_literals" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "exLeft" (formula "1") (inst "sk=l_2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "nnf_ex2all" (formula "38"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "allLeft" (formula "34") (inst "t=j_0"))
                           (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "34") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "allLeft" (formula "23") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "24") (inst "t=k_1"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "24") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "24") (term "0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "5") (inst "t=j_0"))
                           (rule "eqSymm" (formula "5") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                           (rule "inEqSimp_contradEq3" (formula "5") (term "0,1") (ifseqformula "25"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
                           (rule "qeq_literals" (formula "5") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "allLeft" (formula "9") (inst "t=j_0"))
                           (rule "eqSymm" (formula "9") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                           (rule "inEqSimp_contradEq3" (formula "9") (term "0,1") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,1"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0,1"))
                           (rule "qeq_literals" (formula "9") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "allLeft" (formula "25") (inst "t=k_2"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "25") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "25") (term "0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "9") (inst "t=l_0"))
                           (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "9") (term "0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "9"))
                           (rule "times_zero_1" (formula "37") (term "0,0"))
                           (rule "add_zero_left" (formula "37") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "13"))
                           (rule "andLeft" (formula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_zero_right" (formula "23") (term "0"))
                           (rule "leq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                        (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_2]) FALSE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "equal_literals" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "notRight" (formula "36"))
                           (rule "exLeft" (formula "1") (inst "sk=l_2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "nnf_ex2all" (formula "38"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "allLeft" (formula "23") (inst "t=k_1"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "24") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "36") (inst "t=j_0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "36") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "allLeft" (formula "9") (inst "t=j_0"))
                           (rule "eqSymm" (formula "9") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                           (rule "inEqSimp_contradEq3" (formula "9") (term "0,1") (ifseqformula "25"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,1"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0,1"))
                           (rule "qeq_literals" (formula "9") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "allLeft" (formula "25") (inst "t=k_2"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "25") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "25") (term "0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "5") (inst "t=l_1"))
                           (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "37") (term "0,0"))
                           (rule "add_zero_left" (formula "37") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "6"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "9"))
                           (rule "andLeft" (formula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "1,1,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0"))
                           (rule "add_zero_right" (formula "24") (term "0"))
                           (rule "leq_literals" (formula "24"))
                           (rule "closeFalse" (formula "24"))
                        )
                     )
                  )
                  (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_0]) FALSE"
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "equal_literals" (formula "31") (term "1"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "notRight" (formula "31"))
                     (rule "exLeft" (formula "1") (inst "sk=l_0"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "nnf_ex2all" (formula "33"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "ifthenelse_split" (formula "30") (term "0"))
                     (branch "exists int l; (((l >= 0 & l <= -1 + b.length)<<SC>> & b[l] = a[k_1])<<SC>>) TRUE"
                        (rule "exLeft" (formula "1") (inst "sk=l_1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "33"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "equal_literals" (formula "33") (term "1"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "nnf_ex2all" (formula "33"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "ifthenelse_split" (formula "35") (term "1"))
                        (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_2]) TRUE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "equal_literals" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "exLeft" (formula "1") (inst "sk=l_2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                           (rule "leq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "nnf_ex2all" (formula "38"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "allLeft" (formula "23") (inst "t=k_1"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "24") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "6") (inst "t=l_2"))
                           (rule "applyEq" (formula "6") (term "0,0,1") (ifseqformula "5"))
                           (rule "inEqSimp_contradInEq0" (formula "6") (term "1,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "6") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "notLeft" (formula "6"))
                           (rule "allLeft" (formula "6") (inst "t=l_1"))
                           (rule "replace_known_left" (formula "6") (term "0,1") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "allLeft" (formula "37") (inst "t=j_0"))
                           (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0,0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "37") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "allLeft" (formula "11") (inst "t=l_0"))
                           (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "11") (term "0,0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "allLeft" (formula "12") (inst "t=l_2"))
                           (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "12") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_contradInEq0" (formula "12") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0"))
                           (rule "leq_literals" (formula "12") (term "0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "notLeft" (formula "12"))
                           (rule "allLeft" (formula "27") (inst "t=k_2"))
                           (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "27") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "27") (term "0,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "allLeft" (formula "1") (inst "t=l_2"))
                           (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                           (rule "mul_literals" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1"))
                           (rule "mul_literals" (formula "10") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "40") (term "0,0"))
                           (rule "add_zero_left" (formula "40") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                           (rule "mul_literals" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1"))
                           (rule "mul_literals" (formula "26") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "26"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_zero_right" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_2]) FALSE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "equal_literals" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "notRight" (formula "36"))
                           (rule "exLeft" (formula "1") (inst "sk=l_2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "nnf_ex2all" (formula "38"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "allLeft" (formula "23") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "24") (inst "t=k_1"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "24") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "24") (term "0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "25") (inst "t=k_2"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "25") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0"))
                           (rule "leq_literals" (formula "25") (term "0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "9") (inst "t=l_0"))
                           (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "11"))
                           (rule "qeq_literals" (formula "9") (term "0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "allLeft" (formula "5") (inst "t=l_1"))
                           (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "allLeft" (formula "1") (inst "t=l_2"))
                           (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "29") (inst "t=l_0"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "29") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "cut_direct" (formula "29") (term "0"))
                           (branch "CUT: l_0 >= i_0 TRUE"
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "allLeft" (formula "30") (inst "t=l_1"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "allLeft" (formula "42") (inst "t=l_1"))
                              (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                              (rule "applyEq" (formula "42") (term "0,1,0,0,1,0") (ifseqformula "10"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "42") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "allLeft" (formula "42") (inst "t=j_0"))
                              (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "42") (term "1"))
                              (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                              (rule "mul_literals" (formula "42") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "42") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1"))
                              (rule "add_literals" (formula "42") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                              (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1"))
                              (rule "leq_literals" (formula "42") (term "0,1"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "42"))
                              (rule "applyEqRigid" (formula "11") (term "0,2,0") (ifseqformula "6"))
                              (rule "eqSymm" (formula "11"))
                              (rule "applyEqRigid" (formula "44") (term "1,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "31") (term "0,2,0,1") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                              (rule "applyEq" (formula "43") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "43"))
                              (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                              (rule "add_literals" (formula "43") (term "1,0"))
                              (rule "times_zero_1" (formula "43") (term "0"))
                              (rule "qeq_literals" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,0"))
                              (rule "times_zero_1" (formula "7") (term "0"))
                              (rule "leq_literals" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "applyEq" (formula "40") (term "1,1,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "25"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0"))
                              (rule "add_zero_right" (formula "25") (term "0"))
                              (rule "qeq_literals" (formula "25"))
                              (rule "closeFalse" (formula "25"))
                           )
                           (branch "CUT: l_0 >= i_0 FALSE"
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_geqRight" (formula "42"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "12"))
                              (rule "times_zero_1" (formula "26") (term "0,0"))
                              (rule "add_zero_left" (formula "26") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "mul_literals" (formula "26") (term "1"))
                              (rule "allLeft" (formula "32") (inst "t=j_0"))
                              (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "32") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "32") (term "0,0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "allLeft" (formula "33") (inst "t=l_1"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "33") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "allLeft" (formula "45") (inst "t=l_1"))
                              (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                              (rule "applyEq" (formula "45") (term "0,1,0,0,1,0") (ifseqformula "11"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "45") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "allLeft" (formula "45") (inst "t=j_0"))
                              (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "45") (term "1"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,1"))
                              (rule "mul_literals" (formula "45") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "45") (term "1") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1"))
                              (rule "add_literals" (formula "45") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                              (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "45") (term "0,0,1"))
                              (rule "leq_literals" (formula "45") (term "0,1"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "45") (term "0,0"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "45"))
                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "46"))
                              (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                              (rule "add_literals" (formula "46") (term "1,0"))
                              (rule "times_zero_1" (formula "46") (term "0"))
                              (rule "qeq_literals" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "7"))
                              (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "7"))
                              (rule "applyEqRigid" (formula "33") (term "0,2,0,1") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "7"))
                              (rule "applyEqRigid" (formula "11") (term "0,2,0") (ifseqformula "7"))
                              (rule "eqSymm" (formula "11"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,0"))
                              (rule "times_zero_1" (formula "8") (term "0"))
                              (rule "leq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                              (rule "applyEq" (formula "43") (term "1,1,1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "27"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "1,1,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0"))
                              (rule "add_zero_right" (formula "27") (term "0"))
                              (rule "qeq_literals" (formula "27"))
                              (rule "closeFalse" (formula "27"))
                           )
                        )
                     )
                     (branch "exists int l; (((l >= 0 & l <= -1 + b.length)<<SC>> & b[l] = a[k_1])<<SC>>) FALSE"
                        (rule "eqSymm" (formula "31"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "equal_literals" (formula "31") (term "1"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "notRight" (formula "31"))
                        (rule "exLeft" (formula "1") (inst "sk=l_1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "nnf_ex2all" (formula "33"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "ifthenelse_split" (formula "35") (term "1"))
                        (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_2]) TRUE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "equal_literals" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "exLeft" (formula "1") (inst "sk=l_2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "nnf_ex2all" (formula "38"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "allLeft" (formula "23") (inst "t=k_1"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "35") (inst "t=j_0"))
                           (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "35") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "allLeft" (formula "24") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "25") (inst "t=k_2"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "14"))
                           (rule "qeq_literals" (formula "25") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0,0"))
                           (rule "leq_literals" (formula "25") (term "0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "10") (inst "t=l_1"))
                           (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "9"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "10") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "10") (term "0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "allLeft" (formula "10") (inst "t=l_2"))
                           (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "4"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "10") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "10") (term "0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "allLeft" (formula "10") (inst "t=l_0"))
                           (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "10") (term "0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "allLeft" (formula "5") (inst "t=j_0"))
                           (rule "eqSymm" (formula "5") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                           (rule "inEqSimp_contradEq3" (formula "5") (term "0,1") (ifseqformula "25"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,1"))
                           (rule "qeq_literals" (formula "5") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "allLeft" (formula "5") (inst "t=l_0"))
                           (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                           (rule "applyEq" (formula "5") (term "0,0,1") (ifseqformula "15"))
                           (rule "eqSymm" (formula "5") (term "0,1"))
                           (rule "replace_known_right" (formula "5") (term "0,1") (ifseqformula "42"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "allLeft" (formula "5") (inst "t=l_1"))
                           (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "38") (term "0,0"))
                           (rule "add_zero_left" (formula "38") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "5"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "9"))
                           (rule "andLeft" (formula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "1,1,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0"))
                           (rule "add_zero_right" (formula "24") (term "0"))
                           (rule "leq_literals" (formula "24"))
                           (rule "closeFalse" (formula "24"))
                        )
                        (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_2]) FALSE"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "equal_literals" (formula "36") (term "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "notRight" (formula "36"))
                           (rule "exLeft" (formula "1") (inst "sk=l_2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "nnf_ex2all" (formula "38"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "allLeft" (formula "23") (inst "t=k_1"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "16"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "35") (inst "t=j_0"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "35") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "allLeft" (formula "24") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "24") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                           (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,0"))
                           (rule "leq_literals" (formula "24") (term "0,0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "allLeft" (formula "10") (inst "t=l_1"))
                           (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "9"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "10") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (term "0") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "allLeft" (formula "10") (inst "t=l_0"))
                           (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "10") (term "0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "allLeft" (formula "5") (inst "t=j_0"))
                           (rule "eqSymm" (formula "5") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                           (rule "inEqSimp_contradEq3" (formula "5") (term "0,1") (ifseqformula "25"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "0,0,0,1"))
                           (rule "qeq_literals" (formula "5") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "allLeft" (formula "5") (inst "t=l_1"))
                           (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "37") (term "0,0"))
                           (rule "add_zero_left" (formula "37") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "5"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                           (rule "mul_literals" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1"))
                           (rule "polySimp_rightDist" (formula "14") (term "1"))
                           (rule "mul_literals" (formula "14") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "5"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                           (rule "mul_literals" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                           (rule "mul_literals" (formula "25") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "9"))
                           (rule "andLeft" (formula "25"))
                           (rule "inEqSimp_homoInEq1" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                           (rule "add_literals" (formula "25") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                           (rule "add_literals" (formula "25") (term "1,1,0"))
                           (rule "times_zero_1" (formula "25") (term "1,0"))
                           (rule "add_zero_right" (formula "25") (term "0"))
                           (rule "leq_literals" (formula "25"))
                           (rule "closeFalse" (formula "25"))
                        )
                     )
                  )
               )
            )
            (branch "Show Axiom Satisfiability"
                (builtin "One Step Simplification" (formula "20"))
               (rule "closeTrue" (formula "20"))
            )
         )
         (branch "if b_3 false"
             (builtin "One Step Simplification" (formula "23"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0,0"))
            (rule "leq_literals" (formula "6") (term "0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "qeq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "compound_less_than_comparison_2" (formula "22") (term "1") (inst "#v1=i_4") (inst "#v0=i_3"))
            (rule "variableDeclarationAssign" (formula "22") (term "1"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "i_3"))
            (rule "assignment" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "variableDeclarationAssign" (formula "22") (term "1"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "i_4"))
            (rule "assignment_read_length" (formula "22"))
            (branch "Normal Execution (_b != null)"
                (builtin "One Step Simplification" (formula "22"))
               (rule "less_than_comparison_simple" (formula "22") (term "1"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
               (rule "blockEmpty" (formula "22") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0"))
               (rule "ifElseSplit" (formula "22"))
               (branch "if b_2 true"
                   (builtin "One Step Simplification" (formula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,0"))
                  (rule "leq_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "ifElseUnfold" (formula "22") (term "1") (inst "#boolv=b_5"))
                  (rule "variableDeclaration" (formula "22") (term "1") (newnames "b_5"))
                  (rule "compound_less_than_comparison_2" (formula "22") (term "1") (inst "#v1=i_6") (inst "#v0=i_5"))
                  (rule "variableDeclarationAssign" (formula "22") (term "1"))
                  (rule "variableDeclaration" (formula "22") (term "1") (newnames "i_5"))
                  (rule "assignment_array2" (formula "22"))
                  (branch "Normal Execution (_a != null)"
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "variableDeclarationAssign" (formula "22") (term "1"))
                     (rule "variableDeclaration" (formula "22") (term "1") (newnames "i_6"))
                     (rule "assignment_array2" (formula "22"))
                     (branch "Normal Execution (_b != null)"
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "less_than_comparison_simple" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0"))
                        (rule "ifElseSplit" (formula "22"))
                        (branch "if b_5 true"
                            (builtin "One Step Simplification" (formula "23"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "postincrement" (formula "23") (term "1"))
                           (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=i_7"))
                           (rule "variableDeclarationAssign" (formula "23") (term "1"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "i_7"))
                           (rule "remove_parentheses_right" (formula "23") (term "1"))
                           (rule "assignmentAdditionInt" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "23") (term "1"))
                           (rule "assignment" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "blockEmpty" (formula "23") (term "1"))
                           (rule "lsContinue" (formula "23") (term "1"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "3")) (ifInst ""  (formula "5")))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1"))
                           (rule "bsum_induction_upper_concrete" (formula "23") (term "0,1,0"))
                           (rule "polySimp_homoEq" (formula "23") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "1,1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                           (rule "precOfInt" (formula "23") (term "1"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0,0,1,0,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                           (rule "add_zero_right" (formula "23") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                           (rule "add_zero_right" (formula "23") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                           (rule "add_zero_right" (formula "23") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,1"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,1"))
                           (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,1"))
                           (rule "add_literals" (formula "23") (term "1,0,1,1"))
                           (rule "times_zero_1" (formula "23") (term "0,1,1"))
                           (rule "leq_literals" (formula "23") (term "1,1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,0,0,1,0"))
                           (rule "replace_known_left" (formula "23") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                           (rule "times_zero_2" (formula "23") (term "1,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,1"))
                           (rule "applyEq" (formula "23") (term "0,1,0,1,0") (ifseqformula "8"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0,1,0"))
                           (rule "add_literals" (formula "23") (term "1,0,0,1,0"))
                           (rule "times_zero_1" (formula "23") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "23") (term "0,1,0"))
                           (rule "polySimp_invertEq" (formula "23") (term "1,0"))
                           (rule "times_zero_2" (formula "23") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "equal_literals" (formula "23") (term "1,1,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0,1,1"))
                           (rule "mul_literals" (formula "23") (term "0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0,0,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "23") (term "0,1,0,0") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0,0,0") (ifseqformula "4"))
                           (rule "leq_literals" (formula "23") (term "0,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "cut_direct" (formula "23") (term "1"))
                           (branch "CUT: b.length >= 1 + i_0 + j_0 + a.length * -1 TRUE"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "andRight" (formula "24"))
                              (branch
                                 (rule "andRight" (formula "24"))
                                 (branch
                                    (rule "orRight" (formula "24"))
                                    (rule "allRight" (formula "25") (inst "sk=l_0"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "27"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                    (rule "add_literals" (formula "7") (term "0,1"))
                                    (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "allLeft" (formula "23") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0)"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "leq_literals" (formula "21") (term "0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "allLeft" (formula "10") (inst "t=l_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "10") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "allLeft" (formula "23") (inst "t=i_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "4"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "inEqSimp_homoInEq1" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0"))
                                    (rule "leq_literals" (formula "23"))
                                    (rule "closeFalse" (formula "23"))
                                 )
                                 (branch
                                    (rule "allRight" (formula "24") (inst "sk=m_0"))
                                    (rule "orRight" (formula "24"))
                                    (rule "orRight" (formula "24"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "26"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "allLeft" (formula "11") (inst "t=m_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                    (rule "leq_literals" (formula "11") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "10"))
                                    (rule "inEqSimp_commuteGeq" (formula "2"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "11"))
                                    (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "1,0"))
                                    (rule "times_zero_1" (formula "11") (term "0"))
                                    (rule "leq_literals" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "10"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch
                                 (rule "notRight" (formula "24"))
                                 (rule "exLeft" (formula "1") (inst "sk=l_0"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "allLeft" (formula "10") (inst "t=l_0"))
                                 (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "10") (term "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "10") (term "0,1"))
                                 (rule "qeq_literals" (formula "10") (term "1"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,1"))
                                 (rule "leq_literals" (formula "10") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "closeFalse" (formula "10"))
                              )
                           )
                           (branch "CUT: b.length >= 1 + i_0 + j_0 + a.length * -1 FALSE"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "false_right" (formula "24"))
                              (rule "inEqSimp_geqRight" (formula "23"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                              (rule "andLeft" (formula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                        )
                        (branch "if b_5 false"
                            (builtin "One Step Simplification" (formula "23"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_geqRight" (formula "19"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "elim_double_block_2" (formula "23") (term "1"))
                           (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=b_6"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "b_6"))
                           (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=i_8") (inst "#v0=i_7"))
                           (rule "variableDeclarationAssign" (formula "23") (term "1"))
                           (rule "variableDeclaration" (formula "23") (term "1") (newnames "i_7"))
                           (rule "assignment_array2" (formula "23"))
                           (branch "Normal Execution (_b != null)"
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "variableDeclarationAssign" (formula "23") (term "1"))
                              (rule "variableDeclaration" (formula "23") (term "1") (newnames "i_8"))
                              (rule "assignment_array2" (formula "23"))
                              (branch "Normal Execution (_a != null)"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "less_than_comparison_simple" (formula "23") (term "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
                                 (rule "ifElseSplit" (formula "23"))
                                 (branch "if b_6 true"
                                     (builtin "One Step Simplification" (formula "24"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "postincrement" (formula "23") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=i_9"))
                                    (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                    (rule "variableDeclaration" (formula "23") (term "1") (newnames "i_9"))
                                    (rule "remove_parentheses_right" (formula "23") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "23") (term "1"))
                                    (rule "assignment" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "blockEmpty" (formula "23") (term "1"))
                                    (rule "lsContinue" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "4")) (ifInst ""  (formula "2")))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,0,2,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,1,1,0,0,0,2,0,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "1,1,0,0,0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,1"))
                                    (rule "precOfInt" (formula "23") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "0,1,1"))
                                    (rule "leq_literals" (formula "23") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                    (rule "times_zero_2" (formula "23") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "23") (term "0,1,0,0,0") (ifseqformula "3"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0,1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0,0") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "23") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "cut_direct" (formula "23") (term "1"))
                                    (branch "CUT: b.length >= 1 + i_0 + j_0 + a.length * -1 TRUE"
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "cut_direct" (formula "24") (term "1"))
                                       (branch "CUT: bsum{int k;}(0, i_0, if (exists int l; (l >= 0 & l <= j_0 & b[l] = a[k])) then (1) else (0)) = result_0 TRUE"
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "andRight" (formula "25"))
                                          (branch
                                             (rule "allRight" (formula "25") (inst "sk=l_0"))
                                             (rule "orRight" (formula "25"))
                                             (rule "orRight" (formula "25"))
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "11") (inst "t=l_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                             (rule "leq_literals" (formula "11") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "2"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "qeq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "11"))
                                             (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                             (rule "add_literals" (formula "11") (term "1,0"))
                                             (rule "times_zero_1" (formula "11") (term "0"))
                                             (rule "leq_literals" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "10"))
                                             (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch
                                             (rule "orRight" (formula "25"))
                                             (rule "allRight" (formula "26") (inst "sk=m_0"))
                                             (rule "orRight" (formula "26"))
                                             (rule "orRight" (formula "26"))
                                             (rule "inEqSimp_leqRight" (formula "28"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "28"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "28"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                             (rule "add_literals" (formula "7") (term "0,1"))
                                             (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "7"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "22") (inst "t=i_0"))
                                             (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0"))
                                             (rule "leq_literals" (formula "22") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "allLeft" (formula "12") (inst "t=m_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_contradInEq0" (formula "12") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                             (rule "leq_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "allLeft" (formula "27") (inst "t=j_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,1,0"))
                                             (rule "leq_literals" (formula "27") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "27") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "4"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0"))
                                             (rule "leq_literals" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                       )
                                       (branch "CUT: bsum{int k;}(0, i_0, if (exists int l; (l >= 0 & l <= j_0 & b[l] = a[k])) then (1) else (0)) = result_0 FALSE"
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "false_right" (formula "25"))
                                          (rule "equal_bsum2" (formula "24") (ifseqformula "9"))
                                          (rule "allRight" (formula "24") (inst "sk=k_0"))
                                          (rule "impRight" (formula "24"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "bsum_equal_split4" (formula "27") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "bsum_lower_equals_upper" (formula "27") (term "1,1,1"))
                                          (rule "bsum_lower_equals_upper" (formula "27") (term "0,2,1"))
                                          (rule "less_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "eqSymm" (formula "27") (term "1"))
                                          (rule "polySimp_elimSub" (formula "27") (term "2,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "27") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "bsum_equal_split2" (formula "28") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "bsum_lower_equals_upper" (formula "28") (term "0,1,1"))
                                          (rule "bsum_lower_equals_upper" (formula "28") (term "1,2,1"))
                                          (rule "eqSymm" (formula "28") (term "1,1"))
                                          (rule "polySimp_elimSub" (formula "28") (term "2,0,2,1"))
                                          (rule "polySimp_elimSub" (formula "28") (term "2,0,1,1"))
                                          (rule "replace_known_right" (formula "28") (term "1,1") (ifseqformula "27"))
                                          (rule "polySimp_addComm0" (formula "28") (term "2,0,2,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_commuteLeq" (formula "28") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "28") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "bsum_zero_right" (formula "27"))
                                          (rule "allRight" (formula "27") (inst "sk=k0_0"))
                                          (rule "impRight" (formula "27"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "bsum_zero_right" (formula "31"))
                                          (rule "allRight" (formula "31") (inst "sk=k_1"))
                                          (rule "impRight" (formula "31"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "33"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "ifthenelse_split" (formula "30") (term "0"))
                                          (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_0]) TRUE"
                                             (rule "exLeft" (formula "1") (inst "sk=l_0"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "33"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "equal_literals" (formula "33") (term "1"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "nnf_ex2all" (formula "33"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                             (rule "ifthenelse_split" (formula "34") (term "1"))
                                             (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k0_0]) TRUE"
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "equal_literals" (formula "35") (term "1"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "exLeft" (formula "1") (inst "sk=l_1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "nnf_ex2all" (formula "37"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "ifthenelse_split" (formula "39") (term "0"))
                                                (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) TRUE"
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "42"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "equal_literals" (formula "42") (term "1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "nnf_ex2all" (formula "42"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "allLeft" (formula "9") (inst "t=l_0"))
                                                   (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0"))
                                                   (rule "leq_literals" (formula "13"))
                                                   (rule "closeFalse" (formula "13"))
                                                )
                                                (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) FALSE"
                                                   (rule "eqSymm" (formula "40"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "equal_literals" (formula "40") (term "1"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "notRight" (formula "40"))
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "nnf_ex2all" (formula "42"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "allLeft" (formula "9") (inst "t=l_0"))
                                                   (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "13"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                             )
                                             (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k0_0]) FALSE"
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "equal_literals" (formula "35") (term "1"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "notRight" (formula "35"))
                                                (rule "exLeft" (formula "1") (inst "sk=l_1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "nnf_ex2all" (formula "37"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "ifthenelse_split" (formula "39") (term "0"))
                                                (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) TRUE"
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "42"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "equal_literals" (formula "42") (term "1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "nnf_ex2all" (formula "42"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "allLeft" (formula "9") (inst "t=l_0"))
                                                   (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "13"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                                (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) FALSE"
                                                   (rule "eqSymm" (formula "40"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "equal_literals" (formula "40") (term "1"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "notRight" (formula "40"))
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "nnf_ex2all" (formula "42"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "allLeft" (formula "9") (inst "t=l_0"))
                                                   (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0"))
                                                   (rule "leq_literals" (formula "13"))
                                                   (rule "closeFalse" (formula "13"))
                                                )
                                             )
                                          )
                                          (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_0]) FALSE"
                                             (rule "eqSymm" (formula "31"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "equal_literals" (formula "31") (term "1"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "notRight" (formula "31"))
                                             (rule "exLeft" (formula "1") (inst "sk=l_0"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "nnf_ex2all" (formula "33"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                             (rule "ifthenelse_split" (formula "34") (term "1"))
                                             (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k0_0]) TRUE"
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "equal_literals" (formula "35") (term "1"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "exLeft" (formula "1") (inst "sk=l_1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "nnf_ex2all" (formula "37"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "ifthenelse_split" (formula "39") (term "0"))
                                                (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) TRUE"
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "42"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "equal_literals" (formula "42") (term "1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "nnf_ex2all" (formula "42"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "36") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "allLeft" (formula "26") (inst "t=k_0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "26") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "allLeft" (formula "1") (inst "t=l_2"))
                                                   (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "1") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) FALSE"
                                                   (rule "eqSymm" (formula "40"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "equal_literals" (formula "40") (term "1"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "notRight" (formula "40"))
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "nnf_ex2all" (formula "42"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0") (ifseqformula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "36") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "allLeft" (formula "26") (inst "t=k_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "18"))
                                                   (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "26") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "allLeft" (formula "27") (inst "t=k0_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "27") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "allLeft" (formula "28") (inst "t=k_1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "28") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "28") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "allLeft" (formula "9") (inst "t=l_0"))
                                                   (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "12"))
                                                   (rule "applyEqRigid" (formula "14") (term "0,2,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "14"))
                                                   (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13"))
                                                   (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                   (rule "add_literals" (formula "13") (term "1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "0"))
                                                   (rule "qeq_literals" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10"))
                                                   (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "0"))
                                                   (rule "leq_literals" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq0" (formula "25"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0"))
                                                   (rule "qeq_literals" (formula "25"))
                                                   (rule "closeFalse" (formula "25"))
                                                )
                                             )
                                             (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k0_0]) FALSE"
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "equal_literals" (formula "35") (term "1"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "notRight" (formula "35"))
                                                (rule "exLeft" (formula "1") (inst "sk=l_1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "nnf_ex2all" (formula "37"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "ifthenelse_split" (formula "39") (term "0"))
                                                (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) TRUE"
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "42"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "equal_literals" (formula "42") (term "1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "nnf_ex2all" (formula "42"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "36") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "allLeft" (formula "26") (inst "t=k_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "26") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "allLeft" (formula "5") (inst "t=l_1"))
                                                   (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                                (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) FALSE"
                                                   (rule "eqSymm" (formula "40"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "equal_literals" (formula "40") (term "1"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "notRight" (formula "40"))
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "nnf_ex2all" (formula "42"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "allLeft" (formula "36") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "36") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "allLeft" (formula "26") (inst "t=k_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "26") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "allLeft" (formula "5") (inst "t=l_1"))
                                                   (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: b.length >= 1 + i_0 + j_0 + a.length * -1 FALSE"
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "false_right" (formula "24"))
                                       (rule "inEqSimp_geqRight" (formula "23"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                       (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "19") (term "0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch "if b_6 false"
                                     (builtin "One Step Simplification" (formula "24"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_leqRight" (formula "20"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "9") (term "1,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "elim_double_block_2" (formula "23") (term "1"))
                                    (rule "elim_double_block_2" (formula "23") (term "1"))
                                    (rule "postincrement" (formula "23") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=i_9"))
                                    (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                    (rule "variableDeclaration" (formula "23") (term "1") (newnames "i_9"))
                                    (rule "remove_parentheses_right" (formula "23") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "23") (term "1"))
                                    (rule "assignment" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "postincrement" (formula "23") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "23") (term "1") (inst "#v=i_10"))
                                    (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                    (rule "variableDeclaration" (formula "23") (term "1") (newnames "i_10"))
                                    (rule "remove_parentheses_right" (formula "23") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "23") (term "1"))
                                    (rule "assignment" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "postincrement" (formula "23") (term "1"))
                                    (rule "compound_reference_cast_expression_primitive" (formula "23") (term "1") (inst "#v=i_11"))
                                    (rule "variableDeclarationAssign" (formula "23") (term "1"))
                                    (rule "variableDeclaration" (formula "23") (term "1") (newnames "i_11"))
                                    (rule "remove_parentheses_right" (formula "23") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "translateJavaAddInt" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "23") (term "1"))
                                    (rule "assignment" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "blockEmpty" (formula "23") (term "1"))
                                    (rule "lsContinue" (formula "23") (term "1"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,0,2,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,1,1,0,0,0,2,0,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "1,1,0,0,0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "bsum_induction_upper_concrete" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_homoEq" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "1,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                    (rule "precOfInt" (formula "23") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,1"))
                                    (rule "leq_literals" (formula "23") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,0,0,1,0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1,0,0,1,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                    (rule "times_zero_2" (formula "23") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "1,0,0,0,0") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0,0") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "23") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "ifthenelse_split" (formula "23") (term "0,1,1,1,0"))
                                    (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[i_0]) TRUE"
                                       (rule "mul_literals" (formula "24") (term "1,1,1,0"))
                                       (rule "exLeft" (formula "1") (inst "sk=l_0"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addComm1" (formula "26") (term "1,1,0"))
                                       (rule "add_literals" (formula "26") (term "0,1,1,0"))
                                       (rule "add_zero_left" (formula "26") (term "1,1,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "cut_direct" (formula "26") (term "1"))
                                       (branch "CUT: b.length >= 2 + i_0 + j_0 + a.length * -1 TRUE"
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "cut_direct" (formula "27") (term "1"))
                                          (branch "CUT: bsum{int k;}(0, i_0, if (exists int l; (l >= 0 & l <= j_0 & b[l] = a[k])) then (1) else (0)) = result_0 TRUE"
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "andRight" (formula "28"))
                                             (branch
                                                (rule "orRight" (formula "28"))
                                                (rule "allRight" (formula "29") (inst "sk=l_1"))
                                                (rule "orRight" (formula "29"))
                                                (rule "orRight" (formula "29"))
                                                (rule "inEqSimp_leqRight" (formula "31"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "30"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "31"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "31"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                                (rule "add_literals" (formula "11") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0"))
                                                (rule "leq_literals" (formula "31") (term "0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "false_right" (formula "31"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0)"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "25") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,1,0"))
                                                (rule "leq_literals" (formula "25") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "12"))
                                                (rule "qeq_literals" (formula "25") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "12"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "cut_direct" (formula "14") (term "0"))
                                                (branch "CUT: j_0 <= i_0 TRUE"
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0"))
                                                   (rule "allLeft" (formula "27") (inst "t=j_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "27") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "allLeft" (formula "31") (inst "t=j_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                   (rule "applyEq" (formula "31") (term "0,1,0,0,1,0") (ifseqformula "9"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "31") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "15")))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "allLeft" (formula "16") (inst "t=j_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "30") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "17")))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0,0"))
                                                   (rule "commute_or_2" (formula "32") (term "0"))
                                                   (rule "cut_direct" (formula "32") (term "1,0"))
                                                   (branch "CUT: b.length <= i_0 TRUE"
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "32"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                                      (rule "times_zero_1" (formula "31") (term "0,0"))
                                                      (rule "add_zero_left" (formula "31") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "32"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "11"))
                                                      (rule "times_zero_1" (formula "15") (term "0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "allLeft" (formula "31") (inst "t=j_0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "allLeft" (formula "18") (inst "t=l_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "allLeft" (formula "16") (inst "t=l_0"))
                                                      (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "16") (term "0,1"))
                                                      (rule "qeq_literals" (formula "16") (term "1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "16") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "8"))
                                                      (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "16"))
                                                      (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "15"))
                                                      (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7"))
                                                      (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "0"))
                                                      (rule "qeq_literals" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "17") (term "0,2,0,1") (ifseqformula "13"))
                                                      (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14"))
                                                      (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "0"))
                                                      (rule "leq_literals" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "allLeft" (formula "16") (inst "t=l_1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "allLeft" (formula "14") (inst "t=l_1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "allLeft" (formula "32") (inst "t=l_1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "allLeft" (formula "36") (inst "t=l_1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0"))
                                                      (rule "allLeft" (formula "30") (inst "t=l_1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "cut_direct" (formula "33") (term "1,0"))
                                                      (branch "CUT: a.length <= l_1 TRUE"
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "33"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "15") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "CUT: a.length <= l_1 FALSE"
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_leqRight" (formula "39"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "cut_direct" (formula "38") (term "1,0"))
                                                         (branch "CUT: b.length <= l_1 TRUE"
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "true_left" (formula "39"))
                                                            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "38"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                            (rule "mul_literals" (formula "10") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "10"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "CUT: b.length <= l_1 FALSE"
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "inEqSimp_leqRight" (formula "40"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "38"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "33") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "20") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "5") (term "0,0"))
                                                            (rule "add_zero_left" (formula "5") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                            (rule "mul_literals" (formula "5") (term "1"))
                                                            (rule "cut_direct" (formula "17") (term "0"))
                                                            (branch "CUT: l_1 >= j_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "true_left" (formula "18"))
                                                               (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "4"))
                                                               (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                                               (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "15"))
                                                               (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "qeq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEqRigid" (formula "38") (term "1,1,0,0") (ifseqformula "14"))
                                                               (rule "applyEq" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "14"))
                                                               (rule "applyEq" (formula "38") (term "0,2,1,1,1,0") (ifseqformula "14"))
                                                               (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "14"))
                                                               (rule "applyEqRigid" (formula "17") (term "0,2,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "14"))
                                                               (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                               (rule "add_literals" (formula "14") (term "1,0"))
                                                               (rule "times_zero_1" (formula "14") (term "0"))
                                                               (rule "leq_literals" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "13"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                                               (rule "inEqSimp_commuteGeq" (formula "2"))
                                                               (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "2"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0"))
                                                               (rule "add_zero_right" (formula "26") (term "0"))
                                                               (rule "leq_literals" (formula "26"))
                                                               (rule "closeFalse" (formula "26"))
                                                            )
                                                            (branch "CUT: l_1 >= j_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_geqRight" (formula "42"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0,0"))
                                                               (rule "qeq_literals" (formula "5") (term "0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "17"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "32"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "leq_literals" (formula "6"))
                                                               (rule "closeFalse" (formula "6"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: b.length <= i_0 FALSE"
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_leqRight" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "allLeft" (formula "31") (inst "t=j_0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "cut_direct" (formula "31") (term "1,0"))
                                                      (branch "CUT: a.length <= j_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "31"))
                                                         (rule "times_zero_1" (formula "27") (term "0,0"))
                                                         (rule "add_zero_left" (formula "27") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "31"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                         (rule "mul_literals" (formula "12") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "12"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0"))
                                                         (rule "leq_literals" (formula "16"))
                                                         (rule "closeFalse" (formula "16"))
                                                      )
                                                      (branch "CUT: a.length <= j_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "allLeft" (formula "19") (inst "t=l_0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "allLeft" (formula "17") (inst "t=l_0"))
                                                         (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "17") (term "0,1"))
                                                         (rule "qeq_literals" (formula "17") (term "1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9"))
                                                         (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "1,0"))
                                                         (rule "times_zero_1" (formula "9") (term "0"))
                                                         (rule "qeq_literals" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "16"))
                                                         (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "15"))
                                                         (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "15"))
                                                         (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15"))
                                                         (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                         (rule "add_literals" (formula "15") (term "1,0"))
                                                         (rule "times_zero_1" (formula "15") (term "0"))
                                                         (rule "leq_literals" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "applyEq" (formula "17") (term "0,2,0,1") (ifseqformula "14"))
                                                         (rule "cut_direct" (formula "16") (term "0"))
                                                         (branch "CUT: j_0 >= i_0 TRUE"
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "13"))
                                                            (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "16"))
                                                            (rule "applyEqRigid" (formula "6") (term "1,1,0,0,0,2,0") (ifseqformula "16"))
                                                            (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "16"))
                                                            (rule "applyEqRigid" (formula "30") (term "1,1,0,0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "18") (term "1,1,1,0,0,0,2,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "14"))
                                                            (rule "applyEqRigid" (formula "13") (term "1,1,0,0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "14"))
                                                            (rule "applyEqRigid" (formula "27") (term "0,2,0") (ifseqformula "14"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                            (rule "applyEqRigid" (formula "29") (term "0,2,1,1,1,0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "14"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11"))
                                                            (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                                            (rule "add_literals" (formula "11") (term "1,0"))
                                                            (rule "times_zero_1" (formula "11") (term "0"))
                                                            (rule "qeq_literals" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14"))
                                                            (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "0"))
                                                            (rule "leq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "8"))
                                                            (rule "applyEqRigid" (formula "7") (term "1,0,1") (ifseqformula "13"))
                                                            (rule "polySimp_pullOutFactor3b" (formula "7") (term "0,1"))
                                                            (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "13"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                            (rule "mul_literals" (formula "25") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                            (rule "times_zero_1" (formula "3") (term "0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0"))
                                                            (rule "allLeft" (formula "13") (inst "t=l_1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                            (rule "commute_or_2" (formula "28") (term "0,0"))
                                                            (rule "commute_or_2" (formula "28") (term "0"))
                                                            (rule "allLeft" (formula "25") (inst "t=l_1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "25") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "cut_direct" (formula "29") (term "1,0"))
                                                            (branch "CUT: b.length <= 1 + i_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "31") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "29"))
                                                               (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                                               (rule "add_literals" (formula "29") (term "1,0"))
                                                               (rule "times_zero_1" (formula "29") (term "0"))
                                                               (rule "qeq_literals" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                               (rule "mul_literals" (formula "28") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "9"))
                                                               (rule "leq_literals" (formula "28") (term "0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0"))
                                                               (rule "qeq_literals" (formula "6") (term "0"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "cut_direct" (formula "12") (term "0"))
                                                               (branch "CUT: l_1 >= i_0 TRUE"
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0"))
                                                                  (rule "qeq_literals" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                                                  (rule "add_literals" (formula "12") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "0"))
                                                                  (rule "leq_literals" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "11"))
                                                                  (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22"))
                                                                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                  (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "10"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "2"))
                                                                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                                  (rule "mul_literals" (formula "22") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "21"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "CUT: l_1 >= i_0 FALSE"
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "inEqSimp_geqRight" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                                                                  (rule "leq_literals" (formula "9") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "allLeft" (formula "27") (inst "t=i_0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "1,1,0,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "27") (term "1,0,1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "27") (term "0,1,0,0,0"))
                                                                  (rule "leq_literals" (formula "27") (term "1,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "applyEq" (formula "27") (term "0,1,0,0,1,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                                  (rule "allLeft" (formula "10") (inst "t=l_1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "4"))
                                                                  (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "10") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "10") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "5"))
                                                                  (rule "andLeft" (formula "25"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "25"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "25") (term "0"))
                                                                  (rule "leq_literals" (formula "25"))
                                                                  (rule "closeFalse" (formula "25"))
                                                               )
                                                            )
                                                            (branch "CUT: b.length <= 1 + i_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "inEqSimp_leqRight" (formula "31"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "allLeft" (formula "29") (inst "t=l_1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "29") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "29") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "29"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "allLeft" (formula "31") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "31") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,1,0"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0,1,0"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0,1,0"))
                                                               (rule "add_zero_right" (formula "31") (term "0,1,0"))
                                                               (rule "leq_literals" (formula "31") (term "1,0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "applyEq" (formula "31") (term "0,1,0,0,1") (ifseqformula "8"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "10"))
                                                               (rule "qeq_literals" (formula "31") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "cut_direct" (formula "14") (term "0"))
                                                               (branch "CUT: l_1 >= i_0 TRUE"
                                                                   (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                  (rule "add_literals" (formula "15") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "0"))
                                                                  (rule "leq_literals" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "14"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "5"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0"))
                                                                  (rule "qeq_literals" (formula "2"))
                                                                  (rule "true_left" (formula "2"))
                                                                  (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "13"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "25"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                  (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "13"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                                                                  (rule "applyEq" (formula "3") (term "1") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "28") (term "0,1,0,0") (ifseqformula "6"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "23"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0"))
                                                                  (rule "leq_literals" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "CUT: l_1 >= i_0 FALSE"
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "inEqSimp_geqRight" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "3") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "3"))
                                                                  (rule "leq_literals" (formula "11") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "allLeft" (formula "12") (inst "t=l_1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "12") (term "1,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "4"))
                                                                  (rule "qeq_literals" (formula "12") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "27"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0"))
                                                                  (rule "leq_literals" (formula "6"))
                                                                  (rule "closeFalse" (formula "6"))
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: j_0 >= i_0 FALSE"
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "inEqSimp_geqRight" (formula "35"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0"))
                                                            (rule "qeq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "13") (term "0,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                            (rule "mul_literals" (formula "13") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                            (rule "commute_or_2" (formula "34") (term "0,0"))
                                                            (rule "commute_or_2" (formula "34") (term "0"))
                                                            (rule "allLeft" (formula "15") (inst "t=l_1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "allLeft" (formula "18") (inst "t=l_1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "allLeft" (formula "33") (inst "t=l_1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                                            (rule "commute_or_2" (formula "33") (term "0,0"))
                                                            (rule "commute_or_2" (formula "33") (term "0"))
                                                            (rule "allLeft" (formula "38") (inst "t=l_1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                            (rule "commute_or_2" (formula "38") (term "0,0"))
                                                            (rule "commute_or_2" (formula "38") (term "0"))
                                                            (rule "allLeft" (formula "36") (inst "t=j_0"))
                                                            (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "36") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "36") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "allLeft" (formula "31") (inst "t=l_1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "cut_direct" (formula "39") (term "1,0"))
                                                            (branch "CUT: b.length <= 1 + i_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "40"))
                                                               (rule "true_left" (formula "40"))
                                                               (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "42") (term "1,1,0,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "11") (term "0,0"))
                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "40"))
                                                               (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                                               (rule "add_literals" (formula "40") (term "1,0"))
                                                               (rule "times_zero_1" (formula "40") (term "0"))
                                                               (rule "qeq_literals" (formula "40"))
                                                               (rule "true_left" (formula "40"))
                                                               (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "3"))
                                                               (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "0"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                               (rule "mul_literals" (formula "35") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1"))
                                                               (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "9") (term "0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "34") (term "0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "true_left" (formula "34"))
                                                               (rule "cut_direct" (formula "32") (term "1,0"))
                                                               (branch "CUT: a.length <= l_1 TRUE"
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "32"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "14") (term "0") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "14") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "5"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch "CUT: a.length <= l_1 FALSE"
                                                                   (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "inEqSimp_leqRight" (formula "38"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "cut_direct" (formula "37") (term "1,0"))
                                                                  (branch "CUT: l_1 >= 1 + i_0 TRUE"
                                                                      (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "true_left" (formula "38"))
                                                                     (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "true_left" (formula "30"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (term "0") (ifseqformula "36"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "17") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "5"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "35"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "2") (term "0"))
                                                                     (rule "leq_literals" (formula "2"))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch "CUT: l_1 >= 1 + i_0 FALSE"
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "39"))
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "inEqSimp_geqRight" (formula "39"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                                     (rule "times_zero_1" (formula "7") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "7") (term "0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "13"))
                                                                     (rule "leq_literals" (formula "7") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "true_left" (formula "7"))
                                                                     (rule "cut_direct" (formula "15") (term "0"))
                                                                     (branch "CUT: l_1 >= j_0 TRUE"
                                                                         (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "true_left" (formula "16"))
                                                                        (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "6"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0") (ifseqformula "15"))
                                                                        (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "15"))
                                                                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "16"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                                        (rule "add_literals" (formula "16") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "16") (term "0"))
                                                                        (rule "leq_literals" (formula "16"))
                                                                        (rule "true_left" (formula "16"))
                                                                        (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "15"))
                                                                        (rule "applyEq" (formula "37") (term "1,1,0,0") (ifseqformula "14"))
                                                                        (rule "applyEqRigid" (formula "33") (term "0,2,1,1,1,0") (ifseqformula "14"))
                                                                        (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "14"))
                                                                        (rule "applyEq" (formula "35") (term "0,2,1,1,1,0") (ifseqformula "13"))
                                                                        (rule "applyEqRigid" (formula "16") (term "0,0") (ifseqformula "13"))
                                                                        (rule "applyEq" (formula "16") (term "0,2,0,1") (ifseqformula "13"))
                                                                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "15"))
                                                                         (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "true_left" (formula "16"))
                                                                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "13"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                        (rule "add_literals" (formula "5") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "0"))
                                                                        (rule "qeq_literals" (formula "5"))
                                                                        (rule "true_left" (formula "5"))
                                                                        (rule "applyEqRigid" (formula "27") (term "0,2,0") (ifseqformula "12"))
                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                                                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "7"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "5"))
                                                                        (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "7"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "5"))
                                                                        (rule "andLeft" (formula "25"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "25"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                                        (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "25") (term "0"))
                                                                        (rule "leq_literals" (formula "25"))
                                                                        (rule "closeFalse" (formula "25"))
                                                                     )
                                                                     (branch "CUT: l_1 >= j_0 FALSE"
                                                                         (builtin "One Step Simplification" (formula "15"))
                                                                        (rule "inEqSimp_geqRight" (formula "40"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "7") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "true_left" (formula "7"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "15"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "8"))
                                                                        (rule "andLeft" (formula "30"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "30"))
                                                                        (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                        (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                                        (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                                        (rule "add_literals" (formula "30") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "30") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "30") (term "0"))
                                                                        (rule "leq_literals" (formula "30"))
                                                                        (rule "closeFalse" (formula "30"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: b.length <= 1 + i_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "inEqSimp_leqRight" (formula "42"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0"))
                                                               (rule "qeq_literals" (formula "4") (term "0"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "cut_direct" (formula "34") (term "1,0"))
                                                               (branch "CUT: a.length <= l_1 TRUE"
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "true_left" (formula "35"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "34"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "3"))
                                                                  (rule "andLeft" (formula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "5") (term "0"))
                                                                  (rule "leq_literals" (formula "5"))
                                                                  (rule "closeFalse" (formula "5"))
                                                               )
                                                               (branch "CUT: a.length <= l_1 FALSE"
                                                                   (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_leqRight" (formula "42"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "cut_direct" (formula "41") (term "1,0"))
                                                                  (branch "CUT: b.length <= l_1 TRUE"
                                                                      (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "true_left" (formula "42"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "41"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "33") (term "0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "true_left" (formula "33"))
                                                                     (rule "inEqSimp_subsumption1" (formula "20") (term "0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "20") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "40"))
                                                                     (rule "times_zero_1" (formula "36") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "36") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "40"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0,0,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "1,0,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "41"))
                                                                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                     (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                                     (rule "mul_literals" (formula "13") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "6"))
                                                                     (rule "andLeft" (formula "13"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                                     (rule "add_literals" (formula "13") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "13") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "13") (term "0"))
                                                                     (rule "leq_literals" (formula "13"))
                                                                     (rule "closeFalse" (formula "13"))
                                                                  )
                                                                  (branch "CUT: b.length <= l_1 FALSE"
                                                                      (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "inEqSimp_leqRight" (formula "43"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "cut_direct" (formula "17") (term "0"))
                                                                     (branch "CUT: l_1 >= j_0 TRUE"
                                                                         (builtin "One Step Simplification" (formula "18"))
                                                                        (rule "true_left" (formula "18"))
                                                                        (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "6"))
                                                                        (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "17"))
                                                                        (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "16"))
                                                                        (rule "applyEqRigid" (formula "36") (term "0,2,1,1,1,0") (ifseqformula "16"))
                                                                        (rule "applyEqRigid" (formula "42") (term "0,2,1,1,1,0") (ifseqformula "16"))
                                                                        (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "16"))
                                                                        (rule "applyEq" (formula "32") (term "0,2,0,1") (ifseqformula "15"))
                                                                        (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "31"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "true_left" (formula "32"))
                                                                        (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "15"))
                                                                        (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "15"))
                                                                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "15"))
                                                                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "0"))
                                                                        (rule "qeq_literals" (formula "4"))
                                                                        (rule "true_left" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                                        (rule "add_literals" (formula "14") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "14") (term "0"))
                                                                        (rule "leq_literals" (formula "14"))
                                                                        (rule "true_left" (formula "14"))
                                                                        (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "13"))
                                                                        (rule "applyEqRigid" (formula "16") (term "0,2,0,1") (ifseqformula "13"))
                                                                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "15"))
                                                                         (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "true_left" (formula "16"))
                                                                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "4"))
                                                                        (rule "applyEq" (formula "35") (term "1,1,1,0") (ifseqformula "7"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "26"))
                                                                        (rule "andLeft" (formula "4"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                                        (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "4") (term "0"))
                                                                        (rule "leq_literals" (formula "4"))
                                                                        (rule "closeFalse" (formula "4"))
                                                                     )
                                                                     (branch "CUT: l_1 >= j_0 FALSE"
                                                                         (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "inEqSimp_geqRight" (formula "44"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "7") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "true_left" (formula "7"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "17"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "32"))
                                                                        (rule "andLeft" (formula "8"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "8") (term "0"))
                                                                        (rule "leq_literals" (formula "8"))
                                                                        (rule "closeFalse" (formula "8"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: j_0 <= i_0 FALSE"
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_leqRight" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "allLeft" (formula "31") (inst "t=j_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                   (rule "applyEq" (formula "31") (term "0,1,0,0,1,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "31") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "16")))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "allLeft" (formula "29") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "29") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "17")))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "allLeft" (formula "29") (inst "t=j_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                                   (rule "commute_or_2" (formula "29") (term "0,0"))
                                                   (rule "commute_or_2" (formula "29") (term "0"))
                                                   (rule "cut_direct" (formula "29") (term "1,0"))
                                                   (branch "CUT: a.length <= j_0 TRUE"
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "29"))
                                                      (rule "times_zero_1" (formula "26") (term "0,0"))
                                                      (rule "add_zero_left" (formula "26") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "29"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                      (rule "mul_literals" (formula "12") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "allLeft" (formula "32") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "cut_direct" (formula "33") (term "1,0"))
                                                      (branch "CUT: b.length <= i_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "33"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "12"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0"))
                                                         (rule "leq_literals" (formula "10"))
                                                         (rule "closeFalse" (formula "10"))
                                                      )
                                                      (branch "CUT: b.length <= i_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_leqRight" (formula "35"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "allLeft" (formula "19") (inst "t=l_0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "allLeft" (formula "18") (inst "t=l_0"))
                                                         (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,1"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "18") (term "0,1"))
                                                         (rule "qeq_literals" (formula "18") (term "1"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19"))
                                                         (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                         (rule "add_literals" (formula "19") (term "1,0"))
                                                         (rule "times_zero_1" (formula "19") (term "0"))
                                                         (rule "leq_literals" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "applyEqRigid" (formula "9") (term "0,2,0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "19") (term "0,2,0,1") (ifseqformula "17"))
                                                         (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "17"))
                                                         (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "7") (term "0") (ifseqformula "16"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7"))
                                                         (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "0"))
                                                         (rule "qeq_literals" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "inEqSimp_subsumption1" (formula "17") (term "0") (ifseqformula "9"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "33") (term "0,0"))
                                                         (rule "commute_or_2" (formula "33") (term "0"))
                                                         (rule "allLeft" (formula "16") (inst "t=l_1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "allLeft" (formula "18") (inst "t=l_1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "allLeft" (formula "32") (inst "t=l_1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "32") (term "0,0"))
                                                         (rule "commute_or_2" (formula "32") (term "0"))
                                                         (rule "allLeft" (formula "37") (inst "t=l_1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0"))
                                                         (rule "allLeft" (formula "30") (inst "t=l_1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "cut_direct" (formula "37") (term "1,0"))
                                                         (branch "CUT: b.length <= 1 + i_0 TRUE"
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "true_left" (formula "38"))
                                                            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "37"))
                                                            (rule "applyEq" (formula "40") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0"))
                                                            (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38"))
                                                            (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                                            (rule "add_literals" (formula "38") (term "1,0"))
                                                            (rule "times_zero_1" (formula "38") (term "0"))
                                                            (rule "qeq_literals" (formula "38"))
                                                            (rule "true_left" (formula "38"))
                                                            (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0"))
                                                            (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "9") (term "0,0"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                            (rule "mul_literals" (formula "35") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "35") (term "0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "9"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0"))
                                                            (rule "add_literals" (formula "8") (term "0"))
                                                            (rule "leq_literals" (formula "8"))
                                                            (rule "closeFalse" (formula "8"))
                                                         )
                                                         (branch "CUT: b.length <= 1 + i_0 FALSE"
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_leqRight" (formula "40"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "cut_direct" (formula "33") (term "1,0"))
                                                            (branch "CUT: a.length <= l_1 TRUE"
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "true_left" (formula "34"))
                                                               (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "33"))
                                                               (rule "times_zero_1" (formula "28") (term "0,0"))
                                                               (rule "add_zero_left" (formula "28") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "33"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "mul_literals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "19") (term "0") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "19") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "inEqSimp_subsumption1" (formula "30") (term "0") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "30") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "mul_literals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                               (rule "cut_direct" (formula "37") (term "1,0"))
                                                               (branch "CUT: b.length <= l_1 TRUE"
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "37"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "37"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "38"))
                                                                  (rule "times_zero_1" (formula "35") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "38"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "9") (term "0"))
                                                                  (rule "leq_literals" (formula "9"))
                                                                  (rule "closeFalse" (formula "9"))
                                                               )
                                                               (branch "CUT: b.length <= l_1 FALSE"
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "inEqSimp_leqRight" (formula "39"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "cut_direct" (formula "18") (term "0"))
                                                                  (branch "CUT: l_1 >= j_0 TRUE"
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "18"))
                                                                     (rule "applyEqRigid" (formula "33") (term "1") (ifseqformula "17"))
                                                                     (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "17"))
                                                                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "17"))
                                                                     (rule "applyEq" (formula "36") (term "0,2,1,1,1,0") (ifseqformula "16"))
                                                                     (rule "applyEq" (formula "36") (term "1,1,0,0") (ifseqformula "16"))
                                                                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "16"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "0"))
                                                                     (rule "qeq_literals" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "16"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                                     (rule "add_literals" (formula "16") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "16") (term "0"))
                                                                     (rule "leq_literals" (formula "16"))
                                                                     (rule "true_left" (formula "16"))
                                                                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
                                                                     (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "5"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "2"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "2"))
                                                                     (rule "andLeft" (formula "26"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "26") (term "0"))
                                                                     (rule "leq_literals" (formula "26"))
                                                                     (rule "closeFalse" (formula "26"))
                                                                  )
                                                                  (branch "CUT: l_1 >= j_0 FALSE"
                                                                      (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "inEqSimp_geqRight" (formula "40"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "4") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                                     (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                                     (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                     (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                     (rule "mul_literals" (formula "11") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "10") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "true_left" (formula "10"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "5"))
                                                                     (rule "andLeft" (formula "31"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                                     (rule "add_literals" (formula "31") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                                     (rule "add_literals" (formula "31") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "31") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "31") (term "0"))
                                                                     (rule "leq_literals" (formula "31"))
                                                                     (rule "closeFalse" (formula "31"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: a.length <= l_1 FALSE"
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "inEqSimp_leqRight" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "33"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "18") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,0"))
                                                               (rule "qeq_literals" (formula "4") (term "0"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "4") (term "0,0"))
                                                               (rule "add_zero_left" (formula "4") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "mul_literals" (formula "4") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "4"))
                                                               (rule "leq_literals" (formula "14") (term "0"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "17"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "6"))
                                                               (rule "andLeft" (formula "31"))
                                                               (rule "inEqSimp_homoInEq1" (formula "31"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0"))
                                                               (rule "add_zero_right" (formula "31") (term "0"))
                                                               (rule "leq_literals" (formula "31"))
                                                               (rule "closeFalse" (formula "31"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: a.length <= j_0 FALSE"
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_leqRight" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "14"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "cut_direct" (formula "34") (term "1,0"))
                                                      (branch "CUT: b.length <= i_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                                         (rule "times_zero_1" (formula "33") (term "0,0"))
                                                         (rule "add_zero_left" (formula "33") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "34"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "12"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0"))
                                                         (rule "leq_literals" (formula "12"))
                                                         (rule "closeFalse" (formula "12"))
                                                      )
                                                      (branch "CUT: b.length <= i_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "allLeft" (formula "19") (inst "t=l_0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "allLeft" (formula "18") (inst "t=l_0"))
                                                         (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,1"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,1"))
                                                         (rule "add_zero_right" (formula "18") (term "0,1"))
                                                         (rule "qeq_literals" (formula "18") (term "1"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "10"))
                                                         (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "11") (term "0,2,0") (ifseqformula "18"))
                                                         (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17"))
                                                         (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                                         (rule "add_literals" (formula "17") (term "1,0"))
                                                         (rule "times_zero_1" (formula "17") (term "0"))
                                                         (rule "leq_literals" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "applyEqRigid" (formula "18") (term "0,2,0,1") (ifseqformula "16"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "16"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9"))
                                                         (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "1,0"))
                                                         (rule "times_zero_1" (formula "9") (term "0"))
                                                         (rule "qeq_literals" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "30"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0"))
                                                         (rule "qeq_literals" (formula "17") (term "0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "17") (inst "t=l_1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "allLeft" (formula "17") (inst "t=l_1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0"))
                                                         (rule "allLeft" (formula "34") (inst "t=l_1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "34") (term "0,0"))
                                                         (rule "commute_or_2" (formula "34") (term "0"))
                                                         (rule "allLeft" (formula "39") (inst "t=l_1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "39") (term "0,0"))
                                                         (rule "commute_or_2" (formula "39") (term "0"))
                                                         (rule "allLeft" (formula "31") (inst "t=l_1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "cut_direct" (formula "39") (term "1,0"))
                                                         (branch "CUT: b.length <= 1 + i_0 TRUE"
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "39"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0"))
                                                            (rule "applyEq" (formula "42") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "11") (term "0,0"))
                                                            (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "40"))
                                                            (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                                            (rule "add_literals" (formula "40") (term "1,0"))
                                                            (rule "times_zero_1" (formula "40") (term "0"))
                                                            (rule "qeq_literals" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                            (rule "mul_literals" (formula "37") (term "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "9") (term "1,0"))
                                                            (rule "add_literals" (formula "9") (term "0"))
                                                            (rule "leq_literals" (formula "9"))
                                                            (rule "closeFalse" (formula "9"))
                                                         )
                                                         (branch "CUT: b.length <= 1 + i_0 FALSE"
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "inEqSimp_leqRight" (formula "42"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "cut_direct" (formula "35") (term "1,0"))
                                                            (branch "CUT: a.length <= l_1 TRUE"
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "35"))
                                                               (rule "times_zero_1" (formula "29") (term "0,0"))
                                                               (rule "add_zero_left" (formula "29") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "35"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "5"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch "CUT: a.length <= l_1 FALSE"
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "inEqSimp_leqRight" (formula "42"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "cut_direct" (formula "41") (term "1,0"))
                                                               (branch "CUT: b.length <= l_1 TRUE"
                                                                   (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "true_left" (formula "42"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "41"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "33") (term "0") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "inEqSimp_subsumption1" (formula "21") (term "0") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "21") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "40"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "6"))
                                                                  (rule "andLeft" (formula "12"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0"))
                                                                  (rule "leq_literals" (formula "12"))
                                                                  (rule "closeFalse" (formula "12"))
                                                               )
                                                               (branch "CUT: b.length <= l_1 FALSE"
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "inEqSimp_leqRight" (formula "43"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "cut_direct" (formula "21") (term "0"))
                                                                  (branch "CUT: l_1 >= i_0 TRUE"
                                                                      (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "true_left" (formula "22"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "21") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "5"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "21") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_0)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "36") (term "1"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "allLeft" (formula "37") (inst "t=l_1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "cut_direct" (formula "18") (term "0"))
                                                                     (branch "CUT: j_0 <= 1 + i_0 TRUE"
                                                                         (builtin "One Step Simplification" (formula "19"))
                                                                        (rule "true_left" (formula "19"))
                                                                        (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "18"))
                                                                         (builtin "One Step Simplification" (formula "36"))
                                                                        (rule "true_left" (formula "36"))
                                                                        (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "18"))
                                                                        (rule "applyEq" (formula "38") (term "1,1,0,0") (ifseqformula "5"))
                                                                        (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                                        (rule "add_literals" (formula "6") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "6") (term "0"))
                                                                        (rule "leq_literals" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "applyEqRigid" (formula "23") (term "1,1,1,0,0,0,2,0") (ifseqformula "5"))
                                                                        (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,0,2,0"))
                                                                        (rule "add_literals" (formula "23") (term "0,1,1,0,0,0,2,0"))
                                                                        (rule "add_zero_left" (formula "23") (term "1,1,0,0,0,2,0"))
                                                                        (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "5"))
                                                                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                                        (rule "add_literals" (formula "18") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "18") (term "0"))
                                                                        (rule "qeq_literals" (formula "18"))
                                                                        (rule "true_left" (formula "18"))
                                                                        (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "5"))
                                                                        (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "5"))
                                                                        (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                                        (rule "add_literals" (formula "4") (term "0,1"))
                                                                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "35") (term "0,2,1,1,1,0") (ifseqformula "4"))
                                                                        (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "4"))
                                                                        (rule "applyEqRigid" (formula "33") (term "0,2,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "4"))
                                                                        (rule "applyEqRigid" (formula "8") (term "1,1,0,0,0,2,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "33") (term "0,2,1,1,1") (ifseqformula "4"))
                                                                        (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "4"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                                                        (rule "add_literals" (formula "11") (term "0,1"))
                                                                        (rule "applyEq" (formula "10") (term "0,2,0") (ifseqformula "4"))
                                                                        (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "9") (term "1,0,1") (ifseqformula "4"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "9") (term "0,0,0,1"))
                                                                        (rule "polySimp_pullOutFactor3b" (formula "9") (term "0,1"))
                                                                        (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "4"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                        (rule "mul_literals" (formula "13") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
                                                                        (rule "leq_literals" (formula "13") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "true_left" (formula "13"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                                                        (rule "times_zero_1" (formula "6") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "6") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                        (rule "mul_literals" (formula "6") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "13"))
                                                                        (rule "leq_literals" (formula "6") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "cut_direct" (formula "29") (term "0"))
                                                                        (branch "CUT: l_1 >= 1 + i_0 TRUE"
                                                                            (builtin "One Step Simplification" (formula "30"))
                                                                           (rule "true_left" (formula "30"))
                                                                           (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "29"))
                                                                            (builtin "One Step Simplification" (formula "15"))
                                                                           (rule "true_left" (formula "15"))
                                                                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "28"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "16") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "true_left" (formula "16"))
                                                                           (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "5"))
                                                                           (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "27"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                                           (rule "add_literals" (formula "28") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "28") (term "0"))
                                                                           (rule "leq_literals" (formula "28"))
                                                                           (rule "true_left" (formula "28"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,2,0") (ifseqformula "27"))
                                                                           (rule "applyEqRigid" (formula "29") (term "1,1,0,0") (ifseqformula "27"))
                                                                           (rule "applyEqRigid" (formula "33") (term "1,1,0,0") (ifseqformula "27"))
                                                                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "27"))
                                                                           (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "27"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                                           (rule "add_literals" (formula "1") (term "0,1"))
                                                                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "26"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                           (rule "add_literals" (formula "4") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "0"))
                                                                           (rule "qeq_literals" (formula "4"))
                                                                           (rule "true_left" (formula "4"))
                                                                           (rule "applyEqRigid" (formula "31") (term "0,2,1,1,1,0") (ifseqformula "25"))
                                                                           (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "25"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                                           (rule "add_literals" (formula "1") (term "0,1"))
                                                                           (rule "applyEqRigid" (formula "26") (term "0,2,1,1,1,0") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                           (rule "mul_literals" (formula "3") (term "1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "23"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                                           (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "4") (term "0"))
                                                                           (rule "leq_literals" (formula "4"))
                                                                           (rule "closeFalse" (formula "4"))
                                                                        )
                                                                        (branch "CUT: l_1 >= 1 + i_0 FALSE"
                                                                            (builtin "One Step Simplification" (formula "29"))
                                                                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "37"))
                                                                            (builtin "One Step Simplification" (formula "15"))
                                                                           (rule "inEqSimp_geqRight" (formula "37"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "6") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "true_left" (formula "6"))
                                                                           (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "17"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "7"))
                                                                           (rule "applyEqRigid" (formula "15") (term "0,2,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "16"))
                                                                           (rule "applyEqRigid" (formula "30") (term "1,1,0,0") (ifseqformula "15"))
                                                                           (rule "applyEqRigid" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "15"))
                                                                           (rule "applyEqRigid" (formula "34") (term "1,1,0,0") (ifseqformula "15"))
                                                                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "15"))
                                                                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "15"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                           (rule "add_literals" (formula "1") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "1") (term "0"))
                                                                           (rule "qeq_literals" (formula "1"))
                                                                           (rule "true_left" (formula "1"))
                                                                           (rule "applyEq" (formula "29") (term "0,2,1,1,1,0") (ifseqformula "14"))
                                                                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                           (rule "add_literals" (formula "15") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "15") (term "0"))
                                                                           (rule "leq_literals" (formula "15"))
                                                                           (rule "true_left" (formula "15"))
                                                                           (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "14"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "26"))
                                                                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                                           (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                           (rule "mul_literals" (formula "26") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "9"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "2") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "true_left" (formula "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "9"))
                                                                           (rule "andLeft" (formula "23"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                                           (rule "add_literals" (formula "23") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "23") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "23") (term "0"))
                                                                           (rule "leq_literals" (formula "23"))
                                                                           (rule "closeFalse" (formula "23"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: j_0 <= 1 + i_0 FALSE"
                                                                         (builtin "One Step Simplification" (formula "18"))
                                                                        (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "46"))
                                                                         (builtin "One Step Simplification" (formula "36"))
                                                                        (rule "inEqSimp_leqRight" (formula "46"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "6") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "cut_direct" (formula "19") (term "0"))
                                                                        (branch "CUT: l_1 >= j_0 TRUE"
                                                                            (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "true_left" (formula "20"))
                                                                           (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "19"))
                                                                            (builtin "One Step Simplification" (formula "37"))
                                                                           (rule "true_left" (formula "37"))
                                                                           (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "6"))
                                                                           (rule "applyEq" (formula "44") (term "0,2,1,1,1,0") (ifseqformula "19"))
                                                                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "19"))
                                                                           (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "18"))
                                                                           (rule "applyEq" (formula "38") (term "1,1,0,0") (ifseqformula "18"))
                                                                           (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "19"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                                           (rule "add_literals" (formula "19") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "19") (term "0"))
                                                                           (rule "leq_literals" (formula "19"))
                                                                           (rule "true_left" (formula "19"))
                                                                           (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "18"))
                                                                           (rule "applyEqRigid" (formula "37") (term "0,2,1,1,1,0") (ifseqformula "18"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "18"))
                                                                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "18"))
                                                                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                           (rule "add_literals" (formula "4") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "0"))
                                                                           (rule "qeq_literals" (formula "4"))
                                                                           (rule "true_left" (formula "4"))
                                                                           (rule "applyEqRigid" (formula "30") (term "0,2,0,1") (ifseqformula "16"))
                                                                           (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "16"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "16"))
                                                                           (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "4"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "4"))
                                                                           (rule "andLeft" (formula "28"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                           (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "28") (term "0"))
                                                                           (rule "leq_literals" (formula "28"))
                                                                           (rule "closeFalse" (formula "28"))
                                                                        )
                                                                        (branch "CUT: l_1 >= j_0 FALSE"
                                                                            (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "37"))
                                                                           (rule "inEqSimp_geqRight" (formula "46"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "7") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "true_left" (formula "7"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "19"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "33"))
                                                                           (rule "andLeft" (formula "8"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                           (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                           (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                           (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "8") (term "0"))
                                                                           (rule "leq_literals" (formula "8"))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "CUT: l_1 >= i_0 FALSE"
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "inEqSimp_geqRight" (formula "44"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "34") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                                     (rule "times_zero_1" (formula "8") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "mul_literals" (formula "8") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "8"))
                                                                     (rule "leq_literals" (formula "16") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "true_left" (formula "16"))
                                                                     (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), i_0)"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "37") (term "1"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1"))
                                                                     (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                                                                     (rule "mul_literals" (formula "37") (term "0,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "37") (term "1,1,1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "8"))
                                                                     (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "allLeft" (formula "38") (inst "t=l_1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "9"))
                                                                     (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "cut_direct" (formula "19") (term "0"))
                                                                     (branch "CUT: j_0 <= 1 + i_0 TRUE"
                                                                         (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "true_left" (formula "20"))
                                                                        (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "19"))
                                                                         (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "true_left" (formula "37"))
                                                                        (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "19"))
                                                                        (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                                        (rule "add_literals" (formula "5") (term "0,1"))
                                                                        (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0,2,0") (ifseqformula "5"))
                                                                        (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,2,0") (ifseqformula "5"))
                                                                        (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,0,2,0"))
                                                                        (rule "add_literals" (formula "24") (term "0,1,1,0,0,0,2,0"))
                                                                        (rule "add_zero_left" (formula "24") (term "1,1,0,0,0,2,0"))
                                                                        (rule "applyEq" (formula "38") (term "0,2,1,1,1,0") (ifseqformula "5"))
                                                                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "19"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                                        (rule "add_literals" (formula "19") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "19") (term "0"))
                                                                        (rule "qeq_literals" (formula "19"))
                                                                        (rule "true_left" (formula "19"))
                                                                        (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "5"))
                                                                        (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                                        (rule "add_literals" (formula "14") (term "0,1"))
                                                                        (rule "applyEq" (formula "13") (term "0,2,0") (ifseqformula "5"))
                                                                        (rule "applyEqRigid" (formula "34") (term "0,2,0") (ifseqformula "5"))
                                                                        (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                                        (rule "add_literals" (formula "6") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "6") (term "0"))
                                                                        (rule "leq_literals" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                                        (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "5"))
                                                                        (rule "applyEqRigid" (formula "33") (term "0,2,1,1,1") (ifseqformula "5"))
                                                                        (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "31"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "true_left" (formula "33"))
                                                                        (rule "applyEqRigid" (formula "33") (term "1,1,0,0") (ifseqformula "5"))
                                                                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "5"))
                                                                        (rule "applyEq" (formula "37") (term "1,1,1,0") (ifseqformula "12"))
                                                                        (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "5"))
                                                                        (rule "applyEqRigid" (formula "11") (term "1,0,1") (ifseqformula "5"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "11") (term "0,0,0,1"))
                                                                        (rule "polySimp_pullOutFactor3b" (formula "11") (term "0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                        (rule "mul_literals" (formula "14") (term "1"))
                                                                        (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "6") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "16") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "6"))
                                                                        (rule "leq_literals" (formula "13") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "true_left" (formula "13"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "15"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "29"))
                                                                        (rule "andLeft" (formula "8"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "8") (term "0"))
                                                                        (rule "leq_literals" (formula "8"))
                                                                        (rule "closeFalse" (formula "8"))
                                                                     )
                                                                     (branch "CUT: j_0 <= 1 + i_0 FALSE"
                                                                         (builtin "One Step Simplification" (formula "19"))
                                                                        (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "47"))
                                                                         (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "inEqSimp_leqRight" (formula "47"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "7") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "true_left" (formula "7"))
                                                                        (rule "cut_direct" (formula "20") (term "0"))
                                                                        (branch "CUT: l_1 >= j_0 TRUE"
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "true_left" (formula "21"))
                                                                           (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "20"))
                                                                            (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "true_left" (formula "38"))
                                                                           (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "7"))
                                                                           (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "20"))
                                                                           (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "19"))
                                                                           (rule "applyEqRigid" (formula "34") (term "0,2,0") (ifseqformula "19"))
                                                                           (rule "applyEq" (formula "39") (term "0,2,1,1,1,0") (ifseqformula "19"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "19"))
                                                                           (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "19"))
                                                                           (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "19"))
                                                                           (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "19"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                                           (rule "add_literals" (formula "19") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "19") (term "0"))
                                                                           (rule "leq_literals" (formula "19"))
                                                                           (rule "true_left" (formula "19"))
                                                                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                                                                           (rule "applyEq" (formula "42") (term "0,2,1,1,1,0") (ifseqformula "18"))
                                                                           (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "18"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                                           (rule "add_literals" (formula "6") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "6") (term "0"))
                                                                           (rule "qeq_literals" (formula "6"))
                                                                           (rule "true_left" (formula "6"))
                                                                           (rule "applyEq" (formula "36") (term "1,1,0,0") (ifseqformula "17"))
                                                                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "6"))
                                                                           (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "9"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "18"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "32"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                                           (rule "add_literals" (formula "32") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                                           (rule "add_literals" (formula "32") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "32") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "32") (term "0"))
                                                                           (rule "leq_literals" (formula "32"))
                                                                           (rule "closeFalse" (formula "32"))
                                                                        )
                                                                        (branch "CUT: l_1 >= j_0 FALSE"
                                                                            (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "47"))
                                                                            (builtin "One Step Simplification" (formula "38"))
                                                                           (rule "inEqSimp_geqRight" (formula "47"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "8") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "8") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "true_left" (formula "8"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "10"))
                                                                           (rule "andLeft" (formula "34"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "34"))
                                                                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                                           (rule "add_literals" (formula "34") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                                           (rule "add_literals" (formula "34") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "34") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "34") (term "0"))
                                                                           (rule "leq_literals" (formula "34"))
                                                                           (rule "closeFalse" (formula "34"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch
                                                (rule "orRight" (formula "28"))
                                                (rule "allRight" (formula "29") (inst "sk=m_0"))
                                                (rule "orRight" (formula "29"))
                                                (rule "orRight" (formula "29"))
                                                (rule "inEqSimp_leqRight" (formula "31"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "30"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "31"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "31"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "1"))
                                                (rule "add_literals" (formula "10") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "10"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0"))
                                                (rule "leq_literals" (formula "31") (term "0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "false_right" (formula "31"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), j_0)"))
                                                (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0") (ifseqformula "10"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "allLeft" (formula "27") (inst "t=j_0"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,1,0"))
                                                (rule "leq_literals" (formula "27") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                                (rule "applyEq" (formula "27") (term "0,1,0,0,1") (ifseqformula "9"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "13"))
                                                (rule "qeq_literals" (formula "27") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "allLeft" (formula "28") (inst "t=l_0"))
                                                (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                                (rule "mul_literals" (formula "28") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                                (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "12"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "allLeft" (formula "30") (inst "t=j_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                (rule "applyEq" (formula "30") (term "0,1,0,0,1,0") (ifseqformula "9"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0") (ifseqformula "10"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "30") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "15")))
                                                (rule "true_left" (formula "30"))
                                                (rule "allLeft" (formula "16") (inst "t=j_0"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "13"))
                                                (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "allLeft" (formula "27") (inst "t=i_0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "17")))
                                                (rule "true_left" (formula "27"))
                                                (rule "allLeft" (formula "31") (inst "t=i_0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                (rule "commute_or_2" (formula "31") (term "0,0"))
                                                (rule "commute_or_2" (formula "31") (term "0"))
                                                (rule "cut_direct" (formula "31") (term "1,0"))
                                                (branch "CUT: b.length <= i_0 TRUE"
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "31"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "32"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "18") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_subsumption0" (formula "16") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "32"))
                                                   (rule "times_zero_1" (formula "29") (term "0,0"))
                                                   (rule "add_zero_left" (formula "29") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "11"))
                                                   (rule "times_zero_1" (formula "15") (term "0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "mul_literals" (formula "15") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                                   (rule "leq_literals" (formula "14") (term "0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "allLeft" (formula "28") (inst "t=j_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "28") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "allLeft" (formula "18") (inst "t=l_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "allLeft" (formula "16") (inst "t=l_0"))
                                                   (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "16") (term "0,1"))
                                                   (rule "qeq_literals" (formula "16") (term "1"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "8"))
                                                   (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8"))
                                                   (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "0"))
                                                   (rule "qeq_literals" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16"))
                                                   (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "1,0"))
                                                   (rule "times_zero_1" (formula "16") (term "0"))
                                                   (rule "leq_literals" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                                                   (rule "applyEqRigid" (formula "16") (term "0,0") (ifseqformula "13"))
                                                   (rule "applyEqRigid" (formula "16") (term "0,2,0,1") (ifseqformula "13"))
                                                   (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "15"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), j_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "27") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), j_0)"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0") (ifseqformula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "16") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "allLeft" (formula "17") (inst "t=m_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "allLeft" (formula "14") (inst "t=m_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "allLeft" (formula "31") (inst "t=m_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0,0"))
                                                   (rule "commute_or_2" (formula "31") (term "0"))
                                                   (rule "allLeft" (formula "37") (inst "t=m_0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                   (rule "commute_or_2" (formula "37") (term "0,0"))
                                                   (rule "commute_or_2" (formula "37") (term "0"))
                                                   (rule "allLeft" (formula "35") (inst "t=m_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "cut_direct" (formula "31") (term "1,0"))
                                                   (branch "CUT: a.length <= m_0 TRUE"
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "31"))
                                                      (rule "times_zero_1" (formula "28") (term "0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "31"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "15") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "35") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "31"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "CUT: a.length <= m_0 FALSE"
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_leqRight" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "cut_direct" (formula "39") (term "1,0"))
                                                      (branch "CUT: b.length <= m_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "39"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0,1"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,0,0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "40"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "17") (term "0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "inEqSimp_subsumption1" (formula "37") (term "0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                         (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "37") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "39"))
                                                         (rule "times_zero_1" (formula "35") (term "0,0"))
                                                         (rule "add_zero_left" (formula "35") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                         (rule "allLeft" (formula "32") (inst "t=j_0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,1,0"))
                                                         (rule "add_literals" (formula "32") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "32") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "32") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "32") (term "1,0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "32") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "19"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "32"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0"))
                                                         (rule "qeq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "cut_direct" (formula "19") (term "0"))
                                                         (branch "CUT: m_0 >= i_0 TRUE"
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "true_left" (formula "20"))
                                                            (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "19"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "18"))
                                                            (rule "applyEqRigid" (formula "34") (term "1,1,0,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "0"))
                                                            (rule "qeq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "18"))
                                                            (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                            (rule "add_literals" (formula "18") (term "1,0"))
                                                            (rule "times_zero_1" (formula "18") (term "0"))
                                                            (rule "leq_literals" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "17"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,1"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "5") (term "0,1"))
                                                            (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "16"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "32") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                            (rule "add_literals" (formula "32") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "32") (term "1,0"))
                                                            (rule "add_zero_right" (formula "32") (term "0"))
                                                            (rule "leq_literals" (formula "32"))
                                                            (rule "closeFalse" (formula "32"))
                                                         )
                                                         (branch "CUT: m_0 >= i_0 FALSE"
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "inEqSimp_geqRight" (formula "42"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "38"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                      )
                                                      (branch "CUT: b.length <= m_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_leqRight" (formula "41"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "39"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "37") (ifseqformula "5"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                         (rule "add_literals" (formula "37") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0"))
                                                         (rule "add_zero_right" (formula "37") (term "0"))
                                                         (rule "leq_literals" (formula "37"))
                                                         (rule "closeFalse" (formula "37"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: b.length <= i_0 FALSE"
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_leqRight" (formula "33"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "allLeft" (formula "28") (inst "t=j_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                   (rule "commute_or_2" (formula "28") (term "0,0"))
                                                   (rule "commute_or_2" (formula "28") (term "0"))
                                                   (rule "cut_direct" (formula "28") (term "1,0"))
                                                   (branch "CUT: a.length <= j_0 TRUE"
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "28"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                      (rule "mul_literals" (formula "12") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (term "0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                      (rule "times_zero_1" (formula "27") (term "0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0"))
                                                      (rule "allLeft" (formula "18") (inst "t=l_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "allLeft" (formula "17") (inst "t=l_0"))
                                                      (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,1"))
                                                      (rule "qeq_literals" (formula "17") (term "1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "17") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "17"))
                                                      (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18"))
                                                      (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "0"))
                                                      (rule "leq_literals" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEqRigid" (formula "9") (term "0,2,0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "18") (term "0,2,0,1") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8"))
                                                      (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "0"))
                                                      (rule "qeq_literals" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "15"))
                                                      (rule "inEqSimp_subsumption1" (formula "16") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "16") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "allLeft" (formula "15") (inst "t=m_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "allLeft" (formula "17") (inst "t=m_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "allLeft" (formula "29") (inst "t=m_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                                      (rule "commute_or_2" (formula "29") (term "0,0"))
                                                      (rule "commute_or_2" (formula "29") (term "0"))
                                                      (rule "allLeft" (formula "36") (inst "t=m_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0"))
                                                      (rule "allLeft" (formula "34") (inst "t=m_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "cut_direct" (formula "29") (term "1,0"))
                                                      (branch "CUT: a.length <= m_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "29"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                         (rule "mul_literals" (formula "10") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "18") (term "0") (ifseqformula "10"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "10"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0"))
                                                         (rule "leq_literals" (formula "10"))
                                                         (rule "closeFalse" (formula "10"))
                                                      )
                                                      (branch "CUT: a.length <= m_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "inEqSimp_leqRight" (formula "39"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "29"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "36") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "17") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "5") (term "0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "mul_literals" (formula "5") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "5"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "cut_direct" (formula "39") (term "1,0"))
                                                         (branch "CUT: b.length <= m_0 TRUE"
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "39"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,0,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "40"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "21") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "21") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch "CUT: b.length <= m_0 FALSE"
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "inEqSimp_leqRight" (formula "41"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "allLeft" (formula "39") (inst "t=m_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "cut_direct" (formula "20") (term "0"))
                                                            (branch "CUT: m_0 >= i_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "20"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "5"))
                                                               (rule "applyEqRigid" (formula "38") (term "0,2,0") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                               (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "19"))
                                                               (rule "inEqSimp_commuteGeq" (formula "7"))
                                                               (rule "applyEqRigid" (formula "40") (term "1,1,0,0") (ifseqformula "19"))
                                                               (rule "applyEqRigid" (formula "17") (term "0,2,0") (ifseqformula "19"))
                                                               (rule "applyEqRigid" (formula "31") (term "0,2,1,1,1,0") (ifseqformula "18"))
                                                               (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19"))
                                                               (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                               (rule "add_literals" (formula "19") (term "1,0"))
                                                               (rule "times_zero_1" (formula "19") (term "0"))
                                                               (rule "leq_literals" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "applyEqRigid" (formula "38") (term "0,2,1,1,1,0") (ifseqformula "18"))
                                                               (rule "applyEqRigid" (formula "30") (term "1,1,0,0") (ifseqformula "18"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                                                               (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "17"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "16"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "0"))
                                                               (rule "qeq_literals" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                               (rule "mul_literals" (formula "31") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "inEqSimp_homoInEq1" (formula "28"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0"))
                                                               (rule "leq_literals" (formula "28"))
                                                               (rule "closeFalse" (formula "28"))
                                                            )
                                                            (branch "CUT: m_0 >= i_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "43"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "inEqSimp_geqRight" (formula "43"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0"))
                                                               (rule "qeq_literals" (formula "6") (term "0"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "20"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "36") (ifseqformula "8"))
                                                               (rule "andLeft" (formula "36"))
                                                               (rule "inEqSimp_homoInEq1" (formula "36"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "36") (term "1,0"))
                                                               (rule "add_zero_right" (formula "36") (term "0"))
                                                               (rule "leq_literals" (formula "36"))
                                                               (rule "closeFalse" (formula "36"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: a.length <= j_0 FALSE"
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_leqRight" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "allLeft" (formula "19") (inst "t=l_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "allLeft" (formula "17") (inst "t=l_0"))
                                                      (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,1"))
                                                      (rule "qeq_literals" (formula "17") (term "1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "17") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18"))
                                                      (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "0"))
                                                      (rule "leq_literals" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "applyEqRigid" (formula "20") (term "0,2,0,1") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9"))
                                                      (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "0"))
                                                      (rule "qeq_literals" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "16"))
                                                      (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "15"))
                                                      (rule "cut_direct" (formula "13") (term "0"))
                                                      (branch "CUT: j_0 <= i_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                                                         (rule "times_zero_1" (formula "12") (term "0,0"))
                                                         (rule "add_zero_left" (formula "12") (term "0"))
                                                         (rule "cut_direct" (formula "16") (term "0"))
                                                         (branch "CUT: j_0 >= i_0 TRUE"
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "16"))
                                                            (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "16"))
                                                            (rule "applyEq" (formula "6") (term "1,1,0,0,0,2,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "27") (term "0,2,1,1,1,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "30") (term "1,0,2,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "14"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11"))
                                                            (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                                            (rule "add_literals" (formula "11") (term "1,0"))
                                                            (rule "times_zero_1" (formula "11") (term "0"))
                                                            (rule "qeq_literals" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "applyEqRigid" (formula "4") (term "1,0,2,1") (ifseqformula "13"))
                                                            (rule "applyEqRigid" (formula "29") (term "1,1,1,0,0") (ifseqformula "13"))
                                                            (rule "applyEqRigid" (formula "12") (term "1,1,0,0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "16") (term "1,1,1,0,0,0,2,0") (ifseqformula "13"))
                                                            (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14"))
                                                            (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "0"))
                                                            (rule "leq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "27") (term "1,0,2,1,1,1,0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "28") (term "1,1,1,0") (ifseqformula "7"))
                                                            (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "13"))
                                                            (rule "applyEqRigid" (formula "6") (term "1,0,1") (ifseqformula "13"))
                                                            (rule "polySimp_pullOutFactor3b" (formula "6") (term "0,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "allLeft" (formula "13") (inst "t=m_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "allLeft" (formula "28") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0"))
                                                            (rule "leq_literals" (formula "28") (term "0,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "allLeft" (formula "27") (inst "t=i_0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "27") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                                            (rule "applyEq" (formula "27") (term "0,1,0,0,1") (ifseqformula "6"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                                            (rule "mul_literals" (formula "27") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                                            (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "26"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "allLeft" (formula "27") (inst "t=m_0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "27") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "27") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "cut_direct" (formula "13") (term "0"))
                                                            (branch "CUT: m_0 >= i_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "0"))
                                                               (rule "qeq_literals" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "12"))
                                                               (rule "inEqSimp_homoInEq0" (formula "27"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                                               (rule "applyEqRigid" (formula "1") (term "0,2,0") (ifseqformula "11"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1"))
                                                               (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12"))
                                                               (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "1,0"))
                                                               (rule "times_zero_1" (formula "12") (term "0"))
                                                               (rule "leq_literals" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                               (rule "mul_literals" (formula "25") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
                                                               (rule "andLeft" (formula "24"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0"))
                                                               (rule "add_zero_right" (formula "24") (term "0"))
                                                               (rule "leq_literals" (formula "24"))
                                                               (rule "closeFalse" (formula "24"))
                                                            )
                                                            (branch "CUT: m_0 >= i_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "inEqSimp_geqRight" (formula "30"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "2") (term "0,0"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "2") (term "0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                                               (rule "leq_literals" (formula "10") (term "0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "27"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "closeFalse" (formula "4"))
                                                            )
                                                         )
                                                         (branch "CUT: j_0 >= i_0 FALSE"
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "inEqSimp_geqRight" (formula "34"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0"))
                                                            (rule "qeq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "13") (term "0,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                            (rule "mul_literals" (formula "13") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_0)"))
                                                            (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "allLeft" (formula "18") (inst "t=m_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), j_0)"))
                                                            (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                            (rule "commute_or_2" (formula "30") (term "0,0"))
                                                            (rule "commute_or_2" (formula "30") (term "0"))
                                                            (rule "allLeft" (formula "15") (inst "t=m_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "allLeft" (formula "32") (inst "t=m_0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                            (rule "commute_or_2" (formula "32") (term "0,0"))
                                                            (rule "commute_or_2" (formula "32") (term "0"))
                                                            (rule "allLeft" (formula "38") (inst "t=m_0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0"))
                                                            (rule "commute_or_2" (formula "38") (term "0,0"))
                                                            (rule "commute_or_2" (formula "38") (term "0"))
                                                            (rule "allLeft" (formula "36") (inst "t=m_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "allLeft" (formula "38") (inst "t=j_0"))
                                                            (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "38") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "cut_direct" (formula "31") (term "1,0"))
                                                            (branch "CUT: a.length <= 1 + j_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "31"))
                                                               (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "12") (term "0,0"))
                                                               (rule "applyEq" (formula "34") (term "1,1,0,0,0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "30") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "32") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32"))
                                                               (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                                                               (rule "add_literals" (formula "32") (term "1,0"))
                                                               (rule "times_zero_1" (formula "32") (term "0"))
                                                               (rule "qeq_literals" (formula "32"))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                                               (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "2"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "1"))
                                                               (rule "add_literals" (formula "9") (term "1,1,1"))
                                                               (rule "times_zero_1" (formula "9") (term "1,1"))
                                                               (rule "polySimp_addLiterals" (formula "9") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                               (rule "add_literals" (formula "9") (term "0,1"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "0"))
                                                               (rule "leq_literals" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                               (rule "mul_literals" (formula "28") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_literals" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "CUT: a.length <= 1 + j_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "inEqSimp_leqRight" (formula "42"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "cut_direct" (formula "32") (term "1,0"))
                                                               (branch "CUT: a.length <= m_0 TRUE"
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "32"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "37") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "37") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "true_left" (formula "37"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "32"))
                                                                  (rule "times_zero_1" (formula "29") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "29") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "32"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "5"))
                                                                  (rule "andLeft" (formula "12"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0"))
                                                                  (rule "leq_literals" (formula "12"))
                                                                  (rule "closeFalse" (formula "12"))
                                                               )
                                                               (branch "CUT: a.length <= m_0 FALSE"
                                                                   (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "inEqSimp_leqRight" (formula "42"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "cut_direct" (formula "41") (term "1,0"))
                                                                  (branch "CUT: b.length <= m_0 TRUE"
                                                                      (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "true_left" (formula "42"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "41"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0,0,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                                                                     (rule "mul_literals" (formula "9") (term "0,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,0,0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "42"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                     (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                     (rule "mul_literals" (formula "12") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "39") (term "0") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "39") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "true_left" (formula "39"))
                                                                     (rule "inEqSimp_subsumption1" (formula "18") (term "0") (ifseqformula "12"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "18") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "true_left" (formula "18"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "41"))
                                                                     (rule "times_zero_1" (formula "36") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "36") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "41"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "22") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "22") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "true_left" (formula "22"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "4"))
                                                                     (rule "andLeft" (formula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                     (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "6") (term "0"))
                                                                     (rule "leq_literals" (formula "6"))
                                                                     (rule "closeFalse" (formula "6"))
                                                                  )
                                                                  (branch "CUT: b.length <= m_0 FALSE"
                                                                      (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "inEqSimp_leqRight" (formula "43"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "allLeft" (formula "41") (inst "t=m_0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "7"))
                                                                     (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), j_0)"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "42") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "15"))
                                                                     (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "cut_direct" (formula "20") (term "0"))
                                                                     (branch "CUT: j_0 >= -1 + i_0 TRUE"
                                                                         (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "true_left" (formula "21"))
                                                                        (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "20"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "true_left" (formula "42"))
                                                                        (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "4"))
                                                                        (rule "applyEqRigid" (formula "39") (term "1,1,0") (ifseqformula "20"))
                                                                        (rule "polySimp_addAssoc" (formula "39") (term "1,0"))
                                                                        (rule "add_literals" (formula "39") (term "0,1,0"))
                                                                        (rule "add_zero_left" (formula "39") (term "1,0"))
                                                                        (rule "applyEq" (formula "33") (term "0,2,1,1,1,0") (ifseqformula "20"))
                                                                        (rule "applyEqRigid" (formula "17") (term "1,0") (ifseqformula "20"))
                                                                        (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "20"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                                        (rule "add_literals" (formula "3") (term "0,1"))
                                                                        (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "19"))
                                                                        (rule "applyEq" (formula "33") (term "1,0,2,1,1,1,0") (ifseqformula "19"))
                                                                        (rule "polySimp_addAssoc" (formula "33") (term "0,2,1,1,1,0"))
                                                                        (rule "add_literals" (formula "33") (term "0,0,2,1,1,1,0"))
                                                                        (rule "add_zero_left" (formula "33") (term "0,2,1,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "19"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                                                        (rule "add_literals" (formula "11") (term "0,1"))
                                                                        (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "18"))
                                                                        (rule "applyEq" (formula "38") (term "1,1,1,0,0") (ifseqformula "18"))
                                                                        (rule "polySimp_addAssoc" (formula "38") (term "1,1,0,0"))
                                                                        (rule "add_literals" (formula "38") (term "0,1,1,0,0"))
                                                                        (rule "add_zero_left" (formula "38") (term "1,1,0,0"))
                                                                        (rule "applyEq" (formula "37") (term "1,0,2,1,1,1") (ifseqformula "18"))
                                                                        (rule "polySimp_addAssoc" (formula "37") (term "0,2,1,1,1"))
                                                                        (rule "add_literals" (formula "37") (term "0,0,2,1,1,1"))
                                                                        (rule "add_zero_left" (formula "37") (term "0,2,1,1,1"))
                                                                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "19"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                                        (rule "add_literals" (formula "19") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "19") (term "0"))
                                                                        (rule "leq_literals" (formula "19"))
                                                                        (rule "true_left" (formula "19"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,0,2,0") (ifseqformula "18"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,2,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,2,0"))
                                                                        (rule "add_zero_left" (formula "35") (term "0,2,0"))
                                                                        (rule "applyEq" (formula "10") (term "0,2,0") (ifseqformula "18"))
                                                                        (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "18"))
                                                                        (rule "applyEqRigid" (formula "8") (term "1,1,0,0,0,2,0") (ifseqformula "18"))
                                                                        (rule "applyEq" (formula "35") (term "1,0,2,1,1,1,0") (ifseqformula "18"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,2,1,1,1,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,2,1,1,1,0"))
                                                                        (rule "add_zero_left" (formula "35") (term "0,2,1,1,1,0"))
                                                                        (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "18"))
                                                                        (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "18"))
                                                                        (rule "polySimp_addAssoc" (formula "31") (term "1,1,0,0"))
                                                                        (rule "add_literals" (formula "31") (term "0,1,1,0,0"))
                                                                        (rule "add_zero_left" (formula "31") (term "1,1,0,0"))
                                                                        (rule "applyEq" (formula "7") (term "1,0,2,1") (ifseqformula "18"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,2,1"))
                                                                        (rule "add_literals" (formula "7") (term "0,0,2,1"))
                                                                        (rule "add_zero_left" (formula "7") (term "0,2,1"))
                                                                        (rule "applyEq" (formula "21") (term "1,1,1,0,0,0,2,0") (ifseqformula "18"))
                                                                        (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0,0,2,0"))
                                                                        (rule "add_literals" (formula "21") (term "0,1,1,0,0,0,2,0"))
                                                                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "18"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                                        (rule "add_literals" (formula "3") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "3") (term "0"))
                                                                        (rule "qeq_literals" (formula "3"))
                                                                        (rule "true_left" (formula "3"))
                                                                        (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "17"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0,0,1"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0,1"))
                                                                        (rule "polySimp_pullOutFactor3b" (formula "8") (term "0,1"))
                                                                        (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "17"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                        (rule "mul_literals" (formula "12") (term "1"))
                                                                        (rule "cut_direct" (formula "17") (term "0"))
                                                                        (branch "CUT: m_0 >= i_0 TRUE"
                                                                            (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "true_left" (formula "18"))
                                                                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "17"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "true_left" (formula "33"))
                                                                           (rule "inEqSimp_subsumption1" (formula "13") (term "0") (ifseqformula "17"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                                           (rule "qeq_literals" (formula "13") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "13"))
                                                                           (rule "true_left" (formula "13"))
                                                                           (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "4"))
                                                                           (rule "applyEqRigid" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "16"))
                                                                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "16"))
                                                                           (rule "applyEq" (formula "28") (term "0,2,1,1,1,0") (ifseqformula "15"))
                                                                           (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "15"))
                                                                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "16"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                                           (rule "add_literals" (formula "16") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "16") (term "0"))
                                                                           (rule "leq_literals" (formula "16"))
                                                                           (rule "true_left" (formula "16"))
                                                                           (rule "applyEqRigid" (formula "27") (term "1,1,0,0") (ifseqformula "15"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "15"))
                                                                           (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "15"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "14"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "4"))
                                                                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "14"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "0"))
                                                                           (rule "qeq_literals" (formula "2"))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "27"))
                                                                           (rule "andLeft" (formula "3"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                           (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "3") (term "0"))
                                                                           (rule "leq_literals" (formula "3"))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                        (branch "CUT: m_0 >= i_0 FALSE"
                                                                            (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "37"))
                                                                            (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_geqRight" (formula "37"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "5") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "5") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "5"))
                                                                           (rule "true_left" (formula "5"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                                                           (rule "times_zero_1" (formula "5") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "5") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                           (rule "mul_literals" (formula "5") (term "1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "17"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "33"))
                                                                           (rule "andLeft" (formula "6"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                           (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                           (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "6") (term "0"))
                                                                           (rule "leq_literals" (formula "6"))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: j_0 >= -1 + i_0 FALSE"
                                                                         (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "46"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "inEqSimp_geqRight" (formula "46"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "5") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "5") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "true_left" (formula "5"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                                                        (rule "times_zero_1" (formula "15") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "15") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                        (rule "mul_literals" (formula "15") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                                                        (rule "leq_literals" (formula "14") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "true_left" (formula "14"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "42"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                                        (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                                        (rule "add_literals" (formula "37") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                                        (rule "mul_literals" (formula "37") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "37"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                                        (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "41") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "cut_direct" (formula "21") (term "0"))
                                                                        (branch "CUT: m_0 >= i_0 TRUE"
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "true_left" (formula "22"))
                                                                           (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "21"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "true_left" (formula "41"))
                                                                           (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "6"))
                                                                           (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "21"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "8"))
                                                                           (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "21"))
                                                                           (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "21"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "40") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0") (ifseqformula "21"))
                                                                           (rule "applyEqRigid" (formula "40") (term "0,2,0,1") (ifseqformula "21"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "40") (term "1"))
                                                                           (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                                                                           (rule "applyEq" (formula "17") (term "0,2,0,1") (ifseqformula "21"))
                                                                           (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "21"))
                                                                           (rule "inEqSimp_commuteGeq" (formula "17") (term "0"))
                                                                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "21"))
                                                                           (rule "applyEq" (formula "43") (term "0,2,1,1,1,0") (ifseqformula "20"))
                                                                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "20"))
                                                                           (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "19"))
                                                                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "20"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                                           (rule "add_literals" (formula "20") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "20") (term "0"))
                                                                           (rule "leq_literals" (formula "20"))
                                                                           (rule "true_left" (formula "20"))
                                                                           (rule "applyEqRigid" (formula "32") (term "0,2,1,1,1,0") (ifseqformula "19"))
                                                                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "19"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                           (rule "add_literals" (formula "4") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "4") (term "0"))
                                                                           (rule "qeq_literals" (formula "4"))
                                                                           (rule "true_left" (formula "4"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "33"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                                                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                                                           (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                                           (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                                           (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                                           (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                                                           (rule "leq_literals" (formula "14") (term "0,1"))
                                                                            (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "5"))
                                                                           (rule "andLeft" (formula "34"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "34"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                                           (rule "add_literals" (formula "34") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "34") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "34") (term "0"))
                                                                           (rule "leq_literals" (formula "34"))
                                                                           (rule "closeFalse" (formula "34"))
                                                                        )
                                                                        (branch "CUT: m_0 >= i_0 FALSE"
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "46"))
                                                                            (builtin "One Step Simplification" (formula "41"))
                                                                           (rule "inEqSimp_geqRight" (formula "46"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "7") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "true_left" (formula "7"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "21"))
                                                                           (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "8"))
                                                                           (rule "andLeft" (formula "39"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "39"))
                                                                           (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                                           (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "39") (term "0,0"))
                                                                           (rule "add_literals" (formula "39") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                                           (rule "add_literals" (formula "39") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "39") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "39") (term "0"))
                                                                           (rule "leq_literals" (formula "39"))
                                                                           (rule "closeFalse" (formula "39"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: j_0 <= i_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_leqRight" (formula "34"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "17") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "17") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "16") (inst "t=m_0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "allLeft" (formula "18") (inst "t=m_0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), j_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "30") (term "0,0"))
                                                         (rule "commute_or_2" (formula "30") (term "0"))
                                                         (rule "allLeft" (formula "31") (inst "t=m_0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "31") (term "0,0"))
                                                         (rule "commute_or_2" (formula "31") (term "0"))
                                                         (rule "allLeft" (formula "37") (inst "t=m_0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0"))
                                                         (rule "allLeft" (formula "35") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "35") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "allLeft" (formula "29") (inst "t=i_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,1"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "29") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "29") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "cut_direct" (formula "31") (term "1,0"))
                                                         (branch "CUT: a.length <= 1 + j_0 TRUE"
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "12") (term "0,0"))
                                                            (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                                            (rule "applyEq" (formula "34") (term "1,1,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "31") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "31"))
                                                            (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                                            (rule "add_literals" (formula "31") (term "1,0"))
                                                            (rule "times_zero_1" (formula "31") (term "0"))
                                                            (rule "qeq_literals" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "1"))
                                                            (rule "add_literals" (formula "8") (term "1,1,1"))
                                                            (rule "times_zero_1" (formula "8") (term "1,1"))
                                                            (rule "polySimp_addLiterals" (formula "8") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                            (rule "add_literals" (formula "8") (term "0,1"))
                                                            (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                            (rule "mul_literals" (formula "27") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "26") (term "0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "allLeft" (formula "33") (inst "t=m_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "cut_direct" (formula "36") (term "1,0"))
                                                            (branch "CUT: b.length <= m_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "36"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (term "0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                               (rule "qeq_literals" (formula "17") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0"))
                                                               (rule "add_zero_right" (formula "5") (term "0"))
                                                               (rule "leq_literals" (formula "5"))
                                                               (rule "closeFalse" (formula "5"))
                                                            )
                                                            (branch "CUT: b.length <= m_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "inEqSimp_leqRight" (formula "38"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "cut_direct" (formula "15") (term "0"))
                                                               (branch "CUT: m_0 >= j_0 TRUE"
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "2"))
                                                                  (rule "andLeft" (formula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0"))
                                                                  (rule "leq_literals" (formula "15"))
                                                                  (rule "closeFalse" (formula "15"))
                                                               )
                                                               (branch "CUT: m_0 >= j_0 FALSE"
                                                                   (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "inEqSimp_geqRight" (formula "39"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "30") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "35") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "7") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "mul_literals" (formula "7") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "7"))
                                                                  (rule "leq_literals" (formula "14") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "cut_direct" (formula "18") (term "0"))
                                                                  (branch "CUT: m_0 >= i_0 TRUE"
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "6"))
                                                                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "18"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "applyEq" (formula "16") (term "0,2,0") (ifseqformula "18"))
                                                                     (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "17"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "18"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                                     (rule "add_literals" (formula "18") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "0"))
                                                                     (rule "leq_literals" (formula "18"))
                                                                     (rule "true_left" (formula "18"))
                                                                     (rule "applyEqRigid" (formula "34") (term "0,2,0") (ifseqformula "17"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "34"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                     (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "17"))
                                                                     (rule "applyEqRigid" (formula "36") (term "0,2,1,1,1,0") (ifseqformula "16"))
                                                                     (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "16"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "6"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                                     (rule "add_literals" (formula "6") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "6") (term "0"))
                                                                     (rule "qeq_literals" (formula "6"))
                                                                     (rule "true_left" (formula "6"))
                                                                     (rule "applyEqRigid" (formula "7") (term "0,2,0") (ifseqformula "15"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "7"))
                                                                     (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "15"))
                                                                     (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "15"))
                                                                     (rule "applyEq" (formula "26") (term "0,2,1,1,1,0") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "14"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                     (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                     (rule "mul_literals" (formula "29") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "5"))
                                                                     (rule "andLeft" (formula "27"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                     (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "27") (term "0"))
                                                                     (rule "leq_literals" (formula "27"))
                                                                     (rule "closeFalse" (formula "27"))
                                                                  )
                                                                  (branch "CUT: m_0 >= i_0 FALSE"
                                                                      (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "inEqSimp_geqRight" (formula "40"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "7") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "7") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "true_left" (formula "7"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "34"))
                                                                     (rule "andLeft" (formula "9"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                     (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0"))
                                                                     (rule "leq_literals" (formula "9"))
                                                                     (rule "closeFalse" (formula "9"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: a.length <= 1 + j_0 FALSE"
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_leqRight" (formula "41"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "allLeft" (formula "37") (inst "t=m_0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "cut_direct" (formula "32") (term "1,0"))
                                                            (branch "CUT: a.length <= m_0 TRUE"
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "32"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "4"))
                                                               (rule "andLeft" (formula "11"))
                                                               (rule "inEqSimp_homoInEq1" (formula "11"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0"))
                                                               (rule "add_zero_right" (formula "11") (term "0"))
                                                               (rule "leq_literals" (formula "11"))
                                                               (rule "closeFalse" (formula "11"))
                                                            )
                                                            (branch "CUT: a.length <= m_0 FALSE"
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "inEqSimp_leqRight" (formula "42"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "cut_direct" (formula "41") (term "1,0"))
                                                               (branch "CUT: b.length <= m_0 TRUE"
                                                                   (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "true_left" (formula "42"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "41"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,0,1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,0,0,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "42"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "40") (term "0") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "40") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "40") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "true_left" (formula "40"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (term "0") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "19") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "41"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "4"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0"))
                                                                  (rule "leq_literals" (formula "6"))
                                                                  (rule "closeFalse" (formula "6"))
                                                               )
                                                               (branch "CUT: b.length <= m_0 FALSE"
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "inEqSimp_leqRight" (formula "43"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "cut_direct" (formula "18") (term "0"))
                                                                  (branch "CUT: m_0 >= j_0 TRUE"
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "4"))
                                                                     (rule "andLeft" (formula "18"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "18"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                                     (rule "add_literals" (formula "18") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "0"))
                                                                     (rule "leq_literals" (formula "18"))
                                                                     (rule "closeFalse" (formula "18"))
                                                                  )
                                                                  (branch "CUT: m_0 >= j_0 FALSE"
                                                                      (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "inEqSimp_geqRight" (formula "44"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "40") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "40") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "40") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                                     (rule "times_zero_1" (formula "8") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "8") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "mul_literals" (formula "8") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "8"))
                                                                     (rule "leq_literals" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "cut_direct" (formula "21") (term "0"))
                                                                     (branch "CUT: m_0 >= i_0 TRUE"
                                                                         (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "true_left" (formula "22"))
                                                                        (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "7"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0") (ifseqformula "21"))
                                                                        (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "21"))
                                                                        (rule "applyEqRigid" (formula "43") (term "0,2,1,1,1,0") (ifseqformula "20"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0") (ifseqformula "20"))
                                                                        (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                                        (rule "add_literals" (formula "21") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "21") (term "0"))
                                                                        (rule "leq_literals" (formula "21"))
                                                                        (rule "true_left" (formula "21"))
                                                                        (rule "applyEqRigid" (formula "39") (term "0,2,0") (ifseqformula "20"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "39"))
                                                                        (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                        (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "20"))
                                                                        (rule "applyEqRigid" (formula "17") (term "0,2,0") (ifseqformula "19"))
                                                                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "18"))
                                                                        (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "17"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "7"))
                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "applyEqRigid" (formula "31") (term "0,2,1,1,1,0") (ifseqformula "17"))
                                                                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "17"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                        (rule "add_literals" (formula "5") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "0"))
                                                                        (rule "qeq_literals" (formula "5"))
                                                                        (rule "true_left" (formula "5"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                                        (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                                        (rule "mul_literals" (formula "34") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "31"))
                                                                        (rule "andLeft" (formula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                        (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "5") (term "0"))
                                                                        (rule "leq_literals" (formula "5"))
                                                                        (rule "closeFalse" (formula "5"))
                                                                     )
                                                                     (branch "CUT: m_0 >= i_0 FALSE"
                                                                         (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "inEqSimp_geqRight" (formula "45"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "8") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "8") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "true_left" (formula "8"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                                                        (rule "times_zero_1" (formula "9") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                        (rule "mul_literals" (formula "9") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "9"))
                                                                        (rule "leq_literals" (formula "17") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "true_left" (formula "17"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "21"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "11") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "39"))
                                                                        (rule "andLeft" (formula "11"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                        (rule "add_literals" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0"))
                                                                        (rule "leq_literals" (formula "11"))
                                                                        (rule "closeFalse" (formula "11"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: bsum{int k;}(0, i_0, if (exists int l; (l >= 0 & l <= j_0 & b[l] = a[k])) then (1) else (0)) = result_0 FALSE"
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "equal_bsum2" (formula "27") (ifseqformula "12"))
                                             (rule "allRight" (formula "27") (inst "sk=k_0"))
                                             (rule "impRight" (formula "27"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "bsum_equal_split4" (formula "30") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "bsum_lower_equals_upper" (formula "30") (term "1,1,1"))
                                             (rule "bsum_lower_equals_upper" (formula "30") (term "0,2,1"))
                                             (rule "less_literals" (formula "30") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30") (term "1"))
                                             (rule "polySimp_elimSub" (formula "30") (term "2,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (term "0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "bsum_equal_split2" (formula "31") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "bsum_lower_equals_upper" (formula "31") (term "1,2,1"))
                                             (rule "bsum_lower_equals_upper" (formula "31") (term "0,1,1"))
                                             (rule "eqSymm" (formula "31") (term "1,1"))
                                             (rule "polySimp_elimSub" (formula "31") (term "2,0,2,1"))
                                             (rule "polySimp_elimSub" (formula "31") (term "2,0,1,1"))
                                             (rule "replace_known_right" (formula "31") (term "1,1") (ifseqformula "30"))
                                             (rule "polySimp_addComm0" (formula "31") (term "2,0,2,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "31") (term "0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "31") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "bsum_zero_right" (formula "30"))
                                             (rule "allRight" (formula "30") (inst "sk=k0_0"))
                                             (rule "impRight" (formula "30"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "32"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "bsum_zero_right" (formula "34"))
                                             (rule "allRight" (formula "34") (inst "sk=k_1"))
                                             (rule "impRight" (formula "34"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "36"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "ifthenelse_split" (formula "33") (term "1"))
                                             (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k_0]) TRUE"
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "equal_literals" (formula "34") (term "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "exLeft" (formula "1") (inst "sk=l_1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "nnf_ex2all" (formula "36"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "ifthenelse_split" (formula "37") (term "1"))
                                                (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k0_0]) TRUE"
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "equal_literals" (formula "38") (term "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "nnf_ex2all" (formula "40"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "ifthenelse_split" (formula "42") (term "0"))
                                                   (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) TRUE"
                                                      (rule "exLeft" (formula "1") (inst "sk=l_3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "45"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "equal_literals" (formula "45") (term "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "nnf_ex2all" (formula "45"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "allLeft" (formula "29") (inst "t=k_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "29") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "allLeft" (formula "40") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0,0,0") (ifseqformula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "40") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "30")))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "allLeft" (formula "1") (inst "t=l_3"))
                                                      (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) FALSE"
                                                      (rule "eqSymm" (formula "43"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "equal_literals" (formula "43") (term "1"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "notRight" (formula "43"))
                                                      (rule "exLeft" (formula "1") (inst "sk=l_3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "nnf_ex2all" (formula "45"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "allLeft" (formula "39") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "39") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "29")))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "allLeft" (formula "29") (inst "t=k_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "29") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "allLeft" (formula "9") (inst "t=l_1"))
                                                      (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "13"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13"))
                                                      (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                      (rule "add_literals" (formula "13") (term "1,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0"))
                                                      (rule "qeq_literals" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10"))
                                                      (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                                      (rule "add_literals" (formula "10") (term "1,0"))
                                                      (rule "times_zero_1" (formula "10") (term "0"))
                                                      (rule "leq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "applyEq" (formula "12") (term "0,2,0") (ifseqformula "9"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0"))
                                                      (rule "qeq_literals" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                )
                                                (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k0_0]) FALSE"
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "equal_literals" (formula "38") (term "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "notRight" (formula "38"))
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "nnf_ex2all" (formula "40"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "ifthenelse_split" (formula "42") (term "0"))
                                                   (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) TRUE"
                                                      (rule "exLeft" (formula "1") (inst "sk=l_3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "45"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "equal_literals" (formula "45") (term "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "nnf_ex2all" (formula "45"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "allLeft" (formula "39") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0") (ifseqformula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "39") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "29")))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "allLeft" (formula "29") (inst "t=k_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "allLeft" (formula "5") (inst "t=l_2"))
                                                      (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_contradInEq0" (formula "5") (term "1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "5") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "5") (term "0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) FALSE"
                                                      (rule "eqSymm" (formula "43"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "equal_literals" (formula "43") (term "1"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "notRight" (formula "43"))
                                                      (rule "exLeft" (formula "1") (inst "sk=l_3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "nnf_ex2all" (formula "45"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "allLeft" (formula "29") (inst "t=k_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "29") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "allLeft" (formula "40") (inst "t=i_0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "40") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0,0,0") (ifseqformula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "40") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "30")))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "allLeft" (formula "5") (inst "t=l_2"))
                                                      (rule "replace_known_left" (formula "5") (term "0,1") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_contradInEq0" (formula "5") (term "1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "5") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "5") (term "0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                )
                                             )
                                             (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k_0]) FALSE"
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "equal_literals" (formula "34") (term "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "notRight" (formula "34"))
                                                (rule "exLeft" (formula "1") (inst "sk=l_1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "nnf_ex2all" (formula "36"))
                                                (rule "nnf_notAnd" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                (rule "ifthenelse_split" (formula "37") (term "1"))
                                                (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k0_0]) TRUE"
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "equal_literals" (formula "38") (term "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "nnf_ex2all" (formula "40"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "ifthenelse_split" (formula "42") (term "0"))
                                                   (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) TRUE"
                                                      (rule "exLeft" (formula "1") (inst "sk=l_3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "45"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "equal_literals" (formula "45") (term "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "nnf_ex2all" (formula "45"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "allLeft" (formula "9") (inst "t=l_1"))
                                                      (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "13"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0"))
                                                      (rule "leq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                   (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) FALSE"
                                                      (rule "eqSymm" (formula "43"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "equal_literals" (formula "43") (term "1"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "notRight" (formula "43"))
                                                      (rule "exLeft" (formula "1") (inst "sk=l_3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "nnf_ex2all" (formula "45"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "allLeft" (formula "9") (inst "t=l_1"))
                                                      (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "9") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "closeFalse" (formula "12"))
                                                   )
                                                )
                                                (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[k0_0]) FALSE"
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "equal_literals" (formula "38") (term "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "notRight" (formula "38"))
                                                   (rule "exLeft" (formula "1") (inst "sk=l_2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "nnf_ex2all" (formula "40"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "42") (term "0"))
                                                   (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) TRUE"
                                                      (rule "exLeft" (formula "1") (inst "sk=l_3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "eqSymm" (formula "45"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "equal_literals" (formula "45") (term "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "nnf_ex2all" (formula "45"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "allLeft" (formula "9") (inst "t=l_1"))
                                                      (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "9"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0"))
                                                      (rule "leq_literals" (formula "13"))
                                                      (rule "closeFalse" (formula "13"))
                                                   )
                                                   (branch "exists int l; (l >= 0 & l <= -1 + j_0 & b[l] = a[k_1]) FALSE"
                                                      (rule "eqSymm" (formula "43"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "equal_literals" (formula "43") (term "1"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "notRight" (formula "43"))
                                                      (rule "exLeft" (formula "1") (inst "sk=l_3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "nnf_ex2all" (formula "45"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "allLeft" (formula "9") (inst "t=l_1"))
                                                      (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "9") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "closeFalse" (formula "12"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: b.length >= 2 + i_0 + j_0 + a.length * -1 FALSE"
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_geqRight" (formula "26"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "22") (term "0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "6"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                    )
                                    (branch "exists int l; (l >= 0 & l <= j_0 & b[l] = a[i_0]) FALSE"
                                       (rule "times_zero_2" (formula "24") (term "1,1,1,0"))
                                       (rule "add_zero_right" (formula "24") (term "1,1,0"))
                                       (rule "nnf_ex2all" (formula "23"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                       (rule "allLeft" (formula "1") (inst "t=j_0"))
                                       (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,1"))
                                       (rule "leq_literals" (formula "1") (term "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                 )
                              )
                              (branch "Null Reference (_a = null)"
                                  (builtin "One Step Simplification" (formula "24"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (_a != null, but i Out of Bounds!)"
                                  (builtin "One Step Simplification" (formula "24"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                 (rule "false_right" (formula "24"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "Null Reference (_b = null)"
                               (builtin "One Step Simplification" (formula "24"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_b != null, but j Out of Bounds!)"
                               (builtin "One Step Simplification" (formula "24"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "false_right" (formula "24"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (_b = null)"
                        (rule "false_right" (formula "23"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (_b != null, but j Out of Bounds!)"
                        (rule "false_right" (formula "23"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "Null Reference (_a = null)"
                     (rule "false_right" (formula "23"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_a != null, but i Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "23"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                     (rule "false_right" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "if b_2 false"
                   (builtin "One Step Simplification" (formula "23"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "19"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                  (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "22") (term "1,0,1,1,0") (ifseqformula "4"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,1,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,1,0"))
                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "4"))
                  (rule "applyEq" (formula "17") (term "1,1,0,0,0,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,0"))
                  (rule "times_zero_1" (formula "5") (term "0"))
                  (rule "leq_literals" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "blockBreak" (formula "20") (term "1"))
                  (rule "lsBreak" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallReturn" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "tryEmpty" (formula "20") (term "1"))
                  (rule "emptyModality" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,2,0,0") (ifseqformula "4"))
                  (rule "Class_invariant_axiom_for_CC" (formula "20") (term "1") (inst "sk=sk_1") (ifseqformula "10"))
                  (branch "Use Axiom"
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "bsum_equal_split2" (formula "20") (ifseqformula "6"))
                     (rule "eqSymm" (formula "20") (term "2,1"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,1,1"))
                     (rule "polySimp_elimSub" (formula "20") (term "2,1,2,1"))
                     (rule "polySimp_pullOutFactor1" (formula "20") (term "2,1,1,1"))
                     (rule "add_literals" (formula "20") (term "1,2,1,1,1"))
                     (rule "times_zero_1" (formula "20") (term "2,1,1,1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "polySimp_pullOutFactor1" (formula "20") (term "2,1,2,1"))
                     (rule "add_literals" (formula "20") (term "1,2,1,2,1"))
                     (rule "times_zero_1" (formula "20") (term "2,1,2,1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0"))
                     (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0"))
                     (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "bsum_zero_right" (formula "20"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "equal_literals" (formula "20") (term "1,1,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "allRight" (formula "20") (inst "sk=k_0"))
                     (rule "impRight" (formula "20"))
                     (rule "notRight" (formula "21"))
                     (rule "andLeft" (formula "2"))
                     (rule "exLeft" (formula "1") (inst "sk=l_0"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "allLeft" (formula "10") (inst "t=l_0"))
                     (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "4"))
                     (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "10") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "10") (term "0,0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "allLeft" (formula "21") (inst "t=k_0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "allLeft" (formula "21") (inst "t=i_0"))
                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                     (rule "mul_literals" (formula "21") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "21") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1"))
                     (rule "leq_literals" (formula "21") (term "0,1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "21"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "22"))
                     (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "1,0"))
                     (rule "times_zero_1" (formula "22") (term "0"))
                     (rule "qeq_literals" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "applyEqRigid" (formula "22") (term "0,2,1,1,1,0") (ifseqformula "5"))
                     (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "5"))
                     (rule "applyEqRigid" (formula "10") (term "0,2,0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0"))
                     (rule "add_literals" (formula "10") (term "0"))
                     (rule "qeq_literals" (formula "10"))
                     (rule "closeFalse" (formula "10"))
                  )
                  (branch "Show Axiom Satisfiability"
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "closeTrue" (formula "20"))
                  )
               )
            )
            (branch "Null Reference (_b = null)"
               (rule "false_right" (formula "23"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (_a = null)"
         (rule "false_right" (formula "23"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Show Axiom Satisfiability"
    (builtin "One Step Simplification" (formula "10"))
   (rule "closeTrue" (formula "10"))
)
)
}
