\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:showSatisfiability",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:ban",
        "sequences" : "sequences:on",
        "soundDefaultContracts" : "soundDefaultContracts:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 10000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_OFF",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource ".";

\proofObligation 
// Proof-Obligation settings
{ 
    "class" : "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
    "contract" : "ArrayList[List::remFirst()].JML normal_behavior operation contract.0",
    "name" : "ArrayList[List::remFirst()].JML normal_behavior operation contract.0"
 }

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))

(autoModeTime "2563")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "0,0,0,1"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "Query_axiom_for_empty__in_ArrayList" (formula "7") (term "0") (inst "empty_sk=empty_sk_0") (inst "#self=a") (inst "#res=b") (ifseqformula "3"))
(rule "apply_eq_boolean_rigid" (formula "1") (term "0,0,1") (ifseqformula "8"))
(rule "eqSymm" (formula "1") (term "0,1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "boxToDiamond" (formula "1") (term "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "Class_invariant_axiom_for_ArrayList" (formula "5") (inst "i=i") (inst "sk=sk_0") (ifseqformula "7"))
(branch "Use Axiom"
    (builtin "One Step Simplification" (formula "5"))
   (rule "expandInRangeInt" (formula "5") (term "1,1,0,0"))
   (rule "replace_int_MIN" (formula "5") (term "0,1,1,1,0,0"))
   (rule "replace_int_MAX" (formula "5") (term "1,0,1,1,0,0"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "6"))
   (rule "castedGetAny" (formula "5") (term "0,0,1,1,0"))
   (rule "castedGetAny" (formula "5") (term "1,1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "5") (term "0"))
   (rule "nnf_notAnd" (formula "5") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
   (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
   (rule "mul_literals" (formula "5") (term "1,0,0,0"))
   (rule "JML_represents_clause_for_List_theList" (formula "5") (term "0,0,1,1,1,0") (inst "i=i") (inst "sk=sk_1") (inst "S=S") (ifseqformula "8"))
   (branch "Use Axiom"
      (rule "getOfSeqDef" (formula "5") (term "0,1,1,1,0"))
      (rule "castDel" (formula "5") (term "1,0,1,1,1,0"))
      (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,1,1,1,0"))
      (rule "mul_literals" (formula "5") (term "1,1,1,0,0,1,1,1,0"))
      (rule "add_zero_right" (formula "5") (term "1,1,0,0,1,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,1,1,0"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,1,1,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,1,1,0"))
      (rule "JML_represents_clause_for_List_theList" (formula "5") (term "0,0,0,1,1,0") (inst "i=i") (inst "sk=sk_2") (inst "S=S") (ifseqformula "8"))
      (branch "Use Axiom"
         (rule "getOfSeqDef" (formula "5") (term "0,0,1,1,0"))
         (rule "castDel" (formula "5") (term "1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "5") (term "0,2,1,0,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,0,1,1,0"))
         (rule "times_zero_2" (formula "5") (term "1,1,1,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "5") (term "1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,1,1,0"))
         (rule "JML_represents_clause_for_List_theList" (formula "5") (term "0,0,0,0,1,0") (inst "i=i") (inst "sk=sk_3") (inst "S=S") (ifseqformula "8"))
         (branch "Use Axiom"
            (rule "getOfSeqDef" (formula "5") (term "0,0,0,1,0"))
            (rule "castDel" (formula "5") (term "2,0,0,0,1,0"))
            (rule "castDel" (formula "5") (term "1,0,0,0,1,0"))
            (rule "add_zero_right" (formula "5") (term "0,2,1,0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,0,0,1,0"))
            (rule "times_zero_2" (formula "5") (term "1,1,1,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "5") (term "1,1,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,0,1,0"))
            (rule "JML_represents_clause_for_List_theList" (formula "5") (term "0,1,1,0,0") (inst "i=i") (inst "sk=sk_4") (inst "S=S") (ifseqformula "8"))
            (branch "Use Axiom"
               (rule "lenOfSeqDef" (formula "5") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,1,1,0,0"))
               (rule "times_zero_2" (formula "5") (term "1,1,1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "1,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "0,0,1,1,0,0"))
               (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_remFirst,savedHeapBefore_remFirst"))
                (builtin "One Step Simplification" (formula "10"))
               (rule "variableDeclarationAssign" (formula "10") (term "1"))
               (rule "variableDeclaration" (formula "10") (term "1") (newnames "tmp"))
               (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_empty,savedHeapBefore_empty"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "cnf_rightDist" (formula "5") (term "0"))
               (rule "distr_forallAnd" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "commute_or_2" (formula "5") (term "0"))
               (rule "commute_or" (formula "6") (term "0"))
               (rule "commute_or" (formula "5") (term "0,0"))
               (rule "cnf_rightDist" (formula "6") (term "0"))
               (rule "distr_forallAnd" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "commute_or" (formula "7") (term "0"))
               (rule "arrayCreation" (formula "12") (term "1") (newnames "dim0#0") (inst "#v0=i_arr"))
               (rule "variableDeclaration" (formula "12") (term "1") (newnames "i_arr"))
               (rule "variableDeclarationAssign" (formula "12") (term "1"))
               (rule "variableDeclaration" (formula "12") (term "1") (newnames "dim0"))
               (rule "returnUnfold" (formula "9") (term "1") (inst "#v0=b_1"))
               (rule "variableDeclarationAssign" (formula "9") (term "1"))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "b_1"))
               (rule "compound_subtraction_1" (formula "12") (term "1") (inst "#v=i_1"))
               (rule "variableDeclarationAssign" (formula "12") (term "1"))
               (rule "variableDeclaration" (formula "12") (term "1") (newnames "i_1"))
               (rule "eval_order_array_access6" (formula "12") (term "1") (inst "#v0=i_arr_1"))
               (rule "variableDeclarationAssign" (formula "12") (term "1"))
               (rule "variableDeclaration" (formula "12") (term "1") (newnames "i_arr_1"))
               (rule "assignment_read_attribute_this" (formula "12"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "assignment_read_length" (formula "12"))
               (branch "Normal Execution (i_arr_1 != null)"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "compound_equality_comparison_1" (formula "9") (term "1") (inst "#v0=i"))
                  (rule "variableDeclarationAssign" (formula "9") (term "1"))
                  (rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
                  (rule "assignmentSubtractionInt" (formula "12") (term "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "translateJavaSubInt" (formula "12") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "12") (term "0,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,1,0"))
                   (builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_size,result_size,exc_0,heapAfter_size,anon_heap_size") (contract "ArrayList[List::size()].JML normal_behavior operation contract.0") (modality "diamond"))
                  (branch "Post (size)"
                      (builtin "One Step Simplification" (formula "9"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "eqSymm" (formula "11"))
                     (rule "assignment" (formula "14") (term "1"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "JML_represents_clause_for_List_theList" (formula "11") (term "0,0") (inst "i=i_2") (inst "sk=sk_5") (inst "S=S") (ifseqformula "15"))
                     (branch "Use Axiom"
                        (rule "lenOfSeqDef" (formula "11") (term "0"))
                        (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                        (rule "times_zero_2" (formula "11") (term "1,1,0"))
                        (rule "add_zero_right" (formula "11") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                        (rule "pullOutSelect" (formula "11") (term "0,1,0") (inst "selectSK=ArrayList_a_0"))
                        (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "11"))
                        (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "16")) (ifInst ""  (formula "2")))
                        (rule "applyEqReverse" (formula "12") (term "0,1,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "11"))
                        (rule "Class_invariant_axiom_for_ArrayList" (formula "12") (inst "i=i_2") (inst "sk=sk_6") (ifseqformula "15"))
                        (branch "Use Axiom"
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "0,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "0,0,1"))
                           (rule "expandInRangeInt" (formula "12") (term "1,1,0,0"))
                           (rule "replace_int_MAX" (formula "12") (term "1,0,1,1,0,0"))
                           (rule "replace_int_MIN" (formula "12") (term "0,1,1,1,0,0"))
                           (rule "andLeft" (formula "12"))
                           (rule "notLeft" (formula "13"))
                           (rule "castedGetAny" (formula "12") (term "0,0,1,1,0"))
                           (rule "castedGetAny" (formula "12") (term "1,1,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "12") (term "0"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                           (rule "JML_represents_clause_for_List_theList" (formula "12") (term "0,0,0,0,1,0") (inst "i=i_2") (inst "sk=sk_7") (inst "S=S") (ifseqformula "15"))
                           (branch "Use Axiom"
                              (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "1,2,0,0,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "0,1,0,0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "1,2,0,0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "0,1,0,0,0,0,1,0"))
                              (rule "getOfSeqDef" (formula "12") (term "0,0,0,1,0"))
                              (rule "castDel" (formula "12") (term "2,0,0,0,1,0"))
                              (rule "castDel" (formula "12") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "12") (term "0,2,1,0,0,0,1,0"))
                              (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,0,0,1,0"))
                              (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "12") (term "1,1,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "JML_represents_clause_for_List_theList" (formula "12") (term "0,0,0,1,1,0") (inst "i=i_2") (inst "sk=sk_8") (inst "S=S") (ifseqformula "15"))
                              (branch "Use Axiom"
                                 (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "1,2,0,0,0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "1,2,0,0,0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                 (rule "getOfSeqDef" (formula "12") (term "0,0,1,1,0"))
                                 (rule "castDel" (formula "12") (term "1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,2,1,0,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "JML_represents_clause_for_List_theList" (formula "12") (term "0,0,1,1,1,0") (inst "i=i_2") (inst "sk=sk_9") (inst "S=S") (ifseqformula "15"))
                                 (branch "Use Axiom"
                                    (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "1,2,0,0,1,1,1,0"))
                                    (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "0,1,0,0,1,1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "1,2,0,0,1,1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "0,1,0,0,1,1,1,0"))
                                    (rule "getOfSeqDef" (formula "12") (term "0,1,1,1,0"))
                                    (rule "castDel" (formula "12") (term "1,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,2,1,0,1,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,1,1,1,0"))
                                    (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "12") (term "1,1,0,0,1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,1,1,0"))
                                    (rule "JML_represents_clause_for_List_theList" (formula "12") (term "0,1,1,0,0") (inst "i=i_2") (inst "sk=sk_10") (inst "S=S") (ifseqformula "15"))
                                    (branch "Use Axiom"
                                       (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "1,2,0,1,1,0,0"))
                                       (rule "replaceKnownSelect_taclet00000000_0" (formula "12") (term "0,1,0,1,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "1,2,0,1,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "12") (term "0,1,0,1,1,0,0"))
                                       (rule "lenOfSeqDef" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0,0"))
                                       (rule "times_zero_2" (formula "12") (term "1,1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,0,0"))
                                       (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "11"))
                                       (rule "equality_comparison_simple" (formula "14") (term "1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "cnf_rightDist" (formula "12") (term "0"))
                                       (rule "distr_forallAnd" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "commute_or_2" (formula "12") (term "0"))
                                       (rule "commute_or" (formula "13") (term "0"))
                                       (rule "commute_or" (formula "12") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "13") (term "0"))
                                       (rule "distr_forallAnd" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "commute_or" (formula "14") (term "0"))
                                       (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=b"))
                                       (rule "variableDeclaration" (formula "19") (term "1") (newnames "b"))
                                       (rule "methodCallReturn" (formula "16") (term "1"))
                                       (rule "assignment" (formula "16") (term "1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "less_than_comparison_simple" (formula "19") (term "1"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,0,1,0"))
                                       (rule "methodCallEmpty" (formula "16") (term "1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "arrayLengthIsAShort" (formula "5") (term "1,1,1,0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "arrayLengthNotNegative" (formula "5") (term "1,1,1,0,0,0,0,0,0"))
                                       (rule "emptyModality" (formula "17") (term "1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0") (ifseqformula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "ifSplit" (formula "21"))
                                       (branch "if b true"
                                           (builtin "One Step Simplification" (formula "22"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "blockThrow" (formula "22") (term "1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq0" (formula "14") (term "0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "close" (formula "19") (ifseqformula "14"))
                                       )
                                       (branch "if b false"
                                           (builtin "One Step Simplification" (formula "22"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "inEqSimp_leqRight" (formula "17"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "15") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "8") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "14"))
                                          (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "20") (term "1") (newnames "length#1") (inst "#v0=i_arr_2"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_arr_2"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "length_1"))
                                          (rule "assignment" (formula "20") (term "1"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "newObject"))
                                          (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "20") (term "1") (newnames "length#2") (inst "#v0=i_arr_3"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_arr_3"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "length_2"))
                                          (rule "assignment" (formula "20") (term "1"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "allocateInstanceWithLength" (formula "20"))
                                           (builtin "One Step Simplification" (formula "21"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "blockEmpty" (formula "24") (term "1"))
                                          (rule "assignment" (formula "24") (term "1"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "methodCall" (formula "24"))
                                          (branch "Normal Execution (newObject != null )"
                                             (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "assignment_write_attribute_this" (formula "24"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "methodCallWithinClass" (formula "24") (term "1"))
                                             (rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "arrayInitialisation" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "polySimp_elimSub" (formula "24") (term "2,1,0,1,0"))
                                             (rule "mul_literals" (formula "24") (term "1,2,1,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "2,1,0,1,0"))
                                             (rule "applyEq" (formula "24") (term "1,2,1,0,1,0") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "0,2,1,0,1,0"))
                                             (rule "methodCallEmpty" (formula "24") (term "1"))
                                             (rule "blockEmpty" (formula "24") (term "1"))
                                             (rule "assignment_write_attribute_this" (formula "24"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "methodCallReturnIgnoreResult" (formula "24") (term "1"))
                                             (rule "blockEmpty" (formula "24") (term "1"))
                                             (rule "methodCallReturn" (formula "24") (term "1"))
                                             (rule "assignment" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "methodCallEmpty" (formula "24") (term "1"))
                                             (rule "blockEmpty" (formula "24") (term "1"))
                                             (rule "assignment" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "blockEmpty" (formula "24") (term "1"))
                                             (rule "assignment" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "for_to_while" (formula "24") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
                                             (rule "variableDeclarationAssign" (formula "24") (term "1"))
                                             (rule "variableDeclaration" (formula "24") (term "1") (newnames "i_2"))
                                             (rule "assignment" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "elim_double_block_3" (formula "24") (term "1"))
                                             (rule "loopScopeInvDia" (formula "24") (term "1") (newnames "i_2_0,o,f") (inst "#variant=a") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "#x=b_2") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
                                             (branch "Invariant Initially Valid"
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "sub_literals" (formula "24") (term "1,1,0,0,1"))
                                                (rule "less_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                (rule "polySimp_addComm0" (formula "24") (term "0,2,0,1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "24") (term "1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "24") (term "1,1,0,0,1"))
                                                (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=ArrayList_a_1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                                (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "15"))
                                                (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "allRight" (formula "24") (inst "sk=j_0"))
                                                (rule "impRight" (formula "24"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "26"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Invariant Preserved and Used"
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "eqSymm" (formula "25") (term "1,0,1,0,0,1"))
                                                (rule "eqSymm" (formula "25") (term "1,0,0,1,0,1,1,0,1,1,0,1"))
                                                (rule "eqSymm" (formula "25") (term "1,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,0,0,1"))
                                                (rule "polySimp_elimSub" (formula "25") (term "0,1,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimSub" (formula "25") (term "0,1,0,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,2,0,1,0,1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,2,0,1,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "25") (term "1,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,1,1,1,0,1,1,0,1"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,1,0,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0,1,1,0,1,1,0,1"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0,1,1,0,1,1,0,1"))
                                                (rule "variableDeclaration" (formula "25") (term "1") (newnames "h"))
                                                (rule "variableDeclaration" (formula "25") (term "1") (newnames "h_1"))
                                                (rule "variableDeclaration" (formula "25") (term "1") (newnames "h_2"))
                                                (rule "variableDeclaration" (formula "25") (term "1") (newnames "a"))
                                                (rule "variableDeclaration" (formula "25") (term "1,1,0,1") (newnames "b_2"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,0,1"))
                                                (rule "nnf_imp2or" (formula "25") (term "0,1,0,0,1"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0,1"))
                                                (rule "nnf_imp2or" (formula "25") (term "0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0,1,1,0,1,1,0,1"))
                                                (rule "emptyModality" (formula "25") (term "1"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "impRight" (formula "25"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "pullOutSelect" (formula "28") (term "0,1,0,1,1,0") (inst "selectSK=ArrayList_a_1"))
                                                (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=ArrayList_a_2"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "29") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "28") (term "1,0,1,1,0") (ifseqformula "19"))
                                                (rule "ifElseUnfold" (formula "28") (term "1") (inst "#boolv=b_3"))
                                                (rule "variableDeclaration" (formula "28") (term "1") (newnames "b_3"))
                                                (rule "compound_less_than_comparison_2" (formula "28") (term "1") (inst "#v1=i_4") (inst "#v0=i_3"))
                                                (rule "variableDeclarationAssign" (formula "28") (term "1"))
                                                (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_3"))
                                                (rule "assignment" (formula "28") (term "1"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "variableDeclarationAssign" (formula "28") (term "1"))
                                                (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_4"))
                                                (rule "eval_order_array_access6" (formula "28") (term "1") (inst "#v0=i_arr_4"))
                                                (rule "variableDeclarationAssign" (formula "28") (term "1"))
                                                (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_arr_4"))
                                                (rule "assignment_read_attribute_this" (formula "28"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "replaceKnownSelect_taclet1010000000000000_2" (formula "28") (term "0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1010000000000000_12" (formula "28") (term "0,1,0"))
                                                (rule "assignment_read_length" (formula "28"))
                                                (branch "Normal Execution (i_arr_4 != null)"
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "19"))
                                                   (rule "less_than_comparison_simple" (formula "28") (term "1"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0"))
                                                   (rule "ifElseSplit" (formula "28"))
                                                   (branch "if b_3 true"
                                                       (builtin "One Step Simplification" (formula "29"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eval_order_array_access2" (formula "29") (term "1") (inst "#v0=i_5") (inst "#ar1=i_arr_5"))
                                                      (rule "variableDeclarationAssign" (formula "29") (term "1"))
                                                      (rule "variableDeclaration" (formula "29") (term "1") (newnames "i_arr_5"))
                                                      (rule "assignment" (formula "29") (term "1"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "variableDeclarationAssign" (formula "29") (term "1"))
                                                      (rule "variableDeclaration" (formula "29") (term "1") (newnames "i_5"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "assignmentSubtractionInt" (formula "28") (term "1"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "translateJavaSubInt" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "28") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0,1,0"))
                                                      (rule "eval_order_array_access3" (formula "28") (term "1") (inst "#v1=i_7") (inst "#v2=i_6") (inst "#v0=i_arr_6"))
                                                      (rule "variableDeclarationAssign" (formula "28") (term "1"))
                                                      (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_arr_6"))
                                                      (rule "assignment" (formula "28") (term "1"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "variableDeclarationAssign" (formula "28") (term "1"))
                                                      (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_6"))
                                                      (rule "assignment" (formula "28") (term "1"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "variableDeclarationAssign" (formula "28") (term "1"))
                                                      (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_7"))
                                                      (rule "eval_order_array_access4" (formula "28") (term "1") (inst "#v0=i_arr_7"))
                                                      (rule "variableDeclarationAssign" (formula "28") (term "1"))
                                                      (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_arr_7"))
                                                      (rule "assignment_read_attribute_this" (formula "28"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "replaceKnownSelect_taclet1010000000000000_2" (formula "28") (term "0,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1010000000000000_12" (formula "28") (term "0,1,0"))
                                                      (rule "assignment_array2" (formula "28"))
                                                      (branch "Normal Execution (i_arr_7 != null)"
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=arr_0"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "assignment_to_primitive_array_component" (formula "29"))
                                                         (branch "Normal Execution (i_arr_6 != null)"
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfCreate" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "10"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
                                                            (rule "leq_literals" (formula "1") (term "0,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                                                            (rule "simplifySelectOfCreate" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "postincrement" (formula "30") (term "1"))
                                                            (rule "compound_reference_cast_expression_primitive" (formula "30") (term "1") (inst "#v=i_8"))
                                                            (rule "variableDeclarationAssign" (formula "30") (term "1"))
                                                            (rule "variableDeclaration" (formula "30") (term "1") (newnames "i_8"))
                                                            (rule "remove_parentheses_right" (formula "30") (term "1"))
                                                            (rule "assignmentAdditionInt" (formula "30") (term "1"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "translateJavaAddInt" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,1,0"))
                                                            (rule "widening_identity_cast_5" (formula "30") (term "1"))
                                                            (rule "assignment" (formula "30") (term "1"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "blockEmpty" (formula "30") (term "1"))
                                                            (rule "lsContinue" (formula "30") (term "1"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "eqSymm" (formula "30") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "30") (term "0,1,1,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "30") (term "1,1,0,0,1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "30") (term "0,1,0,1"))
                                                            (rule "replaceKnownSelect_taclet1010000000000000_2" (formula "30") (term "0,1,0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1010000000000000_12" (formula "30") (term "0,1,0,1"))
                                                            (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,0,0,0"))
                                                            (rule "replaceKnownSelect_taclet1010000000000000_2" (formula "30") (term "0,0,1,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1010000000000000_12" (formula "30") (term "0,0,1,0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,1,0,0,0,1,0"))
                                                            (rule "precOfInt" (formula "30") (term "1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,1"))
                                                            (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,1"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,1,1"))
                                                            (rule "add_literals" (formula "30") (term "0,0,0,0,0,1,1"))
                                                            (rule "add_zero_left" (formula "30") (term "0,0,0,0,1,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,0,1,1"))
                                                            (rule "add_literals" (formula "30") (term "1,0,0,0,1,1"))
                                                            (rule "times_zero_1" (formula "30") (term "0,0,0,1,1"))
                                                            (rule "add_zero_left" (formula "30") (term "0,0,1,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "30") (term "0,1"))
                                                            (rule "mul_literals" (formula "30") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                            (rule "applyEq" (formula "30") (term "1,0,1,1") (ifseqformula "21"))
                                                            (rule "polySimp_pullOutFactor2" (formula "30") (term "0,1,1"))
                                                            (rule "add_literals" (formula "30") (term "1,0,1,1"))
                                                            (rule "times_zero_1" (formula "30") (term "0,1,1"))
                                                            (rule "leq_literals" (formula "30") (term "1,1"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "30") (term "0,1,0,0,0") (ifseqformula "21"))
                                                            (rule "replace_known_left" (formula "30") (term "1,0,0,0") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                                            (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "inEqSimp_invertInEq0" (formula "30") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "30") (term "0,0") (ifseqformula "4"))
                                                            (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "andRight" (formula "30"))
                                                            (branch
                                                               (rule "allRight" (formula "30") (inst "sk=j_0"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "eqSymm" (formula "32"))
                                                               (rule "inEqSimp_leqRight" (formula "30"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "31"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_3"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "33"))
                                                               (rule "eqSymm" (formula "1") (term "0,0"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                               (rule "mul_literals" (formula "3") (term "0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "ifthenelse_split" (formula "4") (term "0"))
                                                               (branch "self.a = i_arr_3 & result_size >= 2 + i_2_0 TRUE"
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "30") (ifseqformula "4") (ifseqformula "31"))
                                                                  (rule "close" (formula "30") (ifseqformula "16"))
                                                               )
                                                               (branch "self.a = i_arr_3 & result_size >= 2 + i_2_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "allLeft" (formula "17") (inst "t=i_2_0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "17") (term "0,1"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_subsumption1" (formula "17") (term "0,0,0") (ifseqformula "6"))
                                                                  (rule "leq_literals" (formula "17") (term "0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "exact_instance_definition_int" (formula "17") (inst "iv=iv"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "allLeft" (formula "25") (inst "t=i_2_0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                                                  (rule "replace_known_left" (formula "25") (term "1,0,0,1") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,1") (ifseqformula "6"))
                                                                  (rule "leq_literals" (formula "25") (term "0,0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                                   (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "25") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_5"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
                                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "32")) (ifInst ""  (formula "12")))
                                                                  (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                                                  (rule "hideAuxiliaryEq" (formula "25"))
                                                                  (rule "allLeft" (formula "27") (inst "t=i_2_0"))
                                                                  (rule "replaceKnownSelect_taclet1000001010000000000000_27" (formula "27") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000001010000000000000_28" (formula "27") (term "1,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1"))
                                                                  (rule "replace_known_left" (formula "27") (term "1,0,0,1") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "27") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "inEqSimp_subsumption1" (formula "27") (term "0,0") (ifseqformula "6"))
                                                                  (rule "leq_literals" (formula "27") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "allLeft" (formula "24") (inst "t=i_2_0"))
                                                                  (rule "replaceKnownSelect_taclet1000001010000000000000_27" (formula "24") (term "1,0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000001010000000000000_28" (formula "24") (term "1,0,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "inEqSimp_subsumption1" (formula "24") (term "0,0,0,0,0") (ifseqformula "6"))
                                                                  (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "exact_instance_definition_int" (formula "24") (term "0,0") (inst "iv=iv"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "allLeft" (formula "19") (inst "t=i_2_0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                                                                  (rule "replace_known_left" (formula "19") (term "1,0,0,1") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "6"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "allLeft" (formula "18") (inst "t=i_2_0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1"))
                                                                  (rule "replace_known_left" (formula "18") (term "1,0,0,1") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "6"))
                                                                  (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "6"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                  (branch "self.a = i_arr_3 TRUE"
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "31") (ifseqformula "4") (ifseqformula "32"))
                                                                     (rule "close" (formula "31") (ifseqformula "14"))
                                                                  )
                                                                  (branch "self.a = i_arr_3 FALSE"
                                                                     (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "28"))
                                                                      (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "false_right" (formula "29"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch "j_0 = -1 + i_2_0 TRUE"
                                                                        (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "1"))
                                                                        (rule "polySimp_addAssoc" (formula "34") (term "0,2,0"))
                                                                        (rule "add_literals" (formula "34") (term "0,0,2,0"))
                                                                        (rule "add_zero_left" (formula "34") (term "0,2,0"))
                                                                         (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "closeTrue" (formula "34"))
                                                                     )
                                                                     (branch "j_0 = -1 + i_2_0 FALSE"
                                                                        (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "eqSymm" (formula "34"))
                                                                        (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "27"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                                        (rule "add_literals" (formula "1") (term "0,1"))
                                                                        (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "1"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                                        (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "27") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "27") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "false_right" (formula "27"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                        (rule "mul_literals" (formula "2") (term "1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                                                        (rule "leq_literals" (formula "5") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "true_left" (formula "5"))
                                                                        (rule "allLeft" (formula "5") (inst "t=j_0"))
                                                                        (rule "replaceKnownSelect_taclet000001010000000000000_24" (formula "5") (term "1,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet000001010000000000000_25" (formula "5") (term "1,1"))
                                                                        (rule "eqSymm" (formula "5") (term "1"))
                                                                        (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "34"))
                                                                         (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "5") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                                                        (rule "andLeft" (formula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                        (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                        (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                        (rule "add_literals" (formula "5") (term "0"))
                                                                        (rule "leq_literals" (formula "5"))
                                                                        (rule "closeFalse" (formula "5"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch
                                                               (rule "allRight" (formula "30") (inst "sk=f_0"))
                                                               (rule "allRight" (formula "30") (inst "sk=o_0"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "pullOutSelect" (formula "32") (term "1") (inst "selectSK=f_0_0"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfMemset" (formula "1"))
                                                               (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfCreate" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                               (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_0_1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "33"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                               (rule "replaceKnownSelect_taclet100001010000000000000_23" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100001010000000000000_29" (formula "1") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                         (branch "Null Reference (i_arr_6 = null)"
                                                            (rule "false_right" (formula "30"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "Index Out of Bounds (i_arr_6 != null, but i_6 Out of Bounds!)"
                                                            (rule "false_right" (formula "30"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                            (rule "add_literals" (formula "1") (term "0,0,1"))
                                                            (rule "add_zero_left" (formula "1") (term "0,1"))
                                                            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "Null Reference (i_arr_7 = null)"
                                                          (builtin "One Step Simplification" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Index Out of Bounds (i_arr_7 != null, but i_2 Out of Bounds!)"
                                                          (builtin "One Step Simplification" (formula "29"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                         (rule "false_right" (formula "29"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "20"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "if b_3 false"
                                                       (builtin "One Step Simplification" (formula "29"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "inEqSimp_geqRight" (formula "23"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "13") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "28") (term "1,0,1,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_pullOutFactor2" (formula "28") (term "0,1,1,0"))
                                                      (rule "add_literals" (formula "28") (term "1,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "19") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "20") (term "1,1,1,0,0,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "27") (term "1,2,1,0,0,0,1,0,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "18") (term "1") (ifseqformula "2"))
                                                      (rule "elim_double_block_2" (formula "27") (term "1"))
                                                      (rule "blockBreak" (formula "27") (term "1"))
                                                      (rule "lsBreak" (formula "27") (term "1"))
                                                      (rule "assignment" (formula "27") (term "1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "assignment_write_attribute_this" (formula "27"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "methodCallEmpty" (formula "27") (term "1"))
                                                      (rule "tryEmpty" (formula "27") (term "1"))
                                                      (rule "emptyModality" (formula "27") (term "1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "eqSymm" (formula "27") (term "0"))
                                                      (rule "Class_invariant_axiom_for_ArrayList" (formula "27") (term "1") (inst "i=i_5") (inst "sk=sk_11") (ifseqformula "25"))
                                                      (branch "Use Axiom"
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "expandInRangeInt" (formula "27") (term "1,1,0,0,1"))
                                                         (rule "replace_int_MIN" (formula "27") (term "0,1,1,1,0,0,1"))
                                                         (rule "replace_int_MAX" (formula "27") (term "1,0,1,1,0,0,1"))
                                                         (rule "castedGetAny" (formula "27") (term "1,1,1,1,0,0,1"))
                                                         (rule "castedGetAny" (formula "27") (term "0,0,1,1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1"))
                                                         (rule "pullOutSelect" (formula "27") (term "0,0,1,1") (inst "selectSK=ArrayList_a_3"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "28") (term "0,0,1,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "27") (term "0,1,1") (ifseqformula "23"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "nnf_imp2or" (formula "27") (term "0,1"))
                                                         (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                                                         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                                                         (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                                                         (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                                         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                                                         (rule "JML_represents_clause_for_List_theList" (formula "27") (term "0,2,1,0") (inst "i=i_5") (inst "sk=sk_12") (inst "S=S") (ifseqformula "25"))
                                                         (branch "Use Axiom"
                                                            (rule "eqSymm" (formula "27") (term "0"))
                                                            (rule "lenOfSeqDef" (formula "27") (term "2,0,0"))
                                                            (rule "polySimp_elimSub" (formula "27") (term "1,2,0,0"))
                                                            (rule "mul_literals" (formula "27") (term "1,1,2,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "1,2,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,2,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0,2,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,2,0,0"))
                                                            (rule "applyEq" (formula "27") (term "1,2,0,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "27") (term "0,1,0,0,2,0,0") (ifseqformula "18"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,2,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "0,0,2,0,0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "0,0,2,0,0"))
                                                            (rule "replace_known_left" (formula "27") (term "0,2,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "eqSymm" (formula "27") (term "0"))
                                                            (rule "JML_represents_clause_for_List_theList" (formula "27") (term "0,1,1,0,0,1") (inst "i=i_5") (inst "sk=sk_13") (inst "S=S") (ifseqformula "25"))
                                                            (branch "Use Axiom"
                                                               (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "1,2,0,1,1,0,0,1"))
                                                               (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "0,1,0,1,1,0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "1,2,0,1,1,0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "0,1,0,1,1,0,0,1"))
                                                               (rule "dismissNonSelectedField" (formula "27") (term "2,0,1,1,0,0,1"))
                                                               (rule "lenOfSeqDef" (formula "27") (term "1,1,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "27") (term "1,1,1,0,0,1"))
                                                               (rule "times_zero_2" (formula "27") (term "1,1,1,1,0,0,1"))
                                                               (rule "add_zero_right" (formula "27") (term "1,1,1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,1,0,0,1"))
                                                               (rule "add_zero_right" (formula "27") (term "0,0,1,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,1"))
                                                               (rule "applyEq" (formula "27") (term "0,1,0,0,1,1,0,0,1") (ifseqformula "5"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,0,1,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1,0,0,1"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,1,1,0,0,1"))
                                                               (rule "applyEq" (formula "27") (term "1,1,1,0,0,1") (ifseqformula "5"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,0,1,1,0,0,1"))
                                                               (rule "JML_represents_clause_for_List_theList" (formula "27") (term "0,0,1,1,1,0,1") (inst "i=i_5") (inst "sk=sk_14") (inst "S=S") (ifseqformula "25"))
                                                               (branch "Use Axiom"
                                                                  (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "0,1,0,0,1,1,1,0,1"))
                                                                  (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "1,2,0,0,1,1,1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "0,1,0,0,1,1,1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "1,2,0,0,1,1,1,0,1"))
                                                                  (rule "dismissNonSelectedField" (formula "27") (term "2,0,0,1,1,1,0,1"))
                                                                  (rule "getOfSeqDef" (formula "27") (term "0,1,1,1,0,1"))
                                                                  (rule "castDel" (formula "27") (term "1,0,1,1,1,0,1"))
                                                                  (rule "add_zero_right" (formula "27") (term "0,2,1,0,1,1,1,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,1,1,1,0,1"))
                                                                  (rule "times_zero_2" (formula "27") (term "1,1,1,0,0,1,1,1,0,1"))
                                                                  (rule "add_zero_right" (formula "27") (term "1,1,0,0,1,1,1,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,1,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,1,0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,1,1,0,1"))
                                                                  (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,1,1,1,0,1") (ifseqformula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,1,1,0,1"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,1,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,1,1,0,1"))
                                                                  (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,1,1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,1,0,1"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,1,0,1"))
                                                                  (rule "JML_represents_clause_for_List_theList" (formula "27") (term "0,0,0,0,1,0,1") (inst "i=i_5") (inst "sk=sk_15") (inst "S=S") (ifseqformula "25"))
                                                                  (branch "Use Axiom"
                                                                     (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "1,2,0,0,0,0,1,0,1"))
                                                                     (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "0,1,0,0,0,0,1,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "1,2,0,0,0,0,1,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "0,1,0,0,0,0,1,0,1"))
                                                                     (rule "dismissNonSelectedField" (formula "27") (term "2,0,0,0,0,1,0,1"))
                                                                     (rule "getOfSeqDef" (formula "27") (term "0,0,0,1,0,1"))
                                                                     (rule "castDel" (formula "27") (term "2,0,0,0,1,0,1"))
                                                                     (rule "castDel" (formula "27") (term "1,0,0,0,1,0,1"))
                                                                     (rule "add_zero_right" (formula "27") (term "0,2,1,0,0,0,1,0,1"))
                                                                     (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,0,0,1,0,1"))
                                                                     (rule "times_zero_2" (formula "27") (term "1,1,1,0,0,0,0,1,0,1"))
                                                                     (rule "add_zero_right" (formula "27") (term "1,1,0,0,0,0,1,0,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0,1,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,1,0,1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,0,1,0,1"))
                                                                     (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,0,0,1,0,1") (ifseqformula "5"))
                                                                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,1,0,1"))
                                                                     (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,1,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,1,0,1"))
                                                                     (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0,1,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,1,0,1"))
                                                                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0,1,0,1"))
                                                                     (rule "JML_represents_clause_for_List_theList" (formula "27") (term "0,0,0,1,1,0,1") (inst "i=i_5") (inst "sk=sk_16") (inst "S=S") (ifseqformula "25"))
                                                                     (branch "Use Axiom"
                                                                        (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "1,2,0,0,0,1,1,0,1"))
                                                                        (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "0,1,0,0,0,1,1,0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "1,2,0,0,0,1,1,0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "0,1,0,0,0,1,1,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "27") (term "2,0,0,0,1,1,0,1"))
                                                                        (rule "getOfSeqDef" (formula "27") (term "0,0,1,1,0,1"))
                                                                        (rule "castDel" (formula "27") (term "1,0,0,1,1,0,1"))
                                                                        (rule "add_zero_right" (formula "27") (term "0,2,1,0,0,1,1,0,1"))
                                                                        (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,0,1,1,0,1"))
                                                                        (rule "times_zero_2" (formula "27") (term "1,1,1,0,0,0,1,1,0,1"))
                                                                        (rule "add_zero_right" (formula "27") (term "1,1,0,0,0,1,1,0,1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,1,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,1,0,1"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,1,1,0,1"))
                                                                        (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0,1") (ifseqformula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,1,1,0,1"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,1,1,0,1"))
                                                                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,1,1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,1,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,1,0,1"))
                                                                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,1,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,1,0,1"))
                                                                        (rule "JML_represents_clause_for_List_theList" (formula "27") (term "0,0") (inst "i=i_5") (inst "sk=sk_17") (inst "S=S") (ifseqformula "25"))
                                                                        (branch "Use Axiom"
                                                                           (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "1,2,0,0"))
                                                                           (rule "replaceKnownSelect_taclet0101010000000000000_13" (formula "27") (term "0,1,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "1,2,0,0"))
                                                                           (rule "replaceKnownAuxiliaryConstant_taclet0101010000000000000_14" (formula "27") (term "0,1,0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "27") (term "2,0,0"))
                                                                           (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "5"))
                                                                           (rule "JML_represents_clause_for_List_theList" (formula "27") (term "0,1,0") (inst "i=i_5") (inst "sk=sk_18") (inst "S=S") (ifseqformula "25"))
                                                                           (branch "Use Axiom"
                                                                              (rule "eqSymm" (formula "27") (term "0"))
                                                                              (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "18"))
                                                                              (rule "ifthenelse_split" (formula "27") (term "1,1,0,0,1"))
                                                                              (branch "i_2_0 >= 2 TRUE"
                                                                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                                                 (rule "leq_literals" (formula "2") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                                 (rule "true_left" (formula "2"))
                                                                                 (rule "cut_direct" (formula "27") (term "0"))
                                                                                 (branch "CUT: seqSub(seqDef{int i_5;}(0, i_2_0, self.a[i_5]), 1, i_2_0) = seqDef{int i_5;}(0, -1 + i_2_0, i_arr_3[i_5]@heap[create(i_arr_3)] [i_arr_3.<transient> := 0] [i_arr_3.<transactionConditionallyUpdated> := FALSE] [i_arr_3.<initialized> := FALSE] [memset(arrayRange(i_arr_3, 0, -2 + i_2_0), 0)] [i_arr_3.<initialized> := TRUE] [anon(i_arr_3.*, anon_heap_LOOP_0<<anonHeapFunction>>)]) TRUE"
                                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                                    (rule "allRight" (formula "28") (inst "sk=i_5_0"))
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "inEqSimp_geqRight" (formula "29"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                    (rule "inEqSimp_leqRight" (formula "29"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0"))
                                                                                    (rule "replace_known_left" (formula "30") (term "0,0,0,1,1") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                    (rule "replace_known_left" (formula "30") (term "0,0,0,1") (ifseqformula "2"))
                                                                                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                                                                    (rule "exact_instance_definition_int" (formula "30") (term "0") (inst "iv=iv"))
                                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                                    (rule "pullOutSelect" (formula "30") (term "0,0") (inst "selectSK=arr_0"))
                                                                                    (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "1"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "1"))
                                                                                    (rule "applyEqReverse" (formula "31") (term "0,1") (ifseqformula "1"))
                                                                                    (rule "hideAuxiliaryEq" (formula "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "mul_literals" (formula "1") (term "1"))
                                                                                    (rule "commute_and" (formula "30"))
                                                                                    (rule "allLeft" (formula "22") (inst "t=i_5_0"))
                                                                                    (rule "replace_known_left" (formula "22") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                                                    (rule "leq_literals" (formula "22") (term "0,1"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "22") (term "0,0,0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "22") (term "0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "exact_instance_definition_int" (formula "22") (inst "iv=iv"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "true_left" (formula "22"))
                                                                                    (rule "allLeft" (formula "16") (inst "t=i_5_0"))
                                                                                    (rule "replace_known_left" (formula "16") (term "0,0,0,1") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "16") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "16") (term "0,0,1") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0,1"))
                                                                                    (rule "qeq_literals" (formula "16") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "16") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "allLeft" (formula "25") (inst "t=i_5_0"))
                                                                                    (rule "replace_known_left" (formula "25") (term "0,0,0,1") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "25") (term "0,0,1") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0,1"))
                                                                                    (rule "qeq_literals" (formula "25") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_1"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "20"))
                                                                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "10")))
                                                                                    (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                                                                                    (rule "hideAuxiliaryEq" (formula "25"))
                                                                                    (rule "allLeft" (formula "15") (inst "t=i_5_0"))
                                                                                    (rule "replace_known_left" (formula "15") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "15") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "exact_instance_definition_int" (formula "15") (term "0,0") (inst "iv=iv"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "true_left" (formula "15"))
                                                                                    (rule "allLeft" (formula "18") (inst "t=i_5_0"))
                                                                                    (rule "replace_known_left" (formula "18") (term "0,0,0,1") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "18") (term "0,0,1") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0,1"))
                                                                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0,1"))
                                                                                    (rule "qeq_literals" (formula "18") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")))
                                                                                    (rule "true_left" (formula "18"))
                                                                                    (rule "allLeft" (formula "24") (inst "t=i_5_0"))
                                                                                    (rule "replaceKnownSelect_taclet0000000000101010000000000000_17" (formula "24") (term "1,0,1"))
                                                                                    (rule "replaceKnownAuxiliaryConstant_taclet0000000000101010000000000000_18" (formula "24") (term "1,0,1"))
                                                                                    (rule "replace_known_left" (formula "24") (term "0,0,0,1") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "24") (term "0,0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "16")))
                                                                                    (rule "true_left" (formula "24"))
                                                                                    (rule "allLeft" (formula "6") (inst "t=i_5_0"))
                                                                                    (rule "replaceKnownSelect_taclet0000000000101010000000000000_15" (formula "6") (term "1,1"))
                                                                                    (rule "replaceKnownAuxiliaryConstant_taclet0000000000101010000000000000_16" (formula "6") (term "1,1"))
                                                                                    (rule "eqSymm" (formula "6") (term "1"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "6") (term "1,0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "6") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                                    (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "6"))
                                                                                    (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "6"))
                                                                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "3") (inst "iv=iv"))
                                                                                    (rule "andLeft" (formula "3"))
                                                                                    (rule "lenOfSeqSub" (formula "3") (term "0"))
                                                                                    (rule "eqSymm" (formula "3"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "1,1"))
                                                                                    (rule "getOfSeqDef" (formula "4") (term "1,1,0"))
                                                                                    (rule "castDel" (formula "4") (term "2,1,1,0"))
                                                                                    (rule "castDel" (formula "4") (term "1,1,1,0"))
                                                                                    (rule "add_zero_right" (formula "4") (term "0,2,1,1,1,0"))
                                                                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0"))
                                                                                    (rule "lenOfSeqSub" (formula "4") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "1,1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "1,1,1,0,0"))
                                                                                    (rule "lenOfSeqDef" (formula "3") (term "0"))
                                                                                    (rule "eqSymm" (formula "3"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                                                    (rule "add_zero_right" (formula "3") (term "1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "4") (term "0,0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                                                    (rule "eqSymm" (formula "3"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "3") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "true_left" (formula "3"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "3") (term "0,1,1,0") (ifseqformula "4"))
                                                                                    (rule "getOfSeqDef" (formula "3") (term "1,1,0"))
                                                                                    (rule "castDel" (formula "3") (term "2,1,1,0"))
                                                                                    (rule "castDel" (formula "3") (term "1,1,1,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "0,2,1,1,1,0"))
                                                                                    (rule "eqSymm" (formula "3") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "3") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "3") (term "0,0,0,1,0,1,1,0"))
                                                                                    (rule "eqSymm" (formula "3") (term "1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "true_left" (formula "3"))
                                                                                    (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), i_5_0)"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,1"))
                                                                                    (rule "replace_known_left" (formula "27") (term "1,0,0,1") (ifseqformula "2"))
                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "27") (term "0,0,1") (ifseqformula "1"))
                                                                                    (rule "leq_literals" (formula "27") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "27") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_2"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
                                                                                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")) (ifInst ""  (formula "11")))
                                                                                    (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
                                                                                    (rule "hideAuxiliaryEq" (formula "27"))
                                                                                    (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "27"))
                                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                                    (rule "inEqSimp_leqRight" (formula "34"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "mul_literals" (formula "1") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "1"))
                                                                                    (rule "leq_literals" (formula "28") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                                    (rule "true_left" (formula "28"))
                                                                                    (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_5_0)"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                                                                    (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "17") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                                    (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "exact_instance_definition_int" (formula "17") (term "0,0") (inst "iv=iv"))
                                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "true_left" (formula "17"))
                                                                                    (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_5_0)"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,1"))
                                                                                    (rule "replace_known_left" (formula "20") (term "1,0,0,1") (ifseqformula "3"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "3"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                                                                    (rule "qeq_literals" (formula "20") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "20") (term "0,0") (ifseqformula "2"))
                                                                                    (rule "leq_literals" (formula "20") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
                                                                                    (rule "leq_literals" (formula "20") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "true_left" (formula "20"))
                                                                                    (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_5_0)"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1"))
                                                                                    (rule "replace_known_left" (formula "19") (term "1,0,0,1") (ifseqformula "3"))
                                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "3"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "19") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "19") (term "0,0,1") (ifseqformula "2"))
                                                                                    (rule "leq_literals" (formula "19") (term "0,0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "19") (term "0,1"))
                                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "2"))
                                                                                    (rule "qeq_literals" (formula "19") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "closeFalse" (formula "19"))
                                                                                 )
                                                                                 (branch "CUT: seqSub(seqDef{int i_5;}(0, i_2_0, self.a[i_5]), 1, i_2_0) = seqDef{int i_5;}(0, -1 + i_2_0, i_arr_3[i_5]@heap[create(i_arr_3)] [i_arr_3.<transient> := 0] [i_arr_3.<transactionConditionallyUpdated> := FALSE] [i_arr_3.<initialized> := FALSE] [memset(arrayRange(i_arr_3, 0, -2 + i_2_0), 0)] [i_arr_3.<initialized> := TRUE] [anon(i_arr_3.*, anon_heap_LOOP_0<<anonHeapFunction>>)]) FALSE"
                                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                                    (rule "false_right" (formula "28"))
                                                                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv"))
                                                                                    (rule "lenOfSeqSub" (formula "27") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "27") (term "0"))
                                                                                    (rule "polySimp_elimSub" (formula "27") (term "1,1,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                                                                                    (rule "lenOfSeqSub" (formula "27") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "27") (term "1,1,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,1,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "27") (term "1,1,1,0,0,1"))
                                                                                    (rule "getOfSeqDef" (formula "27") (term "1,1,0,1"))
                                                                                    (rule "castDel" (formula "27") (term "2,1,1,0,1"))
                                                                                    (rule "castDel" (formula "27") (term "1,1,1,0,1"))
                                                                                    (rule "add_zero_right" (formula "27") (term "0,2,1,1,1,0,1"))
                                                                                    (rule "eqSymm" (formula "27") (term "1,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,1,0,1"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,1,1,0,0,1,0,1"))
                                                                                    (rule "add_zero_right" (formula "27") (term "1,1,0,0,1,0,1"))
                                                                                    (rule "lenOfSeqDef" (formula "27") (term "0,0"))
                                                                                    (rule "eqSymm" (formula "27") (term "0"))
                                                                                    (rule "polySimp_elimSub" (formula "27") (term "1,1,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,1,1,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,0,1,1,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0,1"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0,1"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                                                                    (rule "eqSymm" (formula "27") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                                                    (rule "eqSymm" (formula "27") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "allRight" (formula "27") (inst "sk=iv_0"))
                                                                                    (rule "impRight" (formula "27"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "eqSymm" (formula "29"))
                                                                                    (rule "replace_known_left" (formula "29") (term "0,0,1") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                                                                                    (rule "replace_known_left" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                                    (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "2"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "getOfSeqSub" (formula "29") (term "0"))
                                                                                    (rule "castDel" (formula "29") (term "2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "getOfSeqDef" (formula "29") (term "1,0"))
                                                                                    (rule "castDel" (formula "29") (term "2,1,0"))
                                                                                    (rule "castDel" (formula "29") (term "1,1,0"))
                                                                                    (rule "add_zero_right" (formula "29") (term "0,2,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "29") (term "1,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,1,1,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "29") (term "1,1,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,1,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                                                    (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "29") (term "0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "2"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                                                                                    (rule "replace_known_left" (formula "29") (term "1,0,0") (ifseqformula "2"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0,0"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "29") (term "0,0") (ifseqformula "1"))
                                                                                    (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "eqSymm" (formula "29"))
                                                                                    (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_0"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                                                                                    (rule "hideAuxiliaryEq" (formula "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "mul_literals" (formula "1") (term "1"))
                                                                                    (rule "allLeft" (formula "5") (inst "t=iv_0"))
                                                                                    (rule "replaceKnownSelect_taclet1000000000101010000000000000_15" (formula "5") (term "1,1"))
                                                                                    (rule "replaceKnownAuxiliaryConstant_taclet1000000000101010000000000000_16" (formula "5") (term "1,1"))
                                                                                    (rule "eqSymm" (formula "5") (term "1"))
                                                                                    (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "30"))
                                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "1"))
                                                                                    (rule "qeq_literals" (formula "5") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "2"))
                                                                                    (rule "andLeft" (formula "5"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                                                                    (rule "add_literals" (formula "5") (term "0"))
                                                                                    (rule "leq_literals" (formula "5"))
                                                                                    (rule "closeFalse" (formula "5"))
                                                                                 )
                                                                              )
                                                                              (branch "i_2_0 >= 2 FALSE"
                                                                                 (rule "inEqSimp_geqRight" (formula "27"))
                                                                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "1") (term "0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                 (rule "mul_literals" (formula "1") (term "1"))
                                                                                 (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                                                 (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,1,0,0,0,1,0,1") (ifseqformula "2"))
                                                                                 (rule "add_literals" (formula "29") (term "2,1,0,0,0,1,0,0,0,1,0,1"))
                                                                                 (rule "applyEqRigid" (formula "14") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "2"))
                                                                                 (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "applyEq" (formula "5") (term "1,1,1,0,0") (ifseqformula "2"))
                                                                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                                 (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "2"))
                                                                                 (rule "applyEqRigid" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "2"))
                                                                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                                                 (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "2"))
                                                                                 (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "2"))
                                                                                 (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,1,0,0,1,1,0,1") (ifseqformula "2"))
                                                                                 (rule "add_literals" (formula "29") (term "2,1,0,0,0,1,0,0,1,1,0,1"))
                                                                                 (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "2"))
                                                                                 (rule "applyEq" (formula "23") (term "1,1,1,0,0,1,0") (ifseqformula "2"))
                                                                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                                                 (rule "applyEq" (formula "29") (term "1,2,1,0,0,0,1,0,1,1,1,0,1") (ifseqformula "2"))
                                                                                 (rule "add_literals" (formula "29") (term "2,1,0,0,0,1,0,1,1,1,0,1"))
                                                                                 (rule "applyEqRigid" (formula "22") (term "1,1,1,0,0,1,0") (ifseqformula "2"))
                                                                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                                                 (rule "applyEqRigid" (formula "21") (term "1,1,0") (ifseqformula "2"))
                                                                                 (rule "applyEqRigid" (formula "22") (term "1,1,0,0") (ifseqformula "2"))
                                                                                 (rule "applyEq" (formula "29") (term "2,0,0") (ifseqformula "2"))
                                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                                 (rule "eqSymm" (formula "29") (term "0"))
                                                                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                                                 (rule "leq_literals" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "applyEqRigid" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                                                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                                                 (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                                 (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                                                 (rule "qeq_literals" (formula "2"))
                                                                                 (rule "true_left" (formula "2"))
                                                                                 (rule "applyEqRigid" (formula "27") (term "1,1,0,0") (ifseqformula "1"))
                                                                                 (rule "add_literals" (formula "27") (term "1,0,0"))
                                                                                 (rule "seqDef_lower_equals_upper" (formula "27") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                                 (rule "allRight" (formula "27") (inst "sk=i_5_0"))
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "replace_known_right" (formula "29") (term "0,0,0,1,1") (ifseqformula "28"))
                                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                                                                 (rule "inEqSimp_geqRight" (formula "28"))
                                                                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                                 (rule "inEqSimp_leqRight" (formula "28"))
                                                                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "1") (term "0,0"))
                                                                                 (rule "add_zero_left" (formula "1") (term "0"))
                                                                                 (rule "applyEqRigid" (formula "5") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                 (rule "add_literals" (formula "5") (term "2,1,0,0,0,1,1,0"))
                                                                                 (rule "applyEqRigid" (formula "20") (term "1") (ifseqformula "3"))
                                                                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
                                                                                 (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "3"))
                                                                                 (rule "add_literals" (formula "7") (term "1"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                 (rule "mul_literals" (formula "2") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                                                 (rule "qeq_literals" (formula "1") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                           )
                                                                           (branch "Show Axiom Satisfiability"
                                                                               (builtin "One Step Simplification" (formula "27"))
                                                                              (rule "closeTrue" (formula "27"))
                                                                           )
                                                                        )
                                                                        (branch "Show Axiom Satisfiability"
                                                                            (builtin "One Step Simplification" (formula "27"))
                                                                           (rule "closeTrue" (formula "27"))
                                                                        )
                                                                     )
                                                                     (branch "Show Axiom Satisfiability"
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "closeTrue" (formula "27"))
                                                                     )
                                                                  )
                                                                  (branch "Show Axiom Satisfiability"
                                                                      (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "closeTrue" (formula "27"))
                                                                  )
                                                               )
                                                               (branch "Show Axiom Satisfiability"
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "closeTrue" (formula "27"))
                                                               )
                                                            )
                                                            (branch "Show Axiom Satisfiability"
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "closeTrue" (formula "27"))
                                                            )
                                                         )
                                                         (branch "Show Axiom Satisfiability"
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "closeTrue" (formula "27"))
                                                         )
                                                      )
                                                      (branch "Show Axiom Satisfiability"
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "closeTrue" (formula "27"))
                                                      )
                                                   )
                                                )
                                                (branch "Null Reference (i_arr_4 = null)"
                                                   (rule "false_right" (formula "29"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "Null Reference (newObject = null)"
                                             (rule "false_right" (formula "25"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "Show Axiom Satisfiability"
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "closeTrue" (formula "13"))
                                    )
                                 )
                                 (branch "Show Axiom Satisfiability"
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "closeTrue" (formula "13"))
                                 )
                              )
                              (branch "Show Axiom Satisfiability"
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "closeTrue" (formula "13"))
                              )
                           )
                           (branch "Show Axiom Satisfiability"
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "closeTrue" (formula "13"))
                           )
                        )
                        (branch "Show Axiom Satisfiability"
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "closeTrue" (formula "13"))
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "closeTrue" (formula "13"))
                     )
                  )
                  (branch "Exceptional Post (size)"
                      (builtin "One Step Simplification" (formula "11"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "10"))
                     (rule "close" (formula "13") (ifseqformula "12"))
                  )
                  (branch "Pre (size)"
                      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
                     (rule "Class_invariant_axiom_for_ArrayList" (formula "9") (inst "i=i_2") (inst "sk=sk_5") (ifseqformula "10"))
                     (branch "Use Axiom"
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
                        (rule "expandInRangeInt" (formula "9") (term "1,1,0"))
                        (rule "replace_int_MIN" (formula "9") (term "0,1,1,1,0"))
                        (rule "replace_int_MAX" (formula "9") (term "1,0,1,1,0"))
                        (rule "allRight" (formula "9") (inst "sk=i_2_0"))
                        (rule "impRight" (formula "9"))
                        (rule "andLeft" (formula "1"))
                        (rule "castedGetAny" (formula "11") (term "1,1,1"))
                        (rule "castedGetAny" (formula "11") (term "0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "JML_represents_clause_for_List_theList" (formula "11") (term "0,0,0,0") (inst "i=i_2") (inst "sk=sk_6") (inst "S=S") (ifseqformula "12"))
                        (branch "Use Axiom"
                           (rule "getOfSeqDef" (formula "11") (term "0,0,0"))
                           (rule "castDel" (formula "11") (term "2,0,0,0"))
                           (rule "castDel" (formula "11") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,2,1,0,0,0"))
                           (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,0,0"))
                           (rule "times_zero_2" (formula "11") (term "1,1,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "11") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,0"))
                           (rule "replace_known_left" (formula "11") (term "0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,0"))
                           (rule "JML_represents_clause_for_List_theList" (formula "2") (term "0,0") (inst "i=i_2") (inst "sk=sk_7") (inst "S=S") (ifseqformula "12"))
                           (branch "Use Axiom"
                              (rule "lenOfSeqDef" (formula "2") (term "0"))
                              (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                              (rule "times_zero_2" (formula "2") (term "1,1,0"))
                              (rule "add_zero_right" (formula "2") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                              (rule "JML_represents_clause_for_List_theList" (formula "11") (term "0,0,1,1") (inst "i=i_2") (inst "sk=sk_8") (inst "S=S") (ifseqformula "12"))
                              (branch "Use Axiom"
                                 (rule "getOfSeqDef" (formula "11") (term "0,1,1"))
                                 (rule "castDel" (formula "11") (term "1,0,1,1"))
                                 (rule "add_zero_right" (formula "11") (term "0,2,1,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,1,1"))
                                 (rule "times_zero_2" (formula "11") (term "1,1,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,1"))
                                 (rule "replace_known_left" (formula "11") (term "0,0,0,1,1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1,1"))
                                 (rule "JML_represents_clause_for_List_theList" (formula "11") (term "0,0,0,1") (inst "i=i_2") (inst "sk=sk_9") (inst "S=S") (ifseqformula "12"))
                                 (branch "Use Axiom"
                                    (rule "getOfSeqDef" (formula "11") (term "0,0,1"))
                                    (rule "castDel" (formula "11") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "11") (term "0,2,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "1,1,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "11") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1"))
                                    (rule "replace_known_left" (formula "11") (term "0,0,0,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,1"))
                                    (rule "commute_and" (formula "11") (term "1"))
                                    (rule "shift_paren_and" (formula "11"))
                                    (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=b"))
                                    (rule "variableDeclaration" (formula "14") (term "1") (newnames "b"))
                                    (rule "less_than_comparison_simple" (formula "14") (term "1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "7") (term "0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "arrayLengthNotNegative" (formula "7") (term "1,1,1,0"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "3"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "allLeft" (formula "11") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "11") (term "0,0,0,1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                    (rule "leq_literals" (formula "11") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "allLeft" (formula "10") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "10") (term "0,0,0,1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                    (rule "leq_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "allLeft" (formula "9") (inst "t=i_2_0"))
                                    (rule "replace_known_left" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                    (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                    (rule "leq_literals" (formula "9") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "closeFalse" (formula "9"))
                                 )
                                 (branch "Show Axiom Satisfiability"
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "closeTrue" (formula "11"))
                                 )
                              )
                              (branch "Show Axiom Satisfiability"
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "closeTrue" (formula "11"))
                              )
                           )
                           (branch "Show Axiom Satisfiability"
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "closeTrue" (formula "10"))
                           )
                        )
                        (branch "Show Axiom Satisfiability"
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "closeTrue" (formula "11"))
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
                        (rule "closeTrue" (formula "9"))
                     )
                  )
               )
               (branch "Null Reference (i_arr_1 = null)"
                   (builtin "One Step Simplification" (formula "13"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Show Axiom Satisfiability"
                (builtin "One Step Simplification" (formula "6"))
               (rule "closeTrue" (formula "6"))
            )
         )
         (branch "Show Axiom Satisfiability"
             (builtin "One Step Simplification" (formula "6"))
            (rule "closeTrue" (formula "6"))
         )
      )
      (branch "Show Axiom Satisfiability"
          (builtin "One Step Simplification" (formula "6"))
         (rule "closeTrue" (formula "6"))
      )
   )
   (branch "Show Axiom Satisfiability"
       (builtin "One Step Simplification" (formula "6"))
      (rule "closeTrue" (formula "6"))
   )
)
(branch "Show Axiom Satisfiability"
    (builtin "One Step Simplification" (formula "6"))
   (rule "closeTrue" (formula "6"))
)
)
}
