\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:showSatisfiability",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "soundDefaultContracts" : "soundDefaultContracts:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 500,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_NONE",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\programVariables {
  int i,j;
  Throwable thrown;
}
\problem {
   j = Z(0(#))
-> \<{
     thrown = null;
     try {
       i = i / j;
     } catch (Exception e) {
       thrown = e;
     }
   }\> !thrown = null
}

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))

(autoModeTime "347")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre,savedHeapAtPre,arg0AtPre,arg1AtPre,heapAtPre,savedHeapAtPre,arg0AtPre,arg1AtPre,heapAtPre,savedHeapAtPre,arg0AtPre,heapAtPre,savedHeapAtPre,vAtPre"))
(rule "assignment" (formula "2"))
(rule "assignmentDivisionInt" (formula "2") (term "1"))
 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
(rule "throwUnfold" (formula "2") (term "1") (inst "#v0=a"))
(rule "variableDeclarationAssign" (formula "2") (term "1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "a"))
(rule "instanceCreationAssignment" (formula "2") (term "1") (inst "#v0=a_1"))
(rule "variableDeclarationAssign" (formula "2") (term "1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "a_1"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "1") (inst "#v0=a_2"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "a_2"))
(rule "methodBodyExpand" (formula "2") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "2"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "1") (inst "#v0=a_3"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "a_3"))
(rule "allocateInstance" (formula "2"))
 (builtin "One Step Simplification" (formula "3"))
 (builtin "One Step Simplification" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "5"))
(rule "assignment_write_attribute_this" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallWithinClass" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment_write_attribute_this" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "assignment_write_attribute_this" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "5") (term "1"))
(rule "methodCallReturn" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment_write_attribute_this" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "assignment_write_attribute_this" (formula "5") (term "1"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment_write_attribute" (formula "5") (term "1"))
(branch "Normal Execution (a_1 != null)"
    (builtin "One Step Simplification" (formula "6"))
    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
   (rule "false_right" (formula "5"))
   (rule "assignment" (formula "5") (term "1"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "tryCatchThrow" (formula "5") (term "1"))
   (rule "ifElseUnfold" (formula "5") (term "1") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "b"))
   (rule "equality_comparison_simple" (formula "5") (term "1"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "replace_known_right" (formula "5") (term "0,0,1,0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "ifElseSplit" (formula "5"))
   (branch "if b true"
       (builtin "One Step Simplification" (formula "6"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if b false"
       (builtin "One Step Simplification" (formula "6"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "elim_double_block" (formula "5") (term "1"))
      (rule "ifElseSplit" (formula "5"))
      (branch "if a instanceof Exception true"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "5") (term "1") (newnames "e"))
         (rule "delete_unnecessary_cast" (formula "5") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "assignment" (formula "5") (term "1"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "emptyModality" (formula "5") (term "1"))
          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
         (rule "closeTrue" (formula "5"))
      )
      (branch "if a instanceof Exception false"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (a_1 = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
   (rule "closeFalse" (formula "1"))
)
)
}
