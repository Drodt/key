\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "soundDefaultContracts" : "soundDefaultContracts:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 10000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_NONE",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "src.templates";

\proofObligation 
// Proof-Obligation settings
{ 
    "class" : "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
    "contract" : "Disjoint[Disjoint::disjoint2_8()].JML operation contract.0",
    "name" : "Disjoint[Disjoint::disjoint2_8()].JML operation contract.0"
 }

\proof {
(keyLog "0" (keyUser "christoph" ) (keyVersion "98151b013121376e2e9354875c034e6e91892cac"))
(keyLog "1" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))
(keyLog "2" (keyUser "daniel" ) (keyVersion "c12e9dae06c00a26bb394e881da8d84a3a7e2ef1"))

(autoModeTime "774")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "12"))
(rule "disjointDefinition" (formula "15") (term "0,1,0,0"))
(rule "disjointDefinition" (formula "15") (term "0,1,1,0,0"))
(rule "disjointDefinition" (formula "15") (term "0,1,1,1,0,0"))
(rule "disjointDefinition" (formula "15") (term "0,1,1,1,1,0,0"))
(rule "disjointDefinition" (formula "15") (term "0,1,1,1,1,1,0,0"))
(rule "disjointDefinition" (formula "15") (term "0,1,1,1,1,1,1,0,0"))
(rule "disjointDefinition" (formula "15") (term "0,1,1,1,1,1,1,1,0,0"))
(rule "disjointDefinition" (formula "15") (term "0,1,1,1,1,1,1,1,1,0,0"))
(rule "disjointDefinition" (formula "5"))
(rule "disjointDefinition" (formula "6"))
(rule "disjointDefinition" (formula "7"))
(rule "disjointDefinition" (formula "8"))
(rule "disjointDefinition" (formula "9"))
(rule "disjointDefinition" (formula "10"))
(rule "disjointDefinition" (formula "11"))
(rule "disjointDefinition" (formula "12"))
(rule "assignment" (formula "15"))
(rule "Class_invariant_axiom_for_Disjoint" (formula "13") (ifseqformula "3"))
(rule "true_left" (formula "13"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_disjoint2_8,savedHeapBefore_disjoint2_8"))
 (builtin "One Step Simplification" (formula "14"))
 (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_disjointHelper2_8,exc_0,heapAfter_disjointHelper2_8,anon_heap_disjointHelper2_8") (contract "Disjoint[Disjoint::disjointHelper2_8()].JML operation contract.0") (modality "diamond"))
(branch "Post (disjointHelper2_8)"
    (builtin "One Step Simplification" (formula "14"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "typeEqDerived" (formula "16") (term "0,1,1,1,1") (ifseqformula "15"))
   (rule "typeEqDerived" (formula "16") (term "0,0,1,1,1") (ifseqformula "15"))
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "23"))
   (rule "disjointDefinition" (formula "16"))
   (rule "disjointDefinition" (formula "17"))
   (rule "disjointDefinition" (formula "18"))
   (rule "disjointDefinition" (formula "19"))
   (rule "disjointDefinition" (formula "20"))
   (rule "disjointDefinition" (formula "21"))
   (rule "disjointDefinition" (formula "22"))
   (rule "disjointDefinition" (formula "23"))
   (rule "pullOutSelect" (formula "16") (term "1,0") (inst "selectSK=Disjoint_rep1_0"))
   (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "26")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "16") (term "0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0,0,0"))
   (rule "pullOutSelect" (formula "17") (term "0,0") (inst "selectSK=Disjoint_rep_0"))
   (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "17"))
   (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "17"))
   (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "17"))
   (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "17"))
   (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "17"))
   (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "17"))
   (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "17"))
   (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "17") (term "0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0,0,0"))
   (rule "pullOutSelect" (formula "19") (term "1,0") (inst "selectSK=Disjoint_rep2_0"))
   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "19") (term "0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0,0,0"))
   (rule "pullOutSelect" (formula "21") (term "1,0") (inst "selectSK=Disjoint_rep3_0"))
   (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "29")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "21") (term "0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0,0"))
   (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=Disjoint_rep4_0"))
   (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "23") (term "0,0"))
   (rule "elementOfUnion" (formula "23") (term "0,0,0"))
   (rule "elementOfUnion" (formula "23") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "23") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "23") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "23") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "23") (term "0,0,0,0,0,0,0,0"))
   (rule "pullOutSelect" (formula "25") (term "1,0") (inst "selectSK=Disjoint_rep5_0"))
   (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "31")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "25") (term "0,0"))
   (rule "elementOfUnion" (formula "25") (term "0,0,0"))
   (rule "elementOfUnion" (formula "25") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0,0,0,0"))
   (rule "pullOutSelect" (formula "27") (term "1,0") (inst "selectSK=Disjoint_rep6_0"))
   (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "27") (term "0,0"))
   (rule "elementOfUnion" (formula "27") (term "0,0,0"))
   (rule "elementOfUnion" (formula "27") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "27") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "27") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "27") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "27") (term "0,0,0,0,0,0,0,0"))
   (rule "pullOutSelect" (formula "29") (term "1,0") (inst "selectSK=Disjoint_rep7_0"))
   (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "29") (term "0,0"))
   (rule "elementOfUnion" (formula "29") (term "0,0,0"))
   (rule "elementOfUnion" (formula "29") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "29") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "29") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "29") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "29") (term "0,0,0,0,0,0,0,0"))
   (rule "pullOutSelect" (formula "31") (term "1,0") (inst "selectSK=Disjoint_rep8_0"))
   (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "34")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "31") (term "0,0"))
   (rule "elementOfUnion" (formula "31") (term "0,0,0"))
   (rule "elementOfUnion" (formula "31") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "31") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "31") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "31") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "31") (term "0,0,0,0,0,0,0,0"))
   (rule "commuteIntersection" (formula "18") (term "0"))
   (rule "commuteIntersection" (formula "20") (term "0"))
   (rule "commuteIntersection" (formula "22") (term "0"))
   (rule "commuteIntersection" (formula "24") (term "0"))
   (rule "commuteIntersection" (formula "26") (term "0"))
   (rule "commuteIntersection" (formula "28") (term "0"))
   (rule "commuteIntersection" (formula "30") (term "0"))
   (rule "commuteIntersection" (formula "32") (term "0"))
   (rule "Class_invariant_axiom_for_Disjoint" (formula "33") (ifseqformula "3"))
   (rule "true_left" (formula "33"))
   (rule "methodCallEmpty" (formula "34") (term "1"))
   (rule "tryEmpty" (formula "34") (term "1"))
   (rule "emptyModality" (formula "34") (term "1"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0,0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "1,0,0"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0,0,0,1"))
   (rule "replaceKnownSelect_taclet0_2" (formula "34") (term "1,0,0,1"))
   (rule "replaceKnownSelect_taclet0_3" (formula "34") (term "1,0,0,1,1"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0,0,0,1,1"))
   (rule "replaceKnownSelect_taclet0_4" (formula "34") (term "1,0,0,1,1,1"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0,0,0,1,1,1"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0,0,0,1,1,1,1"))
   (rule "replaceKnownSelect_taclet0_5" (formula "34") (term "1,0,0,1,1,1,1"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0,0,0,1,1,1,1,1"))
   (rule "replaceKnownSelect_taclet0_6" (formula "34") (term "1,0,0,1,1,1,1,1"))
   (rule "replaceKnownSelect_taclet0_7" (formula "34") (term "1,0,0,1,1,1,1,1,1"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0,0,0,1,1,1,1,1,1"))
   (rule "replaceKnownSelect_taclet0_1" (formula "34") (term "0,0,0,1,1,1,1,1,1,1"))
   (rule "replaceKnownSelect_taclet0_8" (formula "34") (term "1,0,0,1,1,1,1,1,1,1"))
   (rule "commuteIntersection" (formula "34") (term "0,0"))
   (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "commuteIntersection" (formula "34") (term "0,0,1,1,1,1"))
   (rule "replace_known_left" (formula "34") (term "0,1,1,1,1") (ifseqformula "28"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "commuteIntersection" (formula "34") (term "0,0,1,1,1,1"))
   (rule "replace_known_left" (formula "34") (term "0,1,1,1,1") (ifseqformula "30"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "commuteIntersection" (formula "34") (term "0,0,1,1,1"))
   (rule "replace_known_left" (formula "34") (term "0,1,1,1") (ifseqformula "26"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "commuteIntersection" (formula "34") (term "0,0"))
   (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "20"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "commuteIntersection" (formula "34") (term "0,0"))
   (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "commuteIntersection" (formula "34") (term "0,0,1"))
   (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "32"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "commuteIntersection" (formula "34") (term "0,0"))
   (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "24"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "Class_invariant_axiom_for_Disjoint" (formula "34") (ifseqformula "3"))
   (rule "closeTrue" (formula "34"))
)
(branch "Exceptional Post (disjointHelper2_8)"
    (builtin "One Step Simplification" (formula "16"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "15"))
   (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")))
   (rule "ifthenelse_negated" (formula "15") (term "0"))
   (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "16"))
   (rule "ifEqualsTRUE" (formula "15"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "hideAuxiliaryEqConcrete" (formula "16"))
   (rule "Class_invariant_axiom_for_Disjoint" (formula "16") (ifseqformula "3"))
   (rule "true_left" (formula "16"))
   (rule "cnf_rightDist" (formula "15"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "commute_or" (formula "15"))
   (rule "methodCallThrow" (formula "19") (term "1"))
   (rule "tryCatchThrow" (formula "19") (term "1"))
   (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "b"))
   (rule "equality_comparison_simple" (formula "19") (term "1"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "replace_known_right" (formula "19") (term "0,0,1,0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "ifElseSplit" (formula "19"))
   (branch "if b true"
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if b false"
       (builtin "One Step Simplification" (formula "20"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "elim_double_block" (formula "19") (term "1"))
      (rule "ifElseSplit" (formula "19"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "e"))
         (rule "delete_unnecessary_cast" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "assignment" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "emptyModality" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "16")))
         (rule "Class_invariant_axiom_for_Disjoint" (formula "19") (ifseqformula "3"))
         (rule "closeTrue" (formula "19"))
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Pre (disjointHelper2_8)"
    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
   (rule "disjointDefinition" (formula "14") (term "0,1,1,1,1,1,1"))
   (rule "replace_known_left" (formula "14") (term "0,1,1,1,1,1,1") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "disjointDefinition" (formula "14") (term "0,1,1,1"))
   (rule "replace_known_left" (formula "14") (term "0,1,1,1") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "disjointDefinition" (formula "14") (term "0"))
   (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "5"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "disjointDefinition" (formula "14") (term "0,1,1,1,1"))
   (rule "replace_known_left" (formula "14") (term "0,1,1,1,1") (ifseqformula "12"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "disjointDefinition" (formula "14") (term "0,1,1,1"))
   (rule "replace_known_left" (formula "14") (term "0,1,1,1") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "disjointDefinition" (formula "14") (term "0"))
   (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "disjointDefinition" (formula "14") (term "0,1"))
   (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "disjointDefinition" (formula "14") (term "0"))
   (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "Class_invariant_axiom_for_Disjoint" (formula "14") (ifseqformula "3"))
   (rule "closeTrue" (formula "14"))
)
)
}
