
//
//

// *** THESE RULES ARE FOR JUnit TESTS. PLEASE DO NOT MODIFY! ***
// *** THIS FILE WILL BE MOVED TO A DIFFERENT PLACE. ***
// Input file for KeY standalone prover version 0.497

\programVariables {
	int i;
	int j;
}

\sorts {
	nat;
	int;
	s;
	\generic G;
}

\predicates {  
	p(s);
	A;
	B;
	D;
}
\functions {
	s const;
	s f(s);
}


\schemaVariables {

	\formula b, c;

} 


\rules { 

  close_goal { \assumes (b ==>) \find (==> b) \closegoal };
  close_by_false { \find (false ==>) \closegoal };
  close_by_true  { \find (==> true) \closegoal };
  true_left    { \find (true ==>) \replacewith(==>) };
  false_right  { \find (==> false) \replacewith(==>) };

  not_left  { \find (! b ==>) \replacewith(==> b) };
  not_right { \find (==> ! b) \replacewith(b ==>) };

  imp_left  { \find (b -> c ==>) 
		\replacewith(==> b); 
                \replacewith(c ==>) };
  imp_right { \find (==> b -> c) \replacewith(b ==> c) };


  and_left  { \find (b & c ==>) \replacewith(b, c ==>) };
  and_right { \find (==> b & c) \replacewith(==> b); \replacewith(==> c) };
  or_left   { \find (b | c ==>) \replacewith(b ==>); \replacewith(c ==>) };
  or_right  { \find (==> b | c) \replacewith(==> b, c) };
  equiv_left   { \find (b <-> c ==>) 
		      \replacewith(b, c ==>); 
                      \replacewith(==> b, c) };
  
  equiv_right  { \find (==> b <-> c) 
		      \replacewith(b ==> c);
                      \replacewith(c ==> b) };

} 
