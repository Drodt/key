/* This file is part of KeY - https://key-project.org
 * KeY is licensed under the GNU General Public License Version 2
 * SPDX-License-Identifier: GPL-2.0-only */
package org.key_project.rusty.proof.mgt;

import java.util.LinkedHashSet;
import java.util.Set;

import org.key_project.rusty.Services;
import org.key_project.rusty.proof.ProofAggregate;
import org.key_project.rusty.proof.init.InitConfig;
import org.key_project.rusty.proof.init.ProofOblInput;

public class ProofEnvironment {
    private final InitConfig initConfig;
    private final Set<ProofAggregate> proofs = new LinkedHashSet<>(); // of ProofList

    /**
     * constructs a proof environment with the given initial configuration of the proofs contained
     * in the environment.
     */
    public ProofEnvironment(InitConfig initConfig) {
        this.initConfig = initConfig;
    }

    /**
     * returns the {@link Services} instance for the environment
     *
     * @return the {@link Services} instance for the environment
     */
    public Services getServicesForEnvironment() {
        return initConfig.getServices();
    }


    /**
     * returns the initial configuration of which a copy can be used to load proofs belonging to
     * this environment.
     */
    public InitConfig getInitConfigForEnvironment() {
        return initConfig;
    }

    /**
     * registers a proof loaded with the given {@link de.uka.ilkd.key.proof.init.ProofOblInput}. The
     * method adds the proof list generated by the input to the suitable contract if one is found.
     * In all cases the proof is added to the proofs of this environment and the proofs are marked
     * to belong to this environment.
     */
    public void registerProof(ProofOblInput po, ProofAggregate pl) {
        // pl.setProofEnv(this);
        proofs.add(pl);
        /*
         * for (Proof p : pl.getProofs()) {
         * getServicesForEnvironment().getSpecificationRepository().registerProof(po, p);
         * }
         */
    }

    /**
     * retrieves all proofs registered at this environment
     */
    public Set<ProofAggregate> getProofs() {
        return proofs;
    }
}
