\sorts {
    numbers;
    int;
}

\functions {
    numbers #;
    numbers 0(numbers);
    numbers 1(numbers);
    numbers 2(numbers);
    numbers 3(numbers);
    numbers 4(numbers);
    numbers 5(numbers);
    numbers 6(numbers);
    numbers 7(numbers);
    numbers 8(numbers);
    numbers 9(numbers);
    numbers neglit(numbers);

    int Z(numbers);
    // arithmetic operators on mathematical integers
    int add(int, int);
    int neg(int);
    int sub(int, int);
    int mul(int, int);
    int div(int, int);
    int mod(int, int);
    int pow(int, int);
    int log(int, int);

    int u8_MIN;
    int u8_MAX;
    int u16_MIN;
    int u16_MAX;
    int u32_MIN;
    int u32_MAX;
    int u64_MIN;
    int u64_MAX;
    int u128_MIN;
    int u128_MAX;
    int usize_MIN;
    int usize_MAX;
    int i8_MIN;
    int i8_MAX;
    int i16_MIN;
    int i16_MAX;
    int i32_MIN;
    int i32_MAX;
    int i64_MIN;
    int i64_MAX;
    int i128_MIN;
    int i128_MAX;
    int isize_MIN;
    int isize_MAX;
}

\predicates {
    // ----------------------------------------------------------------------------
    // The predicates declared below preserve their semantics independently
    // from the current integer semantics.
    // ----------------------------------------------------------------------------

    leq(int, int);
    lt(int, int);
    geq(int, int);
    gt(int, int);

    in_u8(int);
    in_u16(int);
    in_u32(int);
    in_u64(int);
    in_u128(int);
    in_usize(int);
    in_i8(int);
    in_i16(int);
    in_i32(int);
    in_i64(int);
    in_i128(int);
    in_isize(int);
}
